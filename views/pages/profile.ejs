<!doctype html>
<html lang="en-NG">

  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta name="description" content=""><!-- dynamically load their profile -->
    <meta name="author" content="">
    <link rel="icon" href="assets/images/1/favicon.ico" type="image/x-icon">
    
    <title>Edit profile &#183; <%= corper.statecode %></title>

    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" integrity="sha384-JcKb8q3iqJ61gNV9KGb8thSsNjpSL0n8PARn9HuZOnIxN0hoP+VmmDGMN5t9UJ0Z" crossorigin="anonymous">

    <!-- Custom styles for this template, do we need this? we can't even find it! -->
    <!-- <link href="form-validation.css" rel="stylesheet"> -->

    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.3.4/dist/leaflet.css"
      integrity="sha512-puBpdR0798OZvTTbP4A8Ix/l+A4dHDD0DGqYW6RQ+9jxkRFclaxxQb/SJAWZfWAkuyeQUytO7+7N4QKrDh+drA=="
      crossorigin="" />

    <!-- ask questions about places on maps! -->
    <!-- Make sure you put this AFTER Leaflet's CSS -->
    <script src="https://unpkg.com/leaflet@1.3.4/dist/leaflet.js"
      integrity="sha512-nMMmRyTVoLYqjP9hrbed9S+FzjZHW5gY1TWCHA5ckwXZBadntCNs8kEqAWdrb9O7rxbCaA4lKTIWjDXZxflOcA=="
      crossorigin=""></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js"
    integrity="sha256-FgpCb/KJQlLNfOu91ta32o/NMZxltwRo8QtmkMRdAu8=" crossorigin="anonymous"></script>
    <style>
      .head-pic {
        margin-left: 20%;
      }

      /* Small devices (landscape phones, 576px and up) */
      @media (min-width: 576px) { 
        .head-pic {
          margin-left: 30%;
        }
       }

      /* Medium devices (tablets, 768px and up) */
      @media (min-width: 768px) {
        .head-pic {
          margin-left: 36%;
        }
      }

      textarea#bio {
          min-height: 110px;
      }

      #profile-picture-preview {
        width: 90px;
        height: 90px;
      }

      .accommodation-posts-preview-image {
        width: inherit;
        height: 100%;
      }

      #alert-div {
        left: auto;
        right: auto;
      }
    </style>
    <script async defer data-website-id="58dce5f5-c238-4e98-b2c6-e701c258f01d" src="https://using-umami.herokuapp.com/umami.js" data-domains="corpers.online,www.corpers.online"></script>
  </head>

  <body class="bg-light">

    <div class="container">


      <div class="pt-5 text-center">
        <!-- their profile picture -->
        
        <div style="display: flex;">
          <div>
            <a href="/<%= corper.statecode %>">&larr; Your page</a>
          </div>
          <img class="d-block mr-auto mb-4 rounded head-pic"
          src="<%- ( corper.mediaId ? corper.Medium.urls[0] : 'data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%2245%22%20height%3D%2245%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%2045%2045%22%20preserveAspectRatio%3D%22none%22%3E%3Cdefs%3E%3Cstyle%20type%3D%22text%2Fcss%22%3E%23holder_167df8c1bbc%20text%20%7B%20fill%3A%23AAAAAA%3Bfont-weight%3Abold%3Bfont-family%3AArial%2C%20Helvetica%2C%20Open%20Sans%2C%20sans-serif%2C%20monospace%3Bfont-size%3A10pt%20%7D%20%3C%2Fstyle%3E%3C%2Fdefs%3E%3Cg%20id%3D%22holder_167df8c1bbc%22%3E%3Crect%20width%3D%2245%22%20height%3D%2245%22%20fill%3D%22%23EEEEEE%22%3E%3C%2Frect%3E%3Cg%3E%3Ctext%20x%3D%223.96875%22%20y%3D%2226.896875%22%3E' + corper.statecode.slice(0, 2) + ' ' + corper.statecode.slice(3, 5) + '%3C%2Ftext%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E' ) %>" alt="<%= corper.statecode %> profile picture"
            width="72" height="72">
            
        </div>
        <h2><%= corper.statecode %></h2>
        <p class="lead">Profile update.</p>
      </div>

      <ul class="nav nav-tabs" id="myTab" role="tablist">
        <li class="nav-item" role="presentation">
          <a class="nav-link active" id="bio-tab" data-toggle="tab" href="#bio" role="tab" aria-controls="bio" aria-selected="true">Bio</a>
        </li>
        <li class="nav-item" role="presentation">
          <a class="nav-link" id="post-history-tab" data-toggle="tab" href="#post-history" role="tab" aria-controls="post-history" aria-selected="false">Post history</a>
        </li>
      </ul>
      <div class="tab-content" id="myTabContent">
        <div class="tab-pane fade show active" id="bio" role="tabpanel" aria-labelledby="bio-tab">
    
          <div class="row mt-4">
            <!--  -->
            <div class="col-md-4 order-md-2 mb-4 d-sm-none d-md-block" id="mapid">
              <!-- when map loads, it doesn't fill the whole space until we readjust the screen -->
              <!-- Hidden only on sm -->
              <!-- make the map 50% in height and class h-50 not working...yet -->
              <!-- <h4 class="d-flex justify-content-between align-items-center mb-3">
                <span class="text-muted">Map</span>
                <span class="badge badge-secondary badge-pill">3</span>
              </h4>
              <ul class="list-group mb-3">
                <li class="list-group-item d-flex justify-content-between lh-condensed">
                  <div>
                    <h6 class="my-0">Product name</h6>
                    <small class="text-muted">Brief description</small>
                  </div>
                  <span class="text-muted">$12</span>
                </li>
                <li class="list-group-item d-flex justify-content-between lh-condensed">
                  <div>
                    <h6 class="my-0">Second product</h6>
                    <small class="text-muted">Brief description</small>
                  </div>
                  <span class="text-muted">$8</span>
                </li>
                <li class="list-group-item d-flex justify-content-between lh-condensed">
                  <div>
                    <h6 class="my-0">Third item</h6>
                    <small class="text-muted">Brief description</small>
                  </div>
                  <span class="text-muted">$5</span>
                </li>
                <li class="list-group-item d-flex justify-content-between bg-light">
                  <div class="text-success">
                    <h6 class="my-0">Promo code</h6>
                    <small>EXAMPLECODE</small>
                  </div>
                  <span class="text-success">-$5</span>
                </li>
                <li class="list-group-item d-flex justify-content-between">
                  <span>Total (USD)</span>
                  <strong>$20</strong>
                </li>
              </ul>
    
              <form class="card p-2">
                <div class="input-group">
                  <input type="text" class="form-control" placeholder="Promo code">
                  <div class="input-group-append">
                    <button type="submit" class="btn btn-secondary">Redeem</button>
                  </div>
                </div>
              </form> -->
            </div>
    
            <script>
              var mymap = L.map('mapid', {
                tilt: true,
                zoomControl: false
              })
                .setView([5.5216578, 7.5066884], 16);
    
    
                L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                        attribution: '<a href="https://www.openstreetmap.org/">OpenStreetMap</a>, <a href="https://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, <a href="https://www.mapbox.com/">Mapbox</a>',
                        maxZoom: 18,
                        id: 'mapbox.streets',
                        accessToken: 'pk.eyJ1IjoiY2h1a3MwMDciLCJhIjoiY2psOW1iZ2x0MXRoczNycGJwdzhpOGZhbCJ9.z03GKFAu-scE70Z1JKagOg'
                })
                .addTo(mymap);
    
              L.control.zoom({
                position: 'topright'
              })
                .addTo(mymap);
    
              // loader for when map is loading
              mymap.on('loading', function (event) {
                console.log('start loading tiles');
              });
              mymap.on('load', function (event) {
                console.log('all tiles loaded');
              });
              mymap.on('tileloadstart', function (event) {
                console.log('start loading 1 tile');
              });
            </script>
    
            <!-- main form -->
            <div class="col-md-8 order-md-1">
              <h4 class="mb-3">Service details</h4><!--fill the form values if the corper has filled them before-->
              <form class="needs-validation" id="profile-form">
                <div class="row">
                  <div class="col-md-6 mb-3">
                    <label for="servicestate">Service state</label>
                    <!-- <input type="text" class="form-control" id="firstName" placeholder="" value="" required> -->
                    <select id="servicestate" name="servicestate" class="custom-select" disabled required>
                      <!-- use server side to render all this list and choose the one the user is from -->
                      <% for (i = 0; i < states.length; i++) { %>
                      <option value="<%= states[i] %>" <%= (corper.servicestate == states[i] ? 'selected="true"' : '') %>>
                        <%= states[i] %></option>
                      <% } %>
                    </select>
                    <div class="invalid-feedback">
                      Uhmm, I think we've got this handled <!-- ??? why this ?? -->
                    </div>
                    <div class="custom-control custom-checkbox">
                      <input name="relocated" type="checkbox" class="custom-control-input" id="relocated" value="relocated">
                      <label class="custom-control-label" style="line-height: normal;" for="relocated">Relocated ?</label>
                    </div>
                  </div>
                  <div class="col-md-6 mb-3">
                    <label for="lgas">LGA</label>
                    <select name="lga" id="lgas" class="custom-select">
                      <% if (!corper.lga) { %>
                        <option value="">
                          Select LGA
                        </option>
                      <% } %>
                      <% for (i = 0; i < lgas.length; i++) { %>
                        <option value="<%= lgas[i] %>" <%- (corper.lga && corper.lga == lgas[i] ? 'selected="true"' : '') %>>
                          <%= lgas[i] %>
                        </option>
                      <% } %>
                    </select>
                    <div class="invalid-feedback">
                      Just choose a LGA please
                    </div>
                  </div>
                </div>
    
                <div class="row">
                  <div class="col-md-6 mb-3">
                    <label for="city_town">City or Town</label>
                    <input type="text" value="<%= corper.city_town %>" class="form-control" name="city_town" id="city_town" placeholder="">
                    <!--not really required-->
                    <div class="invalid-feedback">
                      Please select a valid city or town.
                    </div>
                  </div>
                  <div class="col-md-6 mb-3">
                    <label for="region_street">Street <!-- or Region --><span class="text-muted">(Optional)</span></label>
                    <input type="text" class="form-control" value="<%= corper.region_street %>" name="region_street" id="region_street" placeholder="">
                    <div class="invalid-feedback">
                      Please provide a valid region or street name.
                    </div>
                  </div>
                  <!-- <div class="col-md-6 mb-3">
                      <label for="zip">Zip</label>
                      <input type="text" class="form-control" id="zip" placeholder="" required>
                      <div class="invalid-feedback">
                        Zip code required.
                      </div>
                    </div> -->
                </div>
    
                <div class="row">
                  <div class="col-md-6 mb-3">
                    <label for="stream">Stream</label>
                    <input type="number"  value="<%= (corper.stream ? corper.stream : '') %>" min="1" max="3" list="stream" class="form-control" name="stream" id=""
                      placeholder="Select 1, 2 or 3">
                    <datalist id="stream">
                      <option value="1">1</option>
                      <option value="2">2</option>
                      <option value="3">3</option>
                    </datalist>
                    <div class="invalid-feedback">
                      Your stream is either 1, 2 or 3. Sure you're a corper?
                    </div>
                  </div>
                  <div class="col-md-6 mb-3" id="newss" style="display: none">
                    <label for="newstatecode">New state code</label>
                    <input type="text" class="form-control text-uppercase" value="" name="newstatecode" id="nsc" placeholder="TR/18A/1234">
                    <div class="invalid-feedback">
                      Please provide a valid statecode.
                    </div>
                  </div>
                </div>
    
                <script>
                  // if the relocated check box is checked, and the page is reoladed, the check box remains checked but the new state code input is invisible
                  document.getElementById('relocated')
                    .addEventListener('change', (e) => {
                      console.log(e)
                      
                      var uppercaseStates = 'AB|AD|AK|AN|BA|BY|BN|BO|CR|DT|EB|ED|EK|EN|FC|GM|IM|JG|KD|KN|KT|KB|KG|KW|LA|NS|NG|OG|OD|OS|OY|PL|RV|SO|TR|YB|ZM';
                        var lowercaseStetes = 'ab|ad|ak|an|ba|by|bn|bo|cr|dt|eb|ed|ek|en|fc|gm|im|jg|kd|kn|kt|kb|kg|kw|la|ns|ng|og|od|os|oy|pl|rv|so|tr|yb|zm';
                      if (e.target.checked) {
                        console.log('yess')
                        document.getElementById('servicestate')
                          .disabled = false;
                        document.getElementById('newss')
                          .style.display = 'block';
    
                          var years = parseInt(new Date(Date.now())
                          .getFullYear()
                          .toFixed()
                          .slice(2, 4));
                        var yearrange = '(' + (years - 1).toString() + '|' + years.toString() + ')';
                        console.log('the year range', yearrange)
                        document.forms[0].elements[6].pattern = '('+uppercaseStates+'|'+lowercaseStetes+')'+'\\/' + yearrange + '[abcACB]\\/\\d\\d\\d\\d'; // extra escaping probably because we're setting with string from here and not directly from the pattern attribute
                        // document.forms[0].elements[6].pattern = 'AB|AD|AK|AN|BA|BY|BN|BO|CR|DT|EB|ED|EK|EN|FC|GM|IM|JG|KD|KN|KT|KB|KG|KW|LA|NS|NG|OG|OD|OS|OY|PL|RV|SO|TR|YB|ZM|ab|ad|ak|an|ba|by|bn|bo|cr|dt|eb|ed|ek|en|fc|gm|im|jg|kd|kn|kt|kb|kg|kw|la|ns|ng|og|od|os|oy|pl|rv|so|tr|yb|zm\\/' + yearrange + '[abcACB]\\/\\d\\d\\d\\d'; // extra escaping probably because we're setting with string from here and not directly from the pattern attribute
    
                        document.getElementById('nsc')
                          .oninvalid = function (event) {
                            event.target.setCustomValidity("State code should start with a valid state abbrevation, have forward slashes, appropriate batch, and four trailing digits. Right?");
                          }
                      } else {
                        document.getElementById('servicestate')
                          .disabled = true;
                        document.getElementById('newss')
                          .style.display = 'none';
                        // set the value back to the default
                        document.getElementById('servicestate')
                          .value = "<%= corper.servicestate %>";
                      }
    
                      // make this call once! how ? by putting it outside the change event listener, and always using it's results once we notice a change
                      // how can I know if and when the fetch api was aborted https://developers.google.com/web/updates/2017/09/abortable-fetch
                      const controller = new AbortController();
                      const signal = controller.signal;
    
                      setTimeout(() => controller.abort(), 5000);
                      //once we get the geo coordinates, first we get the name of the place., nominatium isn't perfect yet, will just be saving data from it to compare the accuracy we get
                      fetch('/allstateslgas', {
                        signal
                      })
                        .then(function (response) {
                          if (response.status !== 200) {
                            console.log('Looks like there was a problem. Status Code: ' +
                              response.status);
                            return;
                          }
    
                          // Examine the text in the response AND WHY IS CORDINATES NOT SAVING TO savePoint variable
                          response.json()
                            .then(function (data) {
                              console.log('stateslgas', data);
    
                              var k = uppercaseStates.split('|');
                              var l = lowercaseStetes.split('|');
                              // add event listner to service state input
                              document.getElementById('servicestate')
                                .addEventListener('change', (e) => {
                                  console.log('changed state', e.target.value)
                                  // console.log(data.states) // [e.target.value]
                                  var it = e.target.value;
                                  var thestate = data.states.find((eachElement, index) => {
    
                                    if (eachElement[it]) {
                                      console.log(k[index], l[index]);
    
                                      // create a new pattern attribute based on the state that was selected
                                      document.forms[0].elements[6].pattern = k[index] + '|' + l[index] +'\\/' + yearrange + '[abcACB]\\/\\d\\d\\d\\d'; // extra escaping probably because we're setting with string from here and not directly from the pattern attribute
                                    }
                                    return eachElement[it];
    
                                  })
    
                                  // console.log('it', thestate[it])
    
                                  var thelgas = thestate[it];
    
                                  theLGAsInputElement = document.getElementById('lgas');
                                  theLGAsInputElement.options.length = 0; // removes all options
    
                                  // starts creating the new LGAs options for the lga select input
                                  for (let index = 0; index < thelgas.length; index++) {
                                    const element = thelgas[index];
                                    theLGAsInputElement.options[index] = new Option(element, element) // new Option(text, value)
                                  }
    
                                }, false);
                            });
                        })
                        .catch(function (err) {
                          //console.log('Fetch Error :-S', err);
                          if (err.name === 'AbortError') {
                            console.log('Fetch aborted');
                          } else {
                            console.error('Uh oh, an error! Fetch Error :-S', err);
                          }
                        });
                    }, false)
                </script>
                <hr class="mb-4">
    
                <h4 class="mb-3" id="PPA">PPA details</h4>
    
                <div class="row">
                  <div class="col-md-6 mb-3">
                    <label for="name_of_ppa">Name of PPA</label>
                    <input type="text" class="form-control" list="names" name="name_of_ppa" id="name_of_ppa" placeholder="St. Marys Model Secondary School"
                    value="<%= (corper.PPA ? corper.PPA.name : '') %>">
                    <% if (ppas.length > 0) { %>
                    <datalist id="names">
                      <% for (let q = 0; q < ppas.length; q++) { %>
    
                      <option value="<%= ppas[q].name %>">
                        <%= ppas[q].name %>
                      </option>
    
                      <% } %>
                    </datalist>
                    <% } %>
                    <!-- based on the name of the ppa provided, we should be able to predict the type of institution it is and fill it in for the user -->
                    <!-- <datalist id="names">
                      <option value="1">1</option>
                      <option value="2">2</option>
                      <option value="3">3</option>
                    </datalist> -->
    
                    <small class="text-muted">So other corpers can find it.</small>
                    <div class="invalid-feedback">
                      Please provide us with the name of your PPA
                    </div>
                  </div>
                  <div class="col-md-6 mb-3">
                    <label for="type_of_ppa">Type of Institution</label> <!--Should be like a dropdown or have suggestions list-->
                    <input type="text" value="<%= (corper.PPA ? corper.PPA.type_of_ppa : '') %>" class="form-control" name="type_of_ppa" id="type_of_ppa" placeholder="" required>
                    <small class="text-muted">School, Bank, Hospital, Gov. Institution, etc.</small>
                    <div class="invalid-feedback">
                      This helps us easily categorize.
                    </div>
                  </div>
                </div>
    
                <div class="mb-3 d-none" style="display: none">
                  <label for="ppa_geodata">Geo data <span class="text-muted">(Optional, but kinda important)</span></label>
                  <input type="text" name="ppa_geodata" class="form-control" id="ppa_geodata">
                  <small class="text-muted">We are trying to get an accurate as possible data, so we might ask you to try
                    again if what we got won't be of help to other corpers.</small>
                </div>
    
                <div class="mb-3">
                  <label for="ppa_address">PPA address</label>
                  <div class="input-group">
                    <input type="text" class="form-control" list="ppaaddr" name="ppa_address" id="ppa_address"
                      placeholder="Opposite Ijukaya Estate, Favos, Umuahia" value="<%= (corper.PPA && corper.PPA.Location?.address ? corper.PPA.Location.address : '') %>">
                    <div class="input-group-append">
                      <a id="geo" class="btn btn-secondary">Geo</a>
                    </div>
                  </div>
                  
                  <% if (ppas.length > 0) { %>
                  <datalist id="ppaaddr">
                    <% for (let w = 0; w < ppas.length; w++) { %>
                      <!--
                        sometimes ppas[w].Location would be defined, but .address property empty ... ppas[w].Location.address check might be redundant ... needs optimization
                      -->
                      <% if (ppas[w].Location && ppas[w].Location.address && ppas[w].name) { %>
                        <option value="<%= ppas[w].Location.address %>"><%= ppas[w].name %></option>
                      <% } %>
                    <% } %>
                  </datalist>
                  <% } %>

                  <small class="text-muted">
                    If you're at your PPA right now, help other corpers find it! Click the 'Geo' button to save your PPA on the map.
                  </small>
                  <!-- if we already have a very accurate location of the ppa, we don't need geo, but if we don't have then we can show geo and ask the user to help us locate it -->
                  <!-- <div class="input-group">
                    <div class="input-group-prepend">
                      <span class="input-group-text">@</span>
                    </div>
                    <input type="text" class="form-control" id="username" placeholder="Username" required>
                    <div class="invalid-feedback" style="width: 100%;">
                      Your username is required.
                    </div>
                  </div> -->
                  <div id="mapid2" style="height: 250px;" class="d-block d-sm-none   d-none d-sm-block d-md-none">
                    <!-- Visible only on xs    Visible only on sm -->
    
                  </div>
                  <script>
                    var mymap2 = L.map('mapid2', {
                      tilt: true,
                      zoomControl: false
                    }).setView([5.5216578, 7.5066884], 16);
    
                    // https://api.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token=pk.eyJ1IjoiY2h1a3MwMDciLCJhIjoiY2psOW1iZ2x0MXRoczNycGJwdzhpOGZhbCJ9.z03GKFAu-scE70Z1JKagOg
                    var basemap = L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                        attribution: '<a href="https://www.openstreetmap.org/">OpenStreetMap</a>, <a href="https://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, <a href="https://www.mapbox.com/">Mapbox</a>',
                        maxZoom: 18,
                        id: 'mapbox.streets',
                        accessToken: 'pk.eyJ1IjoiY2h1a3MwMDciLCJhIjoiY2psOW1iZ2x0MXRoczNycGJwdzhpOGZhbCJ9.z03GKFAu-scE70Z1JKagOg'
                    })
                    .addTo( mymap2 );
    
                    L.control.zoom({
                      position: 'topright'
                    })
                      .addTo(mymap2);
    
    
                    // loader for when map is loading
                    mymap2.on('loading', function (event) {
                      console.log('start loading tiles');
                    });
                    mymap2.on('load', function (event) {
                      console.log('all tiles loaded');
                    });
                    mymap2.on('tileloadstart', function (event) {
                      console.log('start loading 1 tile');
                    });
                  </script>
                </div>
    
    
                <div class=" mb-3">
                  <label for="lgas">Directions</label>
                  <textarea class="form-control" name="ppa_directions" id="pd" spellcheck="true"
                    placeholder="Please give directions to the PPA from a popular nearby junction or hard-to-miss building"><%= (corper.PPA && corper.PPA.Location?.directions ? corper.PPA.Location.directions : '') %></textarea>
                </div>
    
                <script>
                  /* // ---geo
        document.getElementById('geo').onclick = function () {
          console.log('position button clicked');
          // first find the user's current location/start tracking the add a marker
    
          // first find the user's current location
    
          function onLocationFound(e) {
    
            var radius = e.accuracy / 2; // measurement in meters
            console.log(e);
            // if accurate enough, push [e.longitude, e.latitude]
    
            function onClk(e) {
              console.log('clicked addPlace Marker!');
            }
    
            function onPO() {
              // c.addTo(mymap2);
              if (document.getElementById('baptm')) {
                console.log('we wanna add a place');
              }
            }
            // if user within 5 meters from location, add it. AND IF LOCATION ACCURACY IS NOT SO CORRECT THEN DON'T SHOW IT IN THE MAP !!! NOT EVERYONE IS IN LAGOS, ALSO SHOW THEM THE STATE THEY'RE IN AND THE lga FIRST
            // Only display those icons when the user is in a good enough zoom level
            var p = L.marker(e.latlng).on({
              click: onClk
            }).addTo(mymap2)
              .bindPopup('<p> You\'re within ' +
                radius.toFixed(2) +
                ' meters from this point.</p>' +
                (radius.toFixed(2) <= 10.50 ?
                  ' <hr/> <small><button data-toggle="modal" data-target="#AddPlace" id="baptm" class="btn btn-primary btn-sm"> Add location to map</button></small> ' :
                  ''))
              .openPopup().on({
                popupopen: onPO
              });
            // after 3.5 sec closePopup()
            setTimeout(() => {
              p.closePopup();
            }, 3500);
            // if we couldn't get a so accurate location but got a resonable accurate info, then user can drag the marker to point. means we have to then make marker draggable
    
            var c = L.circle(e.latlng, {
              radius: radius,
              stroke: false
            }).addTo(mymap2);
            // after 3.5 sec remove circle
            setTimeout(() => c.remove(), 3500);
    
            // p.on('popupopen', c.addTo(mymap2) );
    
            // make it so that when ever the popUP is open, the event listerner is added ... also (if it doesn't work so that the app place button works even if it has been dismissed because of clicking the marker (to show the popUp) again n again.)
    
            //then save it.
    
            //then get the altitude and it's accuracy and determine if the apartment is an upstairs
            //then point the map in the direction of movement var e.heading
          }
    
          mymap2.on('locationfound', onLocationFound);
    
          // error ?
          function onLocationError(e) {
            document.getElementById('AddError').innerHTML = e.message;
            $("#LocationError").modal();
          }
    
          mymap2.on('locationerror', onLocationError);
    
          // acutally finding it
          mymap2.locate({
            setView: true,
            enableHighAccuracy: true,
            timeout: 5000,
            maximumAge: 0
          });
    
          // then save it.
        } */
                </script>
    
    
                <script>
                  // for mapid and mymap && mapid2 and mymap2 // and the zoom isn't exactly the same when location function runs, we need to set the correct zoom
                  // ---geo
                  document.getElementById('geo')
                    .onclick = function () {
                      console.log('position button clicked');
                      // first find the user's current location
    
                      function onLocationFound(e) {
    
                        var radius = e.accuracy / 2; // measurement in meters
                        console.log(e);
                        // if accurate enough, push [e.longitude, e.latitude]
                        // uncomment this block when we can load data on maps
                        /* if (radius < 10) {
                          delete e.sourceTarget;
                          delete e.target;
                          delete e.type;
                          var x = document.createElement("input");
                          x.setAttribute("type", "text");
                          x.setAttribute("name", "ppa_geodata");
                          x.setAttribute("value", e);
                          console.log('saving', e);
                          document.forms[0].appendChild(x); // or x.cloneNode() ?
                        } else {
                          // tell them to try again ?!?!?
                        } */
    
                        // not removing these cause Uncaught TypeError: Converting circular structure to JSON, Thank God we don't need them to begin with
                        delete e.sourceTarget;
                        delete e.target;
                        delete e.type;
                        console.log('saving after deleting', e);
    
                        document.forms[0].elements["ppa_geodata"].value = JSON.stringify(e);
    
                        // var FD = new FormData(document.forms[0]);
                        // FD.append('coords', [e.longitude, e.latitude].toString());
    
                        // if user within 5 meters from location, add it. AND IF LOCATION ACCURACY IS NOT SO CORRECT THEN DON'T SHOW IT IN THE MAP !!! NOT EVERYONE IS IN LAGOS, ALSO SHOW THEM THE STATE THEY'RE IN AND THE lga FIRST
                        // Only display those icons when the user is in a good enough zoom level
                        
                        // if we couldn't get a so accurate location but got a resonable accurate info, then user can drag the marker to point. means we have to then make marker draggable
    
                        var c = L.circle(e.latlng, {
                          radius: radius,
                          stroke: false
                        }).addTo(mymap);
    
                        var c2 = L.circle(e.latlng, {
                          radius: radius,
                          stroke: false
                        }).addTo(mymap);
                        // after 3.5 sec remove circle
                        setTimeout(() => c.remove(), 3500);
    
                        setTimeout(() => c2.remove(), 3500);
    
                        //then save it.
    
                        //then get the altitude and it's accuracy and determine if the apartment is an upstairs
                        //then point the map in the direction of movement var e.heading
                      }
    
                      mymap.on('locationfound', onLocationFound);
    
                      // error ?
                      function onLocationError(e) {
                        console.log('nah', e.message, e)
                        // uncomment this later
                        // document.getElementById('AddError').innerHTML = e.message;
                        // $("#LocationError").modal();
                      }
    
                      mymap.on('locationerror', onLocationError);
    
                      // acutally finding it
                      mymap.locate({
                        setView: true,
                        enableHighAccuracy: true,
                        timeout: 5000,
                        maximumAge: 0
                      });
    
                      // then save it.
                    }
                </script>
    
                <hr class="mb-4">
    
                <h4 class="mb-3">Other details</h4>
                <!-- add an event listner so that when the corper puts in origin state, we can fetch origin city and towns in that state --and do similar for accommodation -->
                <div class="row">
                  <div class="col-md-6 mb-3">
                    <label for="travel_from_state">Origin state</label>
                    <select id="travel_from_state" name="travel_from_state" class="custom-select d-block w-100" ><!--needs work, won't work ...different case-->
                      <% if (!corper.travel_from_state) { %>
                        <option value="">Select</option>
                      <% } %>
                      <% for (states_index = 0; states_index < states.length; states_index++) { %>
                        <option value="<%= states[states_index] %>" <%- (corper.travel_from_state && corper.travel_from_state == states[states_index] ? "selected='true'" : '') %> ><%= states[states_index] %></option>
                      <% } %>
                    </select>
                    <small class="text-muted">Where did you travel from for NYSC?</small>
                    <div class="invalid-feedback">
                      Choose a state, please.
                    </div>
                  </div>
                  <div class="col-md-6 mb-3">
                    <label for="travel_from_city">Origin city or town <span class="text-muted">(Optional)</span></label>
                    <input type="text" class="form-control" id="travel_from_city" value="<%= (corper.travel_from_city ? corper.travel_from_city : '') %>" name="travel_from_city" placeholder="">
                    <div class="invalid-feedback">
                      Please name a place
                    </div>
                  </div>
                </div>
                <div class="mb-3">
                  <label for="accommodation_location">Where did you find accomodation <span
                      class="text-muted">(Optional)</span></label>
                  <input type="text" name="accommodation_location" class="form-control" id="accomodation_location"
                    placeholder="What part of town is it?" value="<%= (corper.accommodation_location ? corper.accommodation_location : '') %>">
                  <small class="text-muted">So corp members can know where other corp members are.</small>
                  <div class="invalid-feedback">
                    Please enter the name of a place or an area.
                  </div>
                </div>
    
                <div class="row">
                  <div class="col-md-6 mb-3">
                    <label for="name_of_ppa">Want an SPA ?</label>
                    <div class="d-block">
                      <div class="custom-control custom-radio">
                        <input id="wantspaornot_yes" value="1" name="wantspaornot" type="radio" class="custom-control-input" <%- (corper.wantspaornot === true ? 'checked="true"' : '' ) %>>
                        <label class="custom-control-label" for="wantspaornot_yes">Yes</label>
                      </div>
                      <div class="custom-control custom-radio">
                        <input id="wantspaornot_no" value="0" name="wantspaornot" type="radio" class="custom-control-input" <%- (corper.wantspaornot === false ? 'checked="true"' : ''  ) %>>
                        <label class="custom-control-label" for="wantspaornot_no">No</label>
                      </div>
                    </div>
                    <small class="text-muted">An SPA is a side job you do during your Service Year for extra cash. A
                      <b>S</b>econdary <b>P</b>lace of
                      <b>A</b>ssignment.</small>
                  </div>
    
                  <div class="col-md-6 mb-3">
                    <label for="name_of_ppa">In search for an accommodation ?</label>
                    <div class="d-block">
                      <div class="custom-control custom-radio">
                        <input id="accommodationornot_yes" value="1" name="accommodationornot" type="radio" class="custom-control-input" <%- (corper.accommodationornot === true ? 'checked="true"' : ''  ) %>>
                        <label class="custom-control-label" for="accommodationornot_yes">Yes</label>
                      </div>
                      <div class="custom-control custom-radio">
                        <input id="accommodationornot_no" value="0" name="accommodationornot" type="radio" class="custom-control-input" <%- (corper.accommodationornot === false ? 'checked="true"' : '' ) %>>
                        <label class="custom-control-label" for="accommodationornot_no">No</label>
                      </div>
                    </div>
                    <small class="text-muted">Default is 'yes.' If you choose no, we'll stop showing you posts about accommodations up for rent.</small>
                  </div>
    
                </div>
    
                <hr class="mb-4">
    
                <h4 class="mb-3">Bio</h4>
    
                <div class="d-block my-3">
                  <div class="custom-control custom-radio">
                    <input id="public_profile_yes" value="1" name="public_profile" type="radio" class="custom-control-input" <%- (corper.public_profile === true ? 'checked="true"' : ''  ) %>>
                    <label class="custom-control-label" for="public_profile_yes">Publicly visible</label>
                  </div>
                  <div class="custom-control custom-radio">
                    <!-- we'll tell them to should make public so they can easily connect with others esp. during project work ... make Nigeria great (not sure it was before, so we can't say 'again') -->
                    <input id="public_profile_no" value="0" name="public_profile" type="radio" class="custom-control-input" <%- (corper.public_profile === false ? 'checked="true"' : '' ) %>>
                    <label class="custom-control-label" for="public_profile_no">Publicly invisible</label>
                  </div>
                  <small class="text-muted">A publicly visible profile means you can <b>search for other corpers</b> and <b>be seen by them too</b>.
                  </small>
                </div>
                <div class="row">
                  <div class="col-md-12 mb-3">
    
                    <label for="bio">Profile</label>
                    <textarea class="form-control" name="bio" id="bio"
                      placeholder="I'm a graphic designer. Get in touch if you like to travel. I'm your plug for all things phones. I'd love to visit Idanre hills before the service year is over, who's in?"><%= (corper.bio ? corper.bio : '') %></textarea>
      
                    <small class="text-muted">What do you want other corpers to know about you? What you do, what you love doing?</small>
                    
                  </div>
                </div>
                <div class="row">
                  <div class="col-md-6 mb-3">
                    <!-- <label for="cc-expiration">Profile picture</label>
                    <input type="text" class="form-control" id="cc-expiration" placeholder="" required>
                     -->
                     <div class="custom-file">
                      <input type="file" name="profile_pic" class="custom-file-input" id="profile-pic">
                      <label class="custom-file-label" for="profile-pic">Profile picture</label>
                    </div>
                  </div>
                  <div class="col-md-3 mb-3">
                    <!--preview-->
                    <img id="profile-picture-preview" src="data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%2245%22%20height%3D%2245%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%2045%2045%22%20preserveAspectRatio%3D%22none%22%3E%3Cdefs%3E%3Cstyle%20type%3D%22text%2Fcss%22%3E%23holder_167df8c1bbc%20text%20%7B%20fill%3A%23AAAAAA%3Bfont-weight%3Abold%3Bfont-family%3AArial%2C%20Helvetica%2C%20Open%20Sans%2C%20sans-serif%2C%20monospace%3Bfont-size%3A10pt%20%7D%20%3C%2Fstyle%3E%3C%2Fdefs%3E%3Cg%20id%3D%22holder_167df8c1bbc%22%3E%3Crect%20width%3D%2245%22%20height%3D%2245%22%20fill%3D%22%23EEEEEE%22%3E%3C%2Frect%3E%3Cg%3E%3Ctext%20x%3D%223.96875%22%20y%3D%2226.896875%22%3E<%= corper.statecode.slice(0, 2) %> <%= corper.statecode.slice(3, 5) %> %3C%2Ftext%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E"
                    alt="<%= corper.statecode %> profile picture preview" class="rounded-circle">
                    <br/>
                    <small class="text-muted">Picture preview</small>
                  </div>
                </div>
    
                <script>
                  document.getElementById('profile-pic').onchange = (evt) => {
                    if (evt.target.files[0]) {
                      let reader = new FileReader();
    
                      reader.onload = function (e) {
                          $('#profile-picture-preview').attr('src', e.target.result);
                      }
    
                      reader.readAsDataURL(evt.target.files[0]);
                    }
                  }
                </script>
    
                <hr class="mb-4">
                <button class="btn btn-primary btn-lg btn-block" type="submit">Update profile</button>
              </form>
            </div>
          </div>

        </div>
        <div class="tab-pane fade" id="post-history" role="tabpanel" aria-labelledby="post-history-tab">

          <div class="mt-4">
            <div class="jumbotron">
              <a class="" href="#!" data-toggle="collapse" data-target="#collapseAccommodations" aria-expanded="false" aria-controls="collapseAccommodations">
                <div><span class="badge badge-pill badge-primary" id="accommodation-arrow">&#8594;</span> Accommodations</div>
              </a>
              <!--
                use an if tag to only show if there are accommodations
              -->
              <div class="collapse show" id="collapseAccommodations">
                <hr class="my-4">
                <div class="row row-cols-1 row-cols-md-2 accommodation-div">
                  <% for (acc_index = 0; acc_index < corper.Accommodation.length; acc_index++) { %>
                    <div class="col" data-acc_div_index="<%= acc_index %>">
                      <div class="card mb-3" style="max-width: 540px;">
                        <div class="row no-gutters">
                          <div class="col-md-4">
                            <img class="accommodation-posts-preview-image" src="<%= (corper.Accommodation[acc_index].mediaId ? corper.Accommodation[acc_index].media.urls[0] : '') %>" alt="Image of the accommodation">
                          </div>
                          <div class="col-md-8">
                            <div class="card-body">
                              <h5 class="card-title" data-index="<%= acc_index %>"><%= corper.Accommodation[acc_index].address %></h5>
                              <p class="card-text" data-index="<%= acc_index %>"><%= corper.Accommodation[acc_index].directions %></p>
                              <p class="card-text"><small class="text-muted">Posted <%= new Intl.DateTimeFormat("en" , {dateStyle: "long"}).format(new Date(corper.Accommodation[acc_index].createdAt)) %></small></p>
                              <a href="#" class="btn btn-primary" data-index="<%= acc_index %>" data-post_time="<%= corper.Accommodation[acc_index].post_time %>" data-toggle="modal" data-target="#deleteAccommodationModal">Delete</a>
                              <a href="#" class="btn btn-outline-primary" data-toggle="modal" data-index="<%= acc_index %>" data-target="#editAccommodationModal">Edit</a>
                            </div>
                          </div>
                        </div>
                      </div>
                    </div>
                    
                  <% } %>
                </div>
                
              </div>
            </div>
  
            <!--modal to edit accommodations-->
            <div class="modal fade" id="editAccommodationModal" tabindex="-1" aria-labelledby="editAccommodationModalLabel" aria-hidden="true">
              <div class="modal-dialog">
                <div class="modal-content">
                  <div class="modal-header">
                    <h5 class="modal-title" id="editAccommodationModalLabel">Edit</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                      <span aria-hidden="true">&times;</span>
                    </button>
                  </div>
                  <div class="modal-body">
                    <form id="editaccommodationform">
                      <div class="form-group">
                        <label for="type">Accommodation type</label>
  
                        <select class="custom-select pointer" name="type"
                            id="type" required>
                            <option value="Self contain">Self contain</option>
                            <option value="Flat">Flat</option>
                            <option value="1 bedroom flat">1 bedroom flat</option>
                            <option value="2 bedroom flat">2 bedroom flat</option>
                            <option value="3 bedroom flat">3 bedroom flat</option>
                        </select>
                      </div>
                      <div class="form-group">
                        <div class="custom-control custom-checkbox">
                            <input name="rooms" type="checkbox" class="custom-control-input" id="rooms1" value="Sitting room">
                            <label class="custom-control-label" for="rooms1">Sitting room ?</label>
                        </div>
                        <div class="custom-control custom-checkbox">
                            <input name="rooms" type="checkbox"
                                class="custom-control-input" id="rooms2"
                                value="Kitchen">
                            <label class="custom-control-label" for="rooms2">Kitchen ?</label>
                            <!-- Maybe later seperate the two, with radio buttons, kitchen in the apartment or a general one tenant shares -->
                        </div>
                        <div class="custom-control custom-checkbox">
                            <input name="rooms" type="checkbox"
                                class="custom-control-input" id="rooms3"
                                value="Bedroom">
                            <label class="custom-control-label" for="rooms3">Bedroom ?</label>
                            <!-- if it comes with a bedroom, then how many [do later] -->
                        </div>
                        <!-- input tag check box id attribute connects with the for attribute of label tag -->
                        <div class="custom-control custom-checkbox">
                            <input name="rooms" type="checkbox"
                                class="custom-control-input" id="rooms4" value="Toilet">
                            <label class="custom-control-label" for="rooms4">Toilet ?</label>
                        </div>
                        <div class="custom-control custom-checkbox">
                            <input name="rooms" type="checkbox" class="custom-control-input" id="rooms5" value="Bathroom">
                            <label class="custom-control-label" for="rooms5">Bathroom ?</label>
                        </div>
                        <div class="custom-control custom-checkbox">
                            <input name="rooms" type="checkbox"
                                class="custom-control-input" id="rooms6"
                                value="Dining room">
                            <label class="custom-control-label" for="rooms6">Dining
                                room?</label>
                        </div>
                      </div>
                      <div class="form-group">
                        <div>Rent frequency:</div>
                        <div class="custom-control custom-radio">
                            <input id="monthly" name="rentrange" type="radio"
                                class="custom-control-input" value="monthly"
                                required>
                            <label class="custom-control-label"
                                for="monthly">Monthly</label>
                        </div>
                        <div class="custom-control custom-radio">
                            <input id="quarterly" name="rentrange" type="radio"
                                class="custom-control-input" value="quarterly"
                                required>
                            <label class="custom-control-label"
                                for="quarterly">Quarterly</label>
                        </div>
                        <div class="custom-control custom-radio">
                            <input id="yearly" name="rentrange" type="radio"
                                class="custom-control-input" value="yearly"
                                required>
                            <label class="custom-control-label"
                                for="yearly">Yearly</label>
                        </div>
                      </div>
                      <div class="form-group">
                          <div>Current status:</div>
                          <div class="custom-control custom-radio">
                            <input id="newrent" name="tenure" type="radio"
                                class="custom-control-input" value="Lease" required>
                            <label class="custom-control-label" for="newrent">New
                                rent (No present occupant)</label>
                          </div>
                          <div class="custom-control custom-radio">
                              <input id="oldrent" name="tenure" type="radio"
                                  class="custom-control-input" value="Sublease" required>
                              <label class="custom-control-label" for="oldrent">Leasing out an active rent</label>
                          </div>
                          <div class="custom-control custom-radio">
                              <input id="roommate" name="tenure" type="radio" class="custom-control-input" value="Roommate" required>
                              <label class="custom-control-label" for="roommate">Seeking a roommate</label>
                          </div> 
                      </div>
                      <div class="form-group">
                        <div id="expirediv" class="" style="display: none;">
                          <label for="bday">When does your rent expires:</label>
                          <input type="date" id="expire" min="" max=""
                              name="expire">
                        </div>
                      </div>
                      <div class="form-group">
                        <label for="price" class="col-form-label">
                          <div class="d-flex">Price <span id="roommate-price" style="display: none;">&nbsp;for your roommate</span>:</div>
                        </label>
                        <input type="number" name="price" class="form-control" id="price">
                      </div>
                      <div class="form-group">
                        <div id="roommatediv" class="mb-3" style="display: none;">
                            <label for="roommate_type" class="form-label">Describe your ideal roommate:</label>
                            <input type="text" class="form-control mb-4" id="roommate_type" name="roommate_type" placeholder="Someone nice...">
                            <label for="roommate_you" class="form-label">Describe yourself to your ideal roommate:</label>
                            <input type="text" class="form-control" id="roommate_you" name="roommate_you" placeholder="I'm tolerant, clean...">
                        </div>
                      </div>
                      <script>
                        // to also set date: const date = new Date().toLocaleDateString('fr-CA', { year: 'numeric', month: '2-digit', day: '2-digit' })
                        let minmax = new Date();
                        document.getElementById('expire')
                            .min = minmax.toISOString()
                                .substr(0, 10); // Minimum date is today!
                        // Max date is two years from now.
                        document.getElementById('expire')
                            .max = new Date(minmax.getFullYear() + 2, minmax.getMonth())
                                .toISOString()
                                .substr(0, 10); // The argument monthIndex is 0-based. This means that January = 0 and December = 11.
  
                        let radios = document.forms["editaccommodationform"].elements['tenure'];
                        for (let i = 0, max = radios.length; i < max; i++) {
                            radios[i].onclick = function () {
                                // using if-else because we have just two options, so if it isn't one, it's the other
                                // if expire date is showing, it means the rent isn't new, then it is required.
                                if (this.id == 'oldrent') {
                                    document.getElementById('expirediv').style.display = 'block';
                                    document.forms["editaccommodationform"].elements["expire"].required = true;
  
                                    document.getElementById('roommatediv').style.display = 'none';
                                    document.getElementById('roommate-price').style.display = 'none';
                                    document.forms["editaccommodationform"].elements["roommate_type"].required = false;
                                    document.forms["editaccommodationform"].elements["roommate_you"].required = false;
                                } else if (this.id == 'roommate') {
                                    document.getElementById('roommatediv').style.display = 'block';
                                    document.getElementById('roommate-price').style.display = 'block';
                                    document.forms["editaccommodationform"].elements["roommate_type"].required = true;
                                    document.forms["editaccommodationform"].elements["roommate_you"].required = true;
  
                                    // console.log('new rent [lease]');
                                    document.getElementById('expirediv').style.display = 'none';
                                    document.forms["editaccommodationform"].elements["expire"].required = false;
                                } else {
                                    document.getElementById('expirediv').style.display = 'none';
                                    document.forms["editaccommodationform"].elements["expire"].required = false;
  
                                    document.getElementById('roommatediv').style.display = 'none';
                                    document.getElementById('roommate-price').style.display = 'none';
                                    document.forms["editaccommodationform"].elements["roommate_type"].required = false;
                                    document.forms["editaccommodationform"].elements["roommate_you"].required = false;
                                }
                            }
                        }
                    </script>
                      <div class="form-group">
                        <label for="directions" class="col-form-label">Directions:</label>
                        <textarea class="form-control" name="directions" id="directions"></textarea>
                      </div>
                      <div class="form-group">
                        <label for="address" class="col-form-label">Address:</label>
                        <input type="text" class="form-control" name="address" id="address">
                      </div>
                    </form>
                  </div>
                  <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-primary" id="updateAccommodationButton" >Update</button><!--should be disabled until they make a change-->
                  </div>
                </div>
              </div>
            </div>
            <!--// modal to edit accommodations-->
  
            <!--js for the accommodation modal-->
            <script> // TODO : update the modal with the updated data after submitting.
                $('#collapseAccommodations').on('shown.bs.collapse', function () {
                  $('#accommodation-arrow').html('&#8594;')
                })
                $('#collapseAccommodations').on('hidden.bs.collapse', function () {
                  $('#accommodation-arrow').html('&#8595;')
                })

                let accommodation_posts = <%- JSON.stringify(corper.Accommodation) %>; // TODO : update this variable when they update a post ... for sales too
                $('#editAccommodationModal').on('show.bs.modal', function (event) {
                  let button = $(event.relatedTarget) // Button that triggered the modal
                  let index = button.data('index') // Extract info from data-* attributes
                  // If necessary, you could initiate an AJAX request here (and then do the updating in a callback).
                  // Update the modal's content. We'll use jQuery here, but you could use a data binding library or other methods instead.
                  let modal = $(this)
                  modal.find('.modal-title').text('Edit ' + accommodation_posts[index].address)
                  modal.find('.modal-body #price').val(accommodation_posts[index].price)
                  modal.find('.modal-body #directions').val(accommodation_posts[index].directions)
                  modal.find('.modal-body #type').val(accommodation_posts[index].type)
                  modal.find('.modal-body #address').val(accommodation_posts[index].address)
  
                  let _rooms = accommodation_posts[index].availableRooms
                  for (let index = 0; index < _rooms.length; index++) {
                    modal.find(`:checkbox[value=${_rooms[index]}]`).prop("checked", true);
                  }
                  modal.find(`:radio[value=${accommodation_posts[index].tenure}]`).prop("checked", true)
                  modal.find(`:radio[value=${accommodation_posts[index].rentrange}]`).prop("checked", true)
  
                  if (accommodation_posts[index].tenure == 'Roommate') { // means there's roommate_you and roommate_type ...or we could check for roommate_type | roommate_you
                    modal.find('.modal-body #roommate_type').val(accommodation_posts[index].roommate_type)
                    modal.find('.modal-body #roommate_you').val(accommodation_posts[index].roommate_you)
                  }
  
                  if (accommodation_posts[index].tenure == 'Sublease') { // means there's expire date
                    modal.find('.modal-body #expire').val(accommodation_posts[index].expire)
                  }

                  document.getElementById('updateAccommodationButton').addEventListener('click', function (event) {
                    updateAccommodation(index)
                  }, false);
                })
            </script>
            <!--//js for the accommodation modal-->

            <!--js to submit accommodation update-->
            <script>

              // script for submitting accommodation (not posts).
              function updateAccommodation(index) {

                    // close the accommodation modal form ...
                    $('#editAccommodationModal').modal('hide');
    
                    // use fetch api later on or NOT https://gomakethings.com/why-i-still-use-xhr-instead-of-the-fetch-api/
                    const XHR1 = new XMLHttpRequest();
    
                    // Bind the FormData object and the form element
                    let FD1 = new FormData(_edit_accommodation_form);
    
                    // Define what happens on successful data submission
                    XHR1.addEventListener("load", function (event) {
                        // alert(event.target.responseText);
                        // console.log(event);
    
    
                        if (event.target.status === 500) {
                            // add UNsuccessful alert 
                            $("#alert-div")
                                .append(
                                    `<div class="alert alert-danger mt-3 fade show" id="accommodationposted" role="alert">We couldn't update that. Please try again.
                                      <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                                        <span aria-hidden="true">&times;</span>
                                      </button>
                                      </div>`
                                );
                        } else {
                            // add successful alert 
                            $("#alert-div")
                                .append(
                                    `<div class="alert alert-success mt-3 fade show" id="accommodationposted" role="alert">Updated accommodation details successfully!
                                      <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                                        <span aria-hidden="true">&times;</span>
                                      </button>
                                      </div>`
                                );
                              $('.accommodation-div').find(`h5[data-index='${index}']`).text(_edit_accommodation_form.querySelector("input[name='address']").value)
                              $('.accommodation-div').find(`p[data-index='${index}']`).text(_edit_accommodation_form.querySelector("textarea[name='directions']").value)
                              console.log( );
                        }


                        // and reset the form
                        document.forms["editaccommodationform"].reset();
    
                        setTimeout(function () {
                            $('#accommodationposted')
                                .alert('close'); // Closes an alert by removing it from the DOM
                        }, 5000);
                    });
    
                    // Define what happens in case of error
                    XHR1.addEventListener("error", function (event) {
                        $("#alert-div")
                                .append(
                                    `<div class="alert alert-success mt-3 fade show" id="accommodationposted" role="alert">Something went wrong. It\'s us, not you. Maybe try again.
                                      <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                                        <span aria-hidden="true">&times;</span>
                                      </button>
                                      </div>`
                                );
                    });
    
                    // Set up our request
                    XHR1.open('POST', '/updateaccommodation', true); // true makes it async request
    
                    // XHR1.setRequestHeader('Content-Type', 'multipart/form-data'); // this causes error [Multipart, boundary not found], it should stay commented
    
                    // The data sent is what the user provided in the form
                    XHR1.send(FD1);
                }


              // Access the accommodation edit form element...
              let _edit_accommodation_form = document.getElementById("editaccommodationform");

    
            </script>
            <!--//js to submit accommodation update-->


            <!--modal to delete accommoation-->
            <div class="modal fade" id="deleteAccommodationModal" tabindex="-1" aria-labelledby="deleteAccommodationModalLabel" aria-hidden="true">
              <div class="modal-dialog modal-dialog-centered">
                <div class="modal-content">
                  <div class="modal-header">
                    <h5 class="modal-title" id="deleteAccommodationModalLabel">Delete?</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                      <span aria-hidden="true">&times;</span>
                    </button>
                  </div>
                  <div class="modal-body">
                    Sure you want to delete this accommodation?
                  </div>
                  <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-danger" id="deleteAccommodationButton">Delete</button>
                  </div>
                </div>
              </div>
            </div>
            <!--//modal to delete accommoation-->

            <script>

              function deleteAccommodation(index, post_time) {

                // close the accommodation modal form ...
                $('#deleteAccommodationModal').modal('hide');

                // use fetch api later on or NOT https://gomakethings.com/why-i-still-use-xhr-instead-of-the-fetch-api/
                const XHR1 = new XMLHttpRequest();

                // Bind the FormData object and the form element
                let FD1 = new FormData();
                FD1.append('post_time', post_time);

                // Define what happens on successful data submission
                XHR1.addEventListener("load", function (event) {
                    // alert(event.target.responseText);
                    // console.log(event);

                    if (event.target.status === 500) {
                        // add UNsuccessful alert 
                        $("#alert-div")
                            .append(
                                `<div class="alert alert-danger mt-3 fade show" id="accommodationposted" role="alert">We couldn't delete that. Please try again.
                                  <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                                    <span aria-hidden="true">&times;</span>
                                  </button>
                                  </div>`
                            );
                    } else {
                        // add successful alert 
                        $("#alert-div")
                            .append(
                                `<div class="alert alert-success mt-3 fade show" id="accommodationposted" role="alert">Deleted accommodation successfully!
                                  <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                                    <span aria-hidden="true">&times;</span>
                                  </button>
                                  </div>`
                            );
                            accommodation_posts.splice(index, 1);
                            // delete from dom.
                            $(`div[data-acc_div_index="${index}"]`).remove()
                          console.log( 'deleted', accommodation_posts);
                    }

                    setTimeout(function () {
                        $('#accommodationposted')
                            .alert('close'); // Closes an alert by removing it from the DOM
                    }, 5000);
                });

                // Define what happens in case of error
                XHR1.addEventListener("error", function (event) {
                    $("#alert-div")
                            .append(
                                `<div class="alert alert-success mt-3 fade show" id="accommodationposted" role="alert">Something went wrong. It\'s us, not you. Maybe try again.
                                  <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                                    <span aria-hidden="true">&times;</span>
                                  </button>
                                  </div>`
                            );
                });

                // Set up our request
                XHR1.open('POST', '/deleteaccommodation', true); // true makes it async request

                // XHR1.setRequestHeader('Content-Type', 'multipart/form-data'); // this causes error [Multipart, boundary not found], it should stay commented

                // The data sent is what the user provided in the form
                XHR1.send(FD1);
              }

              $('#deleteAccommodationModal').on('show.bs.modal', function (event) {
                  let button = $(event.relatedTarget) // Button that triggered the modal
                  let index = button.data('index') // Extract info from data-* attributes
                  let post_time = button.data('post_time')
                  // If necessary, you could initiate an AJAX request here (and then do the updating in a callback).
                  
                  document.getElementById('deleteAccommodationButton').addEventListener('click', function (event) {
                    deleteAccommodation(index, post_time)
                  }, false);
                })
            </script>


            <!-- js to submit profile form -->
            <script>
              function sendProfile() {

                // use fetch api later on or NOT https://gomakethings.com/why-i-still-use-xhr-instead-of-the-fetch-api/
                const profileFormXHR = new XMLHttpRequest();

                // Bind the FormData object and the form element
                let profileFormData = new FormData(profile_form);

                // Define what happens on successful data submission
                profileFormXHR.addEventListener("load", function (event) { // alert(event.target.responseText);
                    console.log(event);

                    if (event.target.status === 201) { // add successful alert
                        $("#alert-div").append(`<div class="alert alert-success mt-3 fade show" id="profileposted" role="alert">Profile updated successfully.
                                    <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                                        <span aria-hidden="true">&times;</span>
                                    </button>
                                    </div>`);

                    } else if (event.target.status === 502) { // add UNsuccessful alert
                        $("#alert-div").append(`<div class="alert alert-danger mt-3 fade show" id="profileposted" role="alert">We couldn't update your profile. Please try again.
                                    <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                                        <span aria-hidden="true">&times;</span>
                                    </button>
                                    </div>`);
                    }

                    setTimeout(function () {
                        $('#profileposted').alert('close'); // Closes an alert by removing it from the DOM
                    }, 5000);


                });

                // Define what happens in case of error
                profileFormXHR.addEventListener("error", function (event) {
                    alert('Oops! Something went wrong.');
                });

                // Set up our request, true makes it async request
                profileFormXHR.open('POST', '/profile', true);

                // profileFormXHR.setRequestHeader('Content-Type', 'multipart/form-data'); // this causes error [Multipart, boundary not found], it should stay commented

                // The data sent is what the user provided in the form
                profileFormXHR.send(profileFormData);
            }

            // Access the form element...
            let profile_form = document.getElementById("profile-form");

            // ...and take over its submit event.
            profile_form.addEventListener("submit", function (event) {
                event.preventDefault(); // the default behaviour is refreshing the page and adding search params to the url

                sendProfile();
            }, false, true); // https://developer.mozilla.org/en-US/docs/Web/Events/submit
            </script>
          </div>


          <div class="mt-4">
            <div class="jumbotron">
              <a class="" href="#!" data-toggle="collapse" data-target="#collapseSales" aria-expanded="false" aria-controls="collapseSales">
                <div><span class="badge badge-pill badge-primary" id="sales-arrow">&#8595;</span> Sales</div>
              </a>
              <div class="collapse" id="collapseSales">
                <hr class="my-4">
                <div class="row row-cols-1 row-cols-md-2 sale-div">
                  <% for (sales_index = 0; sales_index < corper.Sales.length; sales_index++) { %>
                    <div class="col" data-sale_div_index="<%= sales_index %>">
                      <div class="card mb-3" style="max-width: 540px;">
                        <div class="row no-gutters">
                          <div class="col-md-4">
                            <img class="accommodation-posts-preview-image" src="<%= (corper.Sales[sales_index].mediaId ? corper.Sales[sales_index].media.urls[0] : '') %>" alt="Image of the sale">
                          </div>
                          <div class="col-md-8">
                            <div class="card-body">
                              <h5 class="card-title" data-index="<%= sales_index %>"><%= corper.Sales[sales_index].itemname %></h5>
                              <p class="card-text">&#8358;<span data-index="<%= sales_index %>"><%= corper.Sales[sales_index].price %></span></p>
                              <p class="card-text"><small class="text-muted">Posted <%= new Intl.DateTimeFormat("en" , {dateStyle: "long"}).format(new Date(corper.Sales[sales_index].createdAt)) %></small></p>
                              <a href="#" class="btn btn-primary" data-index="<%= sales_index %>" data-post_time="<%= corper.Sales[sales_index].post_time %>" data-toggle="modal" data-target="#deleteSaleModal">Delete</a>
                              <a href="#" class="btn btn-outline-primary" data-toggle="modal" data-index="<%= sales_index %>" data-target="#editSaleModal">Edit</a>
                            </div>
                          </div>
                        </div>
                      </div>
                    </div>
                    
                  <% } %>
                </div>
                
              </div>

              <div class="modal fade" id="editSaleModal" tabindex="-1" aria-labelledby="editSaleModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                  <div class="modal-content">
                    <div class="modal-header">
                      <h5 class="modal-title" id="editSaleModalLabel">Edit</h5>
                      <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                      </button>
                    </div>
                    <div class="modal-body">
                      <form id="editsaleform">
                        <div class="form-group">
                          <label for="itemname" class="col-form-label">Item name:</label>
                          <input type="text" class="form-control" name="itemname" id="itemname">
                        </div>
                        <div class="form-group">
                          <label for="price" class="col-form-label">Price:</label>
                          <input type="number" class="form-control" name="price" id="price">
                        </div>
                        <div class="form-group">
                          <label for="text" class="col-form-label">Description:</label>
                          <textarea class="form-control" name="text" id="text"></textarea>
                        </div>
                      </form>
                    </div>
                    <div class="modal-footer">
                      <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                      <button type="button" class="btn btn-primary" id="updateSaleButton">Update</button>
                    </div>
                  </div>
                </div>
              </div>

              <!--
                RowDataPacket {
                  statecode: 'AB/20A/0001',
                  itemname: 'Chair & Table',
                  type: 'sale',
                  text: "An orange chair and table set. It's very comfortable for reading and quite cool too, cause of the color!",
                  media: '16xLBeY_YCdhKPtxgP7ASgp8-35X4AQkS,1EKqAKHqJD0zTFgdtea9mBbWDMUz29i1b',
                  price: 4000,
                  location: 'ABIA',
                  post_time: 1613359539598,
                  input_time: 2021-02-15T01:27:21.000Z
                }
              -->

              <script>
                $('#collapseSales').on('shown.bs.collapse', function () {
                  $('#sales-arrow').html('&#8594;')
                })
                $('#collapseSales').on('hidden.bs.collapse', function () {
                  $('#sales-arrow').html('&#8595;')
                })

                let sales_posts = <%- JSON.stringify(corper.Sales) %>;
                $('#editSaleModal').on('show.bs.modal', function (event) {
                  let button = $(event.relatedTarget) // Button that triggered the modal
                  let index = button.data('index') // Extract info from data-* attributes
                  // If necessary, you could initiate an AJAX request here (and then do the updating in a callback).
                  // Update the modal's content. We'll use jQuery here, but you could use a data binding library or other methods instead.
                  let modal = $(this)
                  modal.find('.modal-title').text('Edit ' + sales_posts[index].itemname)
                  modal.find('.modal-body #price').val(sales_posts[index].price)
                  modal.find('.modal-body #itemname').val(sales_posts[index].itemname)
                  modal.find('.modal-body #text').val(sales_posts[index].text)
  
                  document.getElementById('updateSaleButton').addEventListener('click', function (event) {
                    updateSale(index)
                  }, false)             
                })
              </script>
              <!--js to submit sale update-->
              <script>

                // Access the sales edit form element...
                let _edit_sale_form = document.getElementById("editsaleform");
              
                // script for updating sale.
                function updateSale(index) {

                      // close the sale modal form
                      $('#editSaleModal').modal('hide');

                      // use fetch api later on or NOT https://gomakethings.com/why-i-still-use-xhr-instead-of-the-fetch-api/
                      const XHR2 = new XMLHttpRequest();

                      // Bind the FormData object and the form element
                      let FD2 = new FormData(_edit_sale_form);

                      // Define what happens on successful data submission
                      XHR2.addEventListener("load", function (event) {
                          // alert(event.target.responseText);
                          // console.log(event);

                          if (event.target.status === 500) {
                              // add UNsuccessful alert 
                              $("#alert-div")
                                  .append(
                                      `<div class="alert alert-danger mt-3 fade show" id="saleposted" role="alert">We couldn't update that. Please try again.
                                          <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                                          <span aria-hidden="true">&times;</span>
                                        </button>
                                        </div>`
                                  );
                          } else {
                              // add successful alert 
                              $("#alert-div")
                                  .append(
                                      `<div class="alert alert-success mt-3 fade show" id="saleposted" role="alert">Updated sale details successfully!
                                        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                                          <span aria-hidden="true">&times;</span>
                                        </button>
                                        </div>`
                                  );

                                // update the html elements
                          }


                          // and reset the form
                          document.forms["editsaleform"].reset();

                          setTimeout(function () {
                              $('#saleposted')
                                  .alert('close'); // Closes an alert by removing it from the DOM
                          }, 5000);
                      });

                      // Define what happens in case of error
                      XHR2.addEventListener("error", function (event) {
                          $("#alert-div")
                                  .append(
                                      `<div class="alert alert-success mt-3 fade show" id="saleposted" role="alert">Something went wrong. It\'s us, not you. Maybe try again.
                                        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                                          <span aria-hidden="true">&times;</span>
                                        </button>
                                        </div>`
                                  );
                      });

                      // Set up our request
                      XHR2.open('POST', '/updatesale', true); // true makes it async request

                      // XHR1.setRequestHeader('Content-Type', 'multipart/form-data'); // this causes error [Multipart, boundary not found], it should stay commented

                      // The data sent is what the user provided in the form
                      XHR2.send(FD2);
                  }

              </script>
              <!--//js to submit sale update-->


              <!--modal to delete sale-->
              <div class="modal fade" id="deleteSaleModal" tabindex="-1" aria-labelledby="deleteSaleModalLabel" aria-hidden="true">
                <div class="modal-dialog modal-dialog-centered">
                  <div class="modal-content">
                    <div class="modal-header">
                      <h5 class="modal-title" id="deleteSaleModalLabel">Delete?</h5>
                      <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                      </button>
                    </div>
                    <div class="modal-body">
                      Sure you want to delete this item?
                    </div>
                    <div class="modal-footer">
                      <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                      <button type="button" class="btn btn-danger" id="deleteSaleButton">Delete</button>
                    </div>
                  </div>
                </div>
              </div>
              <!--//modal to delete sale-->

              <script>

                function deleteSale(index, post_time) {

                // close the sale modal form ...
                $('#deleteSaleModal').modal('hide');

                // use fetch api later on or NOT https://gomakethings.com/why-i-still-use-xhr-instead-of-the-fetch-api/
                const XHR1 = new XMLHttpRequest();

                // Bind the FormData object and the form element
                let FD1 = new FormData();
                FD1.append('post_time', post_time);

                // Define what happens on successful data submission
                XHR1.addEventListener("load", function (event) {
                    // alert(event.target.responseText);
                    // console.log(event);

                    if (event.target.status === 500) {
                        // add UNsuccessful alert 
                        $("#alert-div")
                            .append(
                                `<div class="alert alert-danger mt-3 fade show" id="saleposted" role="alert">We couldn't delete that. Please try again.
                                  <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                                    <span aria-hidden="true">&times;</span>
                                  </button>
                                  </div>`
                            );
                    } else {
                        // add successful alert 
                        $("#alert-div")
                            .append(
                                `<div class="alert alert-success mt-3 fade show" id="saleposted" role="alert">Deleted item successfully!
                                  <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                                    <span aria-hidden="true">&times;</span>
                                  </button>
                                  </div>`
                            );
                            sales_posts.splice(index, 1);
                            // delete from dom.
                            $(`div[data-sale_div_index="${index}"]`).remove()
                          console.log( 'deleted', sales_posts);
                    }

                    setTimeout(function () {
                        $('#saleposted')
                            .alert('close'); // Closes an alert by removing it from the DOM
                    }, 5000);
                });

                // Define what happens in case of error
                XHR1.addEventListener("error", function (event) {
                    $("#alert-div")
                            .append(
                                `<div class="alert alert-success mt-3 fade show" id="saleposted" role="alert">Something went wrong. It\'s us, not you. Maybe try again.
                                  <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                                    <span aria-hidden="true">&times;</span>
                                  </button>
                                  </div>`
                            );
                });

                // Set up our request
                XHR1.open('POST', '/deletesale', true); // true makes it async request

                // XHR1.setRequestHeader('Content-Type', 'multipart/form-data'); // this causes error [Multipart, boundary not found], it should stay commented

                // The data sent is what the user provided in the form
                XHR1.send(FD1);
                }


                $('#deleteSaleModal').on('show.bs.modal', function (event) {
                  let button = $(event.relatedTarget) // Button that triggered the modal
                  let index = button.data('index') // Extract info from data-* attributes
                  let post_time = button.data('post_time')
                  // If necessary, you could initiate an AJAX request here (and then do the updating in a callback).
                  
                  document.getElementById('deleteSaleButton').addEventListener('click', function (event) {
                    deleteSale(index, post_time)
                  }, false);
                })
              </script>
            </div>
          </div>
        </div>
      </div>

      <div class="fixed-bottom" id="alert-div">
      </div>
      
      

      <footer class="my-5 pt-5 text-muted text-center text-small">
        <p class="mb-1">&copy; <%= current_year %> Corpers Online</p>
        <!-- <ul class="list-inline">
          <li class="list-inline-item"><a href="#!">Privacy</a></li>
          <li class="list-inline-item"><a href="#!">Terms</a></li>
          <li class="list-inline-item"><a href="#!">Support</a></li>
        </ul> -->
      </footer>
    </div>

    <!-- Bootstrap core JavaScript -->
    
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.bundle.min.js" integrity="sha384-LtrjvnR4Twt/qOuYxE721u19sVFLVSA4hf/rRt6PrZTmiPltdZcI7q7PXQBYTKyf" crossorigin="anonymous"></script>
    
    <script>
        // Example starter JavaScript for disabling form submissions if there are invalid fields
        /* (function () {
          'use strict';

          window.addEventListener('load', function () {
            // Fetch all the forms we want to apply custom Bootstrap validation styles to
            var forms = document.getElementsByClassName('needs-validation');

            // Loop over them and prevent submission
            var validation = Array.prototype.filter.call(forms, function (form) {
              form.addEventListener('submit', function (event) {
                if (form.checkValidity() === false) {
                  event.preventDefault();
                  event.stopPropagation();
                }
                form.classList.add('was-validated');
              }, false);
            });
          }, false);
        })(); */
    </script>
  </body>

</html>