<!DOCTYPE html>
<html lang="en">
    <head>
        <meta http-equiv="content-type" content="text/html; charset=UTF-8">
        <meta charset="utf-8">
        <meta http-equiv="X-UA-Compatible" content="IE=edge">
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <meta name="google" content="notranslate">
        <meta name="description" content="Get connected with other corpers.">
        <meta name="keywords" content="Corpers. Information. PPAs. Accommodation. Routes. Directions. Landmarks.">
        <meta name="author" content="corpers">

        <title>
            <%= corper.statecode %>
            Online
        </title>
        <link rel="icon" href="../../assets/images/1/favicon.ico" type="image/x-icon">

        <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.6.0/dist/css/bootstrap.min.css" integrity="sha384-B0vP5xmATw1+K9KRQjQERJvTumQW0nPEzvF6L/Z6nronJ3oUOFUFpCjEUQouq2+l" crossorigin="anonymous">

        <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js" integrity="sha384-DfXdz2htPH0lsSSs5nCTpuj/zy4C+OGpamoFVy38MVBnE+IbbVYUew+OrCXaRkfj" crossorigin="anonymous"></script>
        <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.6.0/dist/js/bootstrap.bundle.min.js" integrity="sha384-Piv4xVNRyMGpqkS2by6br4gNJ7DXjqk09RmUpJ8jgGtD7zP9yug3goQfGII0yAns" crossorigin="anonymous"></script>

        <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.8.2/css/all.css" integrity="sha384-oS3vJWv+0UjzBfQzYUhtDYW+Pj2yciDJxpsK1OYPAYjqT085Qq/1cq5FLXAZQ7Ay" crossorigin="anonymous">
        <!-- 
            <link href="https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css" rel="stylesheet"
              integrity="sha384-wvfXpqpZZVQGK6TAh5PVlGOfQNHSoD2xbE+QkPxCAFlNEevoEH3Sl0sibVcOQVnN" crossorigin="anonymous"> -->

        <script src="https://cdnjs.cloudflare.com/ajax/libs/holder/2.9.4/holder.js" integrity="sha256-crfkMD0BL2TtiwpbIlXF/SVmGSvOtgbMM8GBkibVKyc=" crossorigin="anonymous"> </script>

        <!-- jQuery's typeahead -->
        <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-typeahead/2.10.6/jquery.typeahead.min.js" integrity="sha256-W+Cxk9exgjON2p73M4RcoKvCpQUZ+IjXhEzZk6rlg9M=" crossorigin="anonymous"></script>

        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jquery-typeahead/2.10.6/jquery.typeahead.min.css" integrity="sha256-CU0/rbxVB3Eixd3bbIuJxHJLDnXriJS9cwp/BfcgpLw=" crossorigin="anonymous"/>

        <!--forThatInput-->
        <link
        rel="stylesheet" href="/assets/css/custom-file-input.css"> <!--//forThatInput-->

        <style type="text/css">
            
            /* 
        .typeahead {
        background-color: #FFFFFF;
        }
        .tt-query {
        box-shadow: 0 1px 1px rgba(0, 0, 0, 0.075) inset;
        }
        .tt-hint {
        color: #999999;
        }
        .tt-menu {
        background-color: #FFFFFF;
        border: 1px solid rgba(0, 0, 0, 0.2);
        border-radius: 8px;
        box-shadow: 0 5px 10px rgba(0, 0, 0, 0.2);
        margin-top: 12px;
        }
        .tt-suggestion:hover {
        cursor: pointer;
        background-color: #0097CF;
        color: #FFFFFF;
        }
        .tt-suggestion p {
        margin: 0;
        } */

            /* remove this and the onNavigation after to remove the scroll and up and down arrow navigation feature */
            .typeahead__list {
                max-height: 300px;
                overflow-y: auto;
                overflow-x: hidden;
            }

        </style>
        <style>
            #loader {
                border: 5px solid #f3f3f3;
                -webkit-animation: spin 1s linear infinite;
                animation: spin 1s linear infinite;
                border-top: 5px solid #555;
                border-radius: 50%;
                width: 40px;
                height: 40px;
                margin: 50px auto auto;
            }

            form#form-search {
                width: 45%;
            }

            .typeahead__container {
                width: -webkit-fill-available;
            }

            .card-columns {
                overflow-x: scroll;
                height: 40vh;
            }

            .profile-pic {
                width: 45px;
                height: 45px;
            }

            @media(max-width: 576px) {
                .card-columns {
                    -webkit-column-count: 2;
                    -moz-column-count: 2;
                    column-count: 2;
                    -webkit-column-gap: 0.5rem;
                    -moz-column-gap: 0.5rem;
                    column-gap: 0.5rem;
                    orphans: 1;
                    widows: 1;
                }

                .card-columns .card {
                    display: inline-block;
                    width: 100%;
                }
            }

            @-webkit-keyframes spin {
                0% {
                    -webkit-transform: rotate(0deg);
                    -ms-transform: rotate(0deg);
                    transform: rotate(0deg);
                }

                100% {
                    -webkit-transform: rotate(360deg);
                    -ms-transform: rotate(360deg);
                    transform: rotate(360deg);
                }
            }

            @keyframes spin {
                0% {
                    -webkit-transform: rotate(0deg);
                    -ms-transform: rotate(0deg);
                    transform: rotate(0deg);
                }

                100% {
                    -webkit-transform: rotate(360deg);
                    -ms-transform: rotate(360deg);
                    transform: rotate(360deg);
                }
            }

            .add {
                border-radius: 1rem;
            }

            small {
                font-size: 70%;
            }

            .fileUpload {
                position: relative;
                overflow: hidden;
                margin: 5px;
            }

            .fileUpload input.upload {
                position: absolute;
                top: 0;
                right: 0;
                margin: 0;
                padding: 0;
                font-size: 20px;
                cursor: pointer;
                opacity: 0;
                filter: alpha(opacity=0);
            }

            /**
        using design from https://gedd.ski/post/tile-layouts/
        make the pictures obey fibonacci series
        */
            .app {
                display: grid;
                grid-gap: 5px;
                grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));

            }


            @media(max-width: 576px) {
                .app {
                    grid-template-columns: repeat(auto-fit, minmax(80px, 1fr));
                }

                form#form-search {
                    width: 100%;
                }

                .typeahead__container {
                    width: -webkit-fill-available;
                }
            }

            @media(max-width: 768px) {
                .app {
                    grid-template-columns: repeat(auto-fit, minmax(100px, 1fr));
                }
            }

            ul .list-group-item:hover {
                background: rgb(236, 236, 236);
            }
        </style>
        <style>
            /* fab https://codepen.io/androidcss/pen/yOopGp s*/
            .float {
                position: fixed;
                width: 60px;
                height: 60px;
                right: 20px;
                background-color: rgb(44, 167, 27);
                color: #FFF;
                cursor: pointer;
                border-radius: 50px;
                text-align: center;
                box-shadow: 2px 2px 3px #999;
                z-index: 3;
            }

            .space-float {
                bottom: 107px;
            }

            .sale-float {
                bottom: 40px;
            }

            .my-float {
                margin-top: 22px;
            }

            .edit-solid.icon {
                color: #000;
                position: absolute;
                margin-left: -9px;
                margin-top: 26px;
                width: 24px;
                height: 4px;
                border-radius: 1px;
                border: solid 1px currentColor;
                background-color: currentColor;
                -webkit-transform: rotate(-45deg);
                transform: rotate(-45deg);
            }

            .edit-solid.icon:before {
                content: '';
                position: absolute;
                left: -12px;
                top: -1px;
                width: 0;
                height: 0;
                border-left: solid 5px transparent;
                border-right: solid 5px currentColor;
                border-top: solid 2px transparent;
                border-bottom: solid 2px transparent;
            }

            

           
            /* This CSS will be applied only to phones and other small devices. */
            @media only screen and(max-width: 480px) {
                #TXT {
                    height: 85px;
                }
            }

            /* Small devices (landscape phones, 576px and up) */
            @media(min-width: 576px) {}

            @media(min-width: 768px) {}

            @media(min-width: 992px) {}

            @media(min-width: 1200px) {}

            /* Large desktop */
            @media(min-width: 1200px) {}

            /* Portrait tablet to landscape and desktop */
            @media(min-width: 768px) and(max-width: 979px) {}

            /* Landscape phone to portrait tablet */
            @media(max-width: 767px) {}

            /* Landscape phones and down */
            @media(max-width: 480px) {}
        </style>

        <style>
            /* Top right text */
            .image-wrapper .top-right {
                position: relative;
                top: -95px;
                right: -3px;
            }

            /* testing the post modal with picture arrangment */
            .image-wrapper {
                width: auto;
                height: 100px;
                border: 1px solid #ddd;
            }

            .image-wrapper img {
                object-fit: cover;
                min-width: 100%;
                min-height: 100%;
                width: auto;
                height: auto;
                max-width: 100%;
                max-height: 100%;
            }
        </style>

        <style>
            /*center anything within a div (or other element maybe)*/
            .cnt {
                display: flex;
                justify-content: center;
                align-items: center;
            }
        </style>

        <style>
            /*styling the scroll bar for the text area for posting, https://css-tricks.com/custom-scrollbars-in-webkit/ and http://www.tagindex.net/css/form/scrollbar_color.html */
            /* width */
            textarea.shadow-sm::-webkit-scrollbar {
                width: 5px;
            }

            /* Track */
            textarea.shadow-sm::-webkit-scrollbar-track {
                background: #f1f1f1;
            }

            /* Handle */
            textarea.shadow-sm::-webkit-scrollbar-thumb {
                background: #888;
                -webkit-border-radius: 10px;
                border-radius: 10px;
            }

            /* Handle on hover */
            textarea.shadow-sm::-webkit-scrollbar-thumb:hover {
                background: #555;
            }

            /* Handle scroll bar edge/corner */
            textarea.shadow-sm::-webkit-scrollbar-corner {
                background: rgb(255, 255, 255);
            }
        </style>
        <style>
            p.maintext {
                /* didn't work */
                /* word-wrap: break-word; */
                /* or overflow-wrap */

                -ms-word-break: break-all;
                word-break: break-all;

                /* Non standard for WebKit */
                word-break: break-word;

                -webkit-hyphens: auto;
                -moz-hyphens: auto;
                -ms-hyphens: auto;
                hyphens: auto;
            }

            .s {
                padding-right: 10px !important;
                min-height: auto !important;
            }

            textarea#directions {
                height: 110px;
            }

            #accommodationFormCarousel .carousel-item {
                height: 350px;
            }

            .small-alt-text {
                display: inherit;
                font-size: 7px;
            }

            #accommodationFormCarousel > .carousel-inner {
                overflow-y: scroll;
            }
        </style>

        <style>
            #geo, #notification-bell {
                cursor: pointer;
            }
        </style>
        
        
        <script crossorigin="anonymous" src="/socket.io/socket.io.js"></script>
        <script async defer data-website-id="58dce5f5-c238-4e98-b2c6-e701c258f01d" src="https://using-umami.herokuapp.com/umami.js"></script>
        
        <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.5.0/font/bootstrap-icons.css">
    </head>


    <body>
        <nav class="navbar navbar-expand-sm navbar-light bg-light active">
            <a class="navbar-brand" href="/">Corpers Online</a>
            <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarsExample03" aria-controls="navbarsExample03" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>

            <div
                class="collapse navbar-collapse" id="navbarsExample03">
                <!-- Nav tabs for the accommodation, PPAs, SPAs, SALES -->
                <ul class="nav navbar-nav mr-auto" id="theTabs" role="tablist">
                    <li class="nav-item">
                        <a class="nav-link" href="/profile" aria-selected="true">Profile</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/chat?s=<%= statecode %>" aria-selected="true">
                            Messages
                            <span id="totalunreadmsg" class="float-right badge badge-secondary badge-pill"><%= (total_num_unread_msg > 0 ? total_num_unread_msg : '') %></span>
                        </a>
                    </li>
                    <!-- <li class="nav-item">
                        <a class="nav-link" href="/map" aria-selected="true">Maps</a>
                    </li> -->
                    <li class="nav-item">
                        <a class="nav-link" href="/logout" aria-selected="true">Logout</a>
                    </li>
                </ul>

                <!-- <form class="form-inline my-2 pr-2">
                              <div id="bloodhound">
                                  <input class="form-control s typeahead" type="text" placeholder="Search accommodations, places, PPAs, SPAs">
                              </div>
                            </form> -->

                <form id="form-search" action="/search" name="form-search" class="mr-md-3 form-inline">
                    <div class="typeahead__container">
                        <div class="typeahead__field">
                            <div class="typeahead__query">
                                <input class="s" name="search[query]" type="search" placeholder="Search PPAs, apartments, things to buy etc." autocomplete="off" inputmode="search">
                            </div>
                            <div class="typeahead__button">
                                <button type="submit">
                                    <i class="typeahead__search-icon"></i>
                                </button>
                            </div>
                        </div>
                    </div>
                </form>

                <a data-toggle="modal" id="notification-bell" data-target="#createAlertModal" type="" class=" mr-3"><i class="bi bi-bell"></i></a>

                <!-- Vertically centered modal for handling notifications -->
                <div class="modal fade" id="createAlertModal" tabindex="-1" aria-labelledby="createAlertModalLabel" aria-hidden="true">
                    <div class="modal-dialog modal-dialog-centered">
                      <div class="modal-content">
                        <div class="modal-header">
                            <div class="custom-control custom-switch">
                                <input type="checkbox" class="custom-control-input" id="customSwitch1">
                                <label class="custom-control-label" for="customSwitch1">
                                    <h5 class="modal-title" id="createAlertModalLabel">Create an alert</h5>
                                </label>
                                <small id="create-alert-help" class="form-text text-muted">Grant permission to allow notifications.</small>
                            </div>
                            
                            
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                        </div>
                        <div class="modal-body">
                            <div>Type:</div>
                            <ul class="nav nav-pills mb-3" id="pills-tab" role="tablist">
                                <li class="nav-item" role="presentation">
                                    <a class="nav-link active" id="nav-accommodation-tab" data-toggle="pill" href="#nav-accommodation-alert" role="tab" aria-controls="nav-accommodation-alert" aria-selected="true">Accommodation</a>
                                </li>
                                <li class="nav-item" role="presentation">
                                    <a class="nav-link" id="nav-sale-tab" data-toggle="pill" href="#nav-sale-alert" role="tab" aria-controls="nav-sale-alert" aria-selected="false">Sale</a>
                                </li>
                              </ul>
                            
                            <div class="tab-content" id="nav-tab-content">
                                <div class="tab-pane fade show active" id="nav-accommodation-alert" role="tabpanel" aria-labelledby="nav-accommodation-tab">
                                    Accommodation should be here
                                    <form>
                                        <div class="mb-3">
                                          <label for="alert-accommodation-type" class="col-form-label">Accommodation type:</label>
                                          <input type="text" class="form-control" id="alert-accommodation-type">
                                        </div>
                                        <div class="mb-3">
                                            <label for="alert-rooms" class="col-form-label">Rooms:</label>
                                            <input type="text" class="form-control" id="alert-rooms">
                                        </div>
                                        <div class="mb-3">
                                            <label for="alert-price" class="col-form-label">Price:</label>
                                            <input type="text" class="form-control" id="alert-price">
                                        </div>
                                      </form>
                                </div>
                                <div class="tab-pane fade" id="nav-sale-alert" role="tabpanel" aria-labelledby="nav-sale-tab">
                                    <form>
                                        <div class="mb-3">
                                            <label for="alert-item-name" class="col-form-label">Item name:</label>
                                            <input type="text" class="form-control" id="alert-item-name">
                                            <!--
                                                make a data list of suggestion of items already posted
                                            -->
                                        </div>
                                        <div class="">
                                            <label for="alert-min-price" class="col-form-label">Price range:</label>
                                            
                                                <div class="form-row align-items-center">
                                                  <div class="col-sm-6 my-1">
                                                    <label class="sr-only" for="alert-min-price">Min Price:</label>
                                                    <div class="input-group">
                                                        <div class="input-group-prepend">
                                                          <div class="input-group-text">Min, ₦</div>
                                                        </div>
                                                        <input type="text" class="form-control" id="alert-min-price" placeholder="₦ 2,000">
                                                      </div>
                                                  </div>
                                                  <div class="col-sm-6 my-1">
                                                    <label class="sr-only" for="alert-max-price">Max Price:</label>
                                                    <div class="input-group">
                                                      <div class="input-group-prepend">
                                                        <div class="input-group-text">Max, ₦</div>
                                                      </div>
                                                      <input type="text" class="form-control" id="alert-max-price" placeholder="₦ 15,000">
                                                    </div>
                                                  </div>
                                                </div>
                                              
                                        </div>
                                        <!-- <div>
                                            <label for="customRange3">Price range</label>
                                            <input type="range" class="custom-range" min="0" max="5" step="0.5" id="customRange3">
                                        </div>
                                        <div class="custom-control custom-checkbox">
                                            <input name="relocated" type="checkbox" class="custom-control-input" id="relocated" value="relocated">
                                            <label class="custom-control-label"  for="relocated">Relocated ?</label>
                                        </div> -->
                                        <!-- 
                                            allow any price range option, like a checkbox 
                                            should we put an end date for alerts? like after this date, don't bother notifying the corp member ...
                                        -->
                                      </form>
                                </div>
                              </div>
                          
                        </div>
                        <div class="modal-footer">
                          <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                          <button type="button" class="btn btn-primary">Create alert</button>
                        </div>
                      </div>
                    </div>
                  </div>

                <!-- Button trigger modal for posting-->
                <!-- hide on screens smaller than md -->
                <div class="d-none d-md-block">
                    <div class="btn-group" role="group" aria-label="Post buttons">
                        <button id="bfp" type="button" class="btn btn-primary" data-toggle="modal" data-target="#saleModal">Post a sale</button>
                        <button id="place" type="button" class="btn btn-outline-primary">or space</button>
                    </div>
                </div>

                <!-- <button id="bfp" class="btn btn-primary   d-none d-md-block" data-toggle="modal" data-target="#saleModal">Post</button> -->
            </div>
        </nav>

        <!-- accommodation modal : ask about room mate ... collect a fixed payments from corpers so we pay other corpers that are putting up extra houses from the pool of payments-->
        <div id="accommodationModal" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="accommodationModal" aria-hidden="true">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">Put up an accommodation</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>

                    <div>
                        <form id="accommodationform" enctype="multipart/form-data">
                            <div class="progress" style="height: 2px;">
                                <div class="progress-bar" id="accommodation-progress-bar" role="progressbar" style="width: 20%;" aria-valuenow="20" aria-valuemin="0" aria-valuemax="100"></div>
                            </div>
                            <div
                                class="modal-body">

                                <!-- 
                                    https://getbootstrap.com/docs/4.1/components/carousel/ 

                                    Bugs:
                                    1. if the last accommodation post was a sublease, the next time the model loads, 'when does your rent expires' shows even if new rent is currently selected
                                        1.1 same for "seeking a roommate"
                                    2. Previous button in the modal is disabled!!
                                    3. Next and previous buttons would need resetting too, cause sometimes, it works, most times, it doesn't.
                                -->
                                <div id="accommodationFormCarousel" class="carousel slide" data-keyboard="true" data-wrap="false" data-interval="false">
                                    <div class="carousel-inner">
                                        <div class="carousel-item active">
                                            <div class="mx-1">

                                                <fieldset>
                                                    <h2>Accommodation size</h2>
                                                    <!-- // form for accommodation -->

                                                    <div class="form-group">
                                                        <label for="accommodationtype">Accommodation type</label>

                                                        <select class="custom-select pointer" name="accommodationType" id="accommodationtype" required>
                                                            <option value="" selected>Choose...</option>
                                                            <option value="Self contain">Self contain</option>
                                                            <option value="Flat">Flat</option>
                                                            <option value="1 bedroom flat">1 bedroom flat</option>
                                                            <option value="2 bedroom flat">2 bedroom flat</option>
                                                            <option value="3 bedroom flat">3 bedroom flat</option>
                                                        </select>
                                                        <small class="form-text text-muted mb-3">Choose the category tha best describes it.</small>

                                                        <!-- checkboxes for available rooms -->
                                                        <div class="custom-control custom-checkbox">
                                                            <input name="availableRooms" type="checkbox" class="custom-control-input" id="rooms1" value="Sitting room">
                                                            <label class="custom-control-label" for="rooms1">Sitting room ?</label>
                                                        </div>
                                                        <div class="custom-control custom-checkbox">
                                                            <input name="availableRooms" type="checkbox" class="custom-control-input" id="rooms2" value="Kitchen">
                                                            <label class="custom-control-label" for="rooms2">Kitchen ?</label>
                                                            <!-- Maybe later seperate the two, with radio buttons, kitchen in the apartment or a general one tenant shares -->
                                                        </div>
                                                        <div class="custom-control custom-checkbox">
                                                            <input name="availableRooms" type="checkbox" class="custom-control-input" id="rooms3" value="Bedroom">
                                                            <label class="custom-control-label" for="rooms3">Bedroom ?</label>
                                                            <!-- if it comes with a bedroom, then how many [do later] -->
                                                        </div>
                                                        <!-- input tag check box id attribute connects with the for attribute of label tag -->
                                                        <div class="custom-control custom-checkbox">
                                                            <input name="availableRooms" type="checkbox" class="custom-control-input" id="rooms4" value="Toilet">
                                                            <label class="custom-control-label" for="rooms4">Toilet ?</label>
                                                        </div>
                                                        <div class="custom-control custom-checkbox">
                                                            <input name="availableRooms" type="checkbox" class="custom-control-input" id="rooms5" value="Bathroom">
                                                            <label class="custom-control-label" for="rooms5">Bathroom ?</label>
                                                        </div>
                                                        <div class="custom-control custom-checkbox">
                                                            <input name="availableRooms" type="checkbox" class="custom-control-input" id="rooms6" value="Dining room">
                                                            <label class="custom-control-label" for="rooms6">Dining room ?</label>
                                                        </div>
                                                        <small class="form-text text-muted mb-4">What rooms does the accommodation contain?</small>
                                                        <!-- // checkboxes for available room -->
                                                        <!-- the check box should change based on the accommodation type choosen -->

                                                    </div>
                                                </fieldset>
                                                <!-- // -->
                                            </div>
                                        </div>
                                        <div class="carousel-item">
                                            <div class="mx-1">
                                                <fieldset>
                                                    <h2>Precise location</h2>
                                                    <div class="form-group">
                                                        <!--
                                                            <label for="streetname">Apartment number</label>
                                                            <input type="text" name="streetname" autocomplete="address-level4" class="form-control" id="streetname" placeholder="No. 17B, Room 5.">
                                                        -->
                                                        <!-- <div class="d-none" style="display: none">
                                                            <label for="ppa_geodata">Geo data
                                                                <span class="text-muted">(Optional, but kinda important)</span>
                                                            </label>
                                                            <input type="text" name="acc_geodata" class="form-control" id="acc_geodata" placeholder="What part of town is it?">
                                                            <small class="text-muted">
                                                                We are trying to get an accurate as possible data, so we might ask you to try again if
                                                                what we got won't be of help to other corpers.
                                                            </small>
                                                        </div> -->

                                                        <div class="mb-3">
                                                            <label for="address">Address
                                                                <!-- <small class="form-text text-muted">If you're there right now click <i class="bi bi-pin-map-fill"></i> to locate in maps</small> -->
                                                            </label>
                                                            <div class="input-group">
                                                                <input type="text" name="address" autocomplete="street-address" class="form-control" id="address" placeholder="Please specify street, and area.">
                                                                <!-- <div class="input-group-append" id="geo">
                                                                    <span class="input-group-text">
                                                                        <i class="bi bi-pin-map-fill"></i>
                                                                    </span>
                                                                </div> -->
                                                            </div>
                                                            <small id="accinfo"></small>
                                                        </div>
                                                        <div>
                                                            <label for="directions">Directions</label>
                                                            <textarea class="form-control" name="directions" id="directions" placeholder="Give directions to the accommodation from a popular nearby junction, a land mark or hard-to-miss building"></textarea>
                                                        </div>
                                                    </div>
                                                </fieldset>
                                                <!-- 
                                                    maybe a little map area to pin the location of the place if they're currently there

                                                    we can even try to show a route in the map based on what address is and information in the directions textarea, we can even auto route.
                                                -->

                                                <!-- //end form for accommodation -->
                                            </div>
                                        </div>
                                        <div class="carousel-item">
                                            <div class="mx-1">
                                                <fieldset>
                                                    <h2>Let's see it</h2>
                                                    <!-- what is the attitude of corpers towards community developement ?? how can we work with that, leverage it? imporve it... talk about it. -->
                                                    <!-- use https://twitter.com/mgechev/status/1384726124522098688?s=20 -->
                                                    <!-- // form for accommodation -->

                                                    <!-- 
                                                        <div class="form-group custom-file">
                                                        <input type="file" class="custom-file-input" id="customFileLang" lang="es">
                                                        <label class="custom-file-label" for="customFileLang">Images and/or Videos</label>
                                                        </div> 
                                                    -->

                                                        <div class="form-group"> <div class="custom-file">
                                                            <input type="file" accept="image/*,video/*" multiple="multiple" class="custom-file-input" name="roomsmedia" id="roomsmedia">
                                                            <label class="custom-file-label" for="roomsmedia">Upload media</label>
                                                        </div>
                                                    </div>
                                                </fieldset>

                                                <!-- 
                                                    the images and/or videos they'll put up will be based on the checked box under accommodation type
                                                    so there would be as many input tag for the places in the accommodation
                                                    ( doing this might be stressful, we show a bit of their gallary as a nudge when we do our app)
                                                    or they can just do a short 15 seconds video of everywhere
                                                -->
                                                <div class="card-columns" id="hereNow"></div>
                                            </div>
                                        </div>
                                        <div class="carousel-item">
                                            <div class="mx-1">
                                                <fieldset>
                                                    <!--
                                                        rules:
                                                        1. if you're seeking out a roommate, your rent should also be expiring, so tell us (we should ask for it)
                                                            plus if you tell us when you rented it and the duration, we can guess when it'll expire.
                                                        2. if they're subleasing, we should ask them for when the rent expires, right ? and also calculate how much the incoming occupants would pay based on how much time is left?
                                                            all this unless the poster agrees the new occupants would stay a whole year. sth along these lines sha.

                                                        questions:
                                                        1. when seeking a roommate, should you include the price you paid for the room?
                                                    -->
                                                    <h2>Current Status</h2>
                                                    <div class="form-group">
                                                        <small class="form-text text-muted">Are you leasing out your active rent tenure, or a new rent, or seeking a roomate?</small>
                                                        <!-- //form for accommodation -->

                                                        <!-- 
                                                            we already have price per month or quater or year, we just need to know when it'll expire
                                                            &
                                                            we'd compute how much the corper is expecting from whoever will take over from the rent.
                                                        -->
                                                        <div class="d-block my-3">
                                                            <div class="custom-control custom-radio">
                                                                <input id="newrent" name="tenure" type="radio" class="custom-control-input" value="Lease" checked required>
                                                                <label class="custom-control-label" for="newrent">New rent (No occupant)</label>
                                                            </div>
                                                            <div class="custom-control custom-radio">
                                                                <input id="oldrent" name="tenure" type="radio" class="custom-control-input" value="Sublease" required>
                                                                <label class="custom-control-label" for="oldrent">Subleasing out an active rent</label>
                                                            </div>
                                                            <div class="custom-control custom-radio">
                                                                <input id="roommate" name="tenure" type="radio" class="custom-control-input" value="Roommate" required>
                                                                <label class="custom-control-label" for="roommate">Seeking a roommate</label>
                                                            </div>
                                                        </div>

                                                        <div id="expirediv" class="mb-4" style="display: none;">
                                                            <label for="expire">When does your rent expires:</label>
                                                            <input type="date" id="expire" min="" max="" name="rentExpireDate">
                                                        </div>
                                                        <div id="roommatediv" class="mb-3" style="display: none;">
                                                            <label for="idealRoommate" class="form-label">Describe your ideal roommate:</label>
                                                            <input type="text" class="form-control mb-4" id="idealRoommate" name="idealRoommate" placeholder="Someone nice...">
                                                            <label for="occupantDescription" class="form-label">Describe yourself to your ideal roommate:</label>
                                                            <input type="text" class="form-control" id="occupantDescription" name="occupantDescription" placeholder="I'm tolerant, clean...">
                                                        </div>
                                                        <!-- how much do you want to pay, how would you describe yourself to your roommate? -->
                                                    </div>
                                                </fieldset>

                                                <script>
                                                    // to also set date: const date = new Date().toLocaleDateString('fr-CA', { year: 'numeric', month: '2-digit', day: '2-digit' })
                                                    let minmax = new Date();
                                                    document.getElementById('expire').min = minmax.toISOString().substr(0, 10);
                                                    // Minimum date is today!
                                                    // Max date is two years from now.
                                                    document.getElementById('expire').max = new Date(minmax.getFullYear() + 2, minmax.getMonth()).toISOString().substr(0, 10); // The argument monthIndex is 0-based. This means that January = 0 and December = 11.

                                                    let radios = document.forms["accommodationform"].elements['tenure'];
                                                    for (let i = 0, max = radios.length; i < max; i++) {
                                                        radios[i].onclick = function () {
                                                            // using if-else because we have just two options, so if it isn't one, it's the other
                                                            // if expire date is showing, it means the rent isn't new, then it is required.
                                                            if (this.id == 'oldrent') {
                                                                document.getElementById('expirediv').style.display = 'block';
                                                                document.forms["accommodationform"].elements["rentExpireDate"].required = true;

                                                                document.getElementById('roommatediv').style.display = 'none';
                                                                document.getElementById('roommate-rent').style.display = 'none';

                                                                document.forms["accommodationform"].elements["roommateRent"].required = false;
                                                                document.forms["accommodationform"].elements["rent"].required = true;

                                                                document.forms["accommodationform"].elements["idealRoommate"].required = false;
                                                                document.forms["accommodationform"].elements["occupantDescription"].required = false;
                                                            } else if (this.id == 'roommate') {
                                                                document.getElementById('roommatediv').style.display = 'block';
                                                                document.getElementById('occupant-rent').style.display = 'none';
                                                                document.getElementById('roommate-rent').style.display = 'block';

                                                                document.forms["accommodationform"].elements["roommateRent"].required = true;
                                                                document.forms["accommodationform"].elements["rent"].required = false;

                                                                document.forms["accommodationform"].elements["idealRoommate"].required = true;
                                                                document.forms["accommodationform"].elements["occupantDescription"].required = true;

                                                                // console.log('new rent [lease]');
                                                                document.getElementById('expirediv').style.display = 'none';
                                                                document.forms["accommodationform"].elements["rentExpireDate"].required = false;
                                                            } else {
                                                                document.getElementById('expirediv').style.display = 'none';
                                                                document.forms["accommodationform"].elements["rentExpireDate"].required = false;

                                                                document.getElementById('roommatediv').style.display = 'none';
                                                                document.getElementById('roommate-rent').style.display = 'none';
                                                                document.forms["accommodationform"].elements["idealRoommate"].required = false;
                                                                document.forms["accommodationform"].elements["occupantDescription"].required = false;
                                                            }
                                                        }
                                                    }
                                                </script>

                                                <!-- //end form for accommodation -->
                                            </div>
                                        </div>
                                        <div class="carousel-item">
                                            <div class="mx-1">
                                                <fieldset>
                                                    <h2>Metrics about the rent</h2>
                                                    <!-- //form for accommodation -->
                                                    <div class="form-group">

                                                        <div class="d-block my-3">
                                                            <div class="custom-control custom-radio">
                                                                <input id="monthly" name="rentRange" type="radio" class="custom-control-input" value="monthly" required>
                                                                <label class="custom-control-label" for="monthly">Monthly</label>
                                                            </div>
                                                            <div class="custom-control custom-radio">
                                                                <input id="quarterly" name="rentRange" type="radio" class="custom-control-input" value="quarterly" required>
                                                                <label class="custom-control-label" for="quarterly">Quarterly</label>
                                                            </div>
                                                            <div class="custom-control custom-radio">
                                                                <input id="yearly" name="rentRange" type="radio" class="custom-control-input" value="yearly" checked required>
                                                                <label class="custom-control-label" for="yearly">Yearly</label>
                                                            </div>
                                                        </div>

                                                        <!-- 
                                                            this should be disabled until the corper chooses either per month or quarter or year then we say price per whatever the person chose

                                                            per month/quater/year should be based on what they choose ... more js :((

                                                            if a corp member is seeking a room mate (if they got that Accommodation from us we know the price, and we'll make sure they don't post more than half the rent cost for their roommate)
                                                        -->
                                                        <div id="occupant-rent">
                                                            <label for="rent" class="d-flex">Price per month/quater/year</label>
                                                            <div class="input-group">
                                                                <div class="input-group-prepend">
                                                                    <span class="input-group-text">&#8358;</span>
                                                                </div>
                                                                <input name="rent" type="number" inputmode="numeric" class="form-control" id="rent" placeholder="Recurring price">
                                                                <div class="invalid-feedback" style="width: 100%;">
                                                                    The recurring price for the rent is required.
                                                                </div>
                                                            </div>
                                                        </div>
                                                        <div id="roommate-rent" style="display: none;">
                                                            <label for="roommateRent" class="d-flex">Price per month/quater/year for your roommate</label>
                                                            <div class="input-group">
                                                                <div class="input-group-prepend">
                                                                    <span class="input-group-text">&#8358;</span>
                                                                </div>
                                                                <input name="roommateRent" type="number" inputmode="numeric" class="form-control" id="roommateRent" placeholder="Recurring price">
                                                                <div class="invalid-feedback" style="width: 100%;">
                                                                    The recurring price for the rent is required.
                                                                </div>
                                                            </div>
                                                        </div>

                                                    </div>
                                                </fieldset>
                                                <!-- // -->
                                            </div>


                                        </div>

                                    </div>

                                </div>

                            </div>

                            <div class="modal-footer">
                                <div class="btn-group" role="group" aria-label="Carousel navigation">
                                    <button class="btn btn-outline-primary" id="ap" href="#accommodationFormCarousel" data-slide="prev">
                                        Previous
                                    </button>
                                    <button class="btn btn-primary" id="an" href="#accommodationFormCarousel" data-slide="next">
                                        Next
                                    </button>
                                </div>
                            </div>
                        </form>
                    </div>

                </div>
            </div>
        </div>

        <script>
            // for the accommodation form carousel
            let accProBar = document.getElementById('accommodation-progress-bar');
            $('#accommodationFormCarousel').on('slide.bs.carousel', function (e) {
                switch (e.to) {
                    case 0: accProBar.style.width = '20%';
                        accProBar.setAttribute('aria-valuenow', 20);
                        // addForm.elements[0].focus()
                        break;
                    case 1: accProBar.style.width = '40%';
                        accProBar.setAttribute('aria-valuenow', 40);
                        // addForm.elements[1].focus()
                        break;
                    case 2: accProBar.style.width = '60%';
                        accProBar.setAttribute('aria-valuenow', 60);
                        // addForm.elements[2].focus()
                        break;
                    case 3: accProBar.style.width = '80%';
                        accProBar.setAttribute('aria-valuenow', 80);
                        // addForm.elements[3].focus()
                        break;
                    case 4: accProBar.style.width = '100%';
                        accProBar.setAttribute('aria-valuenow', 100);
                        break;
                }
                if (e.from == 3 && e.to == 4) {
                    // change the next button to submit && make sure the form is full before they can submit
                    // make the corper see a preview of how their post would look like too, to make them make changes as much as neccessary
                    // console.info('change');
                    $("#an").replaceWith("<input type='submit' class='btn btn-primary' id='accsub' value='Put up for rent'>");
                } else if (e.from == 4 && e.to == 3) {
                    $("#accsub").replaceWith('<button class="btn btn-primary" id="an" href="#accommodationFormCarousel" data-slide="next">Next</button>');
                }
            });

            $('#accommodationFormCarousel').on('slid.bs.carousel', function (e) { // do something…
            });

            $('#accommodationModal').on('shown.bs.modal', function (e) {
                // console.info('acc modal shown');
                // document.getElementById('ap').disabled = true;

                // once a user submits accommodation, reset everything and prevent user from posting twice
                // also reset if all fields are empty when corper closes the carousel
                // if the form is not completely filled, disable the submit/put up for rent button
            });

            $('#accommodationModal').on('hidden.bs.modal', function (e) {
                // console.info('acc modal hidden');
                // document.getElementById('ap').disabled = true;
            });
        </script>

        <!-- the Modal for posting (sale)-->
        <div class="modal fade" id="oldsaleModal" tabindex="-1" role="dialog" aria-labelledby="oldpostModalLabelSale" aria-hidden="true">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <form
                        id="oldpostform" name="oldpostform">
                        <!-- a very good form -->
                        <input type="text" name="mapimage" id="mapimg" hidden>
                        <input type="text" name="type" id="ptype" value="sale" hidden>

                        <div class="modal-header">
                            <h5 class="modal-title">Create post</h5>
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                        </div>
                        <div class="modal-body">

                            <textarea autofocus required name="text" type="text" class="form-control mb-3 shadow-sm" placeholder="Upload items for sale. Share the location of your PPA (give directions from a popular landmark or junction!). Get creative." id="oldTXT"></textarea>
                            <!--make sure there's no space between opening and closing textarea tag-->

                            <small id="locinfo"></small>

                            <div id="previewParent">
                                <div id="previewPostPics" class="app"></div>
                            </div>

                            <div class="d-flex align-items-center">
                                <div class="mr-auto">
                                    <div class="fileUpload btn btn-outline-dark">
                                        <span class="d-none d-md-block d-lg-none   d-lg-block d-xl-none   d-xl-block">
                                            Image
                                        </span>
                                        <i class="fas fa-images   d-block d-sm-none  d-none d-sm-block d-md-none"></i>
                                        <input type="file" accept="image/*" name="oldsee" class="upload" multiple id="oldIMG">
                                    </div>
                                    <!--
                                        <div class="fileUpload btn btn-light">
                                            <span>Vid</span>
                                            <input type="file" accept="video/*" class="upload" id="VID">
                                        </div>
                                    -->
                                    <!--
                                        the input for giving routes should offer places suggestions as user types.
                                        use appropriate ui. form place to place with side notes and advice.
                                    -->
                                    <!--
                                        instead of putting like, nooo!!!!! put affrimations, other corpers
                                        should affirm other prople posts !!! increases trust. possible give alternative,
                                        and even say when something is a lie or fasle or not entirely true.
                                    -->
                                    <!--
                                        <button type="button" class="btn btn-light" id="trackme">Share Route</button>
                                    -->


                                    <div class="btn-group" role="group" aria-label="Sharing places and locations"> <div
                                        class="btn btn-outline-dark" id="findme">
                                        <!-- Visible only on md, lg, xl | should only be visible on lg, and xl-->
                                        <span class="d-none d-md-block d-lg-none   d-lg-block d-xl-none   d-xl-block">Share current location</span>

                                        <!-- Visible only on xs, sm | should be visible on md too-->
                                        <i class="fas fa-location-arrow  d-block d-sm-none  d-none d-sm-block d-md-none"></i>
                                    </div>

                                    <!--
                                        <button class="btn btn-outline-dark" id="findme">Share location</button>
                                    -->

                                    <!--
                                        <div class="btn btn-outline-dark" id="place">
                                            <span class="d-none d-md-block d-lg-none   d-lg-block d-xl-none   d-xl-block">or accommodation</span>
                                            <i class="fas fa-home   d-block d-sm-none  d-none d-sm-block d-md-none"></i>
                                        </div>
                                    -->

                                    <!--
                                        <button class="btn btn-outline-dark" id="place">or accommodation</button>
                                    -->
                                    </div>
                                    <!-- way less than 245418.50 -->
                                    <!--
                                        like malls/shops apartments markets parks/bustops or popular pickup and dropoff points. 
                                    -->
                                </div>
                            </div>

                        </div>
                        <div class="modal-footer">
                            <input type="submit" class="btn btn-primary" id="oldpostsubmit" value="Post" disabled>
                        </div>

                    </form>
                </div>
            </div>
        </div>

        <div id="saleModal" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="postModalLabelSale" aria-hidden="true">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">Put up a sale</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div>
                        <form id="postform" name="postform">
                            <div class="modal-body">

                                <div class="mx-1">
                                    <fieldset>
                                        <h2>Provide item details</h2>
                                        <!-- <small>.</small> -->
                                        <!-- // -->
                                        <div class="form-group">
                                            <label for="itemname">Item name</label>
                                            <input type="text" required name="itemname" class="form-control" id="itemname" placeholder="Fridge, table, carpet, ...">
                                            <!--
                                                make a data list of suggestion of items already posted
                                            -->
                                            <label for="ppa_geodata">Item price</label>
                                            <div class="input-group">
                                                <div class="input-group-prepend">
                                                    <span class="input-group-text">&#8358;</span>
                                                </div>
                                                <input
                                                name="price" required type="number" inputmode="numeric" class="form-control" id="itemprice" placeholder="Price" required>
                                                <!-- 
                                                <div class="invalid-feedback" style="width: 100%;">
                                                    The recurring price for the rent is required.
                                                </div> 
                                                -->
                                            </div>
                                            <!-- <small class="text-muted"></small> -->

                                            <label for="ppa_geodata">Item image</label>
                                            <br>
                                            <div class="fileUpload btn btn-outline-dark">
                                                <span class="d-none d-md-block d-lg-none   d-lg-block d-xl-none   d-xl-block">
                                                    Image
                                                </span>
                                                <i class="fas fa-images d-block d-sm-none d-none d-sm-block d-md-none"></i>
                                                <input required type="file" accept="image/*" name="see" class="upload" multiple id="IMG">
                                            </div>

                                            <div>
                                                <label for="directions">Description
                                                    <span class="text-muted">(optional)</span>
                                                </label>
                                                <textarea class="form-control" name="text" type="text" class="form-control mb-3 shadow-sm" placeholder="Maybe give a bit more details about the item" id="TXT"></textarea>
                                            </div>
                                        </div>
                                    </fieldset>
                                    <!-- 
                                        maybe a little map area to pin the location of the place if they're currently there
                                    
                                        we can even try to show a route in the map based on what address is and information in the directions textarea, we can even auto route.
                                    -->

                                    <!-- //end form for accommodation -->
                                </div>

                            </div>

                            <div
                                class="modal-footer">
                                <!--             
                                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                                    <button type="button" class="btn btn-primary">Save changes</button> 
                                -->

                                <input type="submit" class="btn btn-primary" id="postsubmit" value="Post">
                            </div>
                        </form>
                    </div>


                </div>
            </div>
        </div>

        <script>
            /**
             * 
             * TODO
             * For compulsory fields, disable the next button until users fills in valid texts for that section https://getbootstrap.com/docs/4.1/components/carousel/
             */
            document.getElementById('place').addEventListener('click', function (event) { // close post modal and open accommodation modal
                $('#saleModal').modal('hide');

                $('#accommodationModal').modal('show');
            })
        </script>

        <script>
            // script for submitting posts (not accommodation).
            function sendPost() { // close the modal first. this makes the site look
                $('#saleModal').modal('hide');

                // use fetch api later on or NOT https://gomakethings.com/why-i-still-use-xhr-instead-of-the-fetch-api/
                const XHR = new XMLHttpRequest();

                // Bind the FormData object and the form element
                let FD = new FormData(form);

                // checks if there are preview picture and the mapboximage exists
                /* if (document.getElementById('previewParent').hasChildNodes() & $("#mapboximage").length ) {
                    FD.append('type', 'location');
                    
                    // get the image loaded from mapbox here.
                    FD.append('mapimage', document.getElementById('mapboximage').src );
                    // console.log('l', );
    
                } else {
                    FD.append('type', 'sale');
                } */

                // Define what happens on successful data submission
                XHR.addEventListener("load", function (event) {
                    console.log(event.target.responseText, event.target, event.timeStamp);
                    // calculate the time a post was clicked, when it was submitted and when the response was given to the user

                    // and reset the form
                    document.forms['postform'].reset();
                    // also clear the append image in the document body if it exists
                    /* if ( document.getElementById('previewParent').children.length > 0 ) { // what does hasChildNodes actually do? and why does it return this error: TypeError: Argument 1 of Node.removeChild is not an object. when there is no previewParent
                        document.getElementById('previewParent').removeChild( document.getElementById( 'preview' ) );
                    } */

                    // remove appended images/media in the preview
                    $('#previewPostPics').html('');
                    $('#preview').html('');
                    // for location too

                    // if there were location info, clear it
                    document.getElementById('locinfo').innerHTML = '';

                    // some times there are cases where posts happen immediately after each other
                    // and there would then be more than one notifications on the user tl...
                    // how do we ensure they are closed as they come ? A dedicated functions to handle notifications ????/

                    if (event.target.status === 200) {
                        $("#1or0")
                        .before(`<div class="alert alert-success mt-3 fade show post-posted" id="postposted" role="alert">Post created successfully.
                                    <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                                        <span aria-hidden="true">&times;</span>
                                    </button>
                                </div>
                                `);

                    } else {
                        $("#1or0")
                        .before(`<div class="alert alert-success mt-3 fade show post-posted" id="postposted" role="alert">We didn\'t get that. Please post again.
                                    <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                                        <span aria-hidden="true">&times;</span>
                                    </button>
                                    </div>`);
                    }
                    

                });

                // Define what happens in case of error
                XHR.addEventListener("error", function (event) {
                    $("#1or0")
                        .before(`<div class="alert alert-danger mt-3 fade show post-posted" id="postposted" role="alert">Oops! Something went wrong. It's us, not you.
                                    <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                                        <span aria-hidden="true">&times;</span>
                                    </button>
                                    </div>`);
                    
                });

                // Define what happens at end of request
                XHR.addEventListener("loadend", function (event) {
                    setTimeout(function () {
                        $('div.alert.mt-3.fade.post-posted.show').alert('close'); // Closes all opened alert (for now all) by removing it from the DOM
                    }, 4000);
                    
                });

                // Set up our request
                XHR.open('POST', '/posts');
                // true makes it async request

                // XHR.setRequestHeader('Content-Type', 'multipart/form-data'); // causes error Error: Multipart: Boundary not found

                // The data sent is what the user provided in the form
                XHR.send(FD);
            }

            // Access the form element...
            let form = document.getElementById("postform");

            // ...and take over its submit event.
            form.addEventListener("submit", function (event) {
                event.preventDefault(); // the default behaviour is refreshing the page and adding search params to the url

                sendPost();
            }, false, true); // https://developer.mozilla.org/en-US/docs/Web/Events/submit
        </script>

        <script>
            // script for submitting accommodation (not posts).
            function sendAccommodation() { // close the accommodation modal form
                $('#accommodationModal').modal('hide');

                // use fetch api later on or NOT https://gomakethings.com/why-i-still-use-xhr-instead-of-the-fetch-api/
                const XHR1 = new XMLHttpRequest();

                // Bind the FormData object and the form element
                let FD1 = new FormData(form1);

                // Define what happens on successful data submission
                XHR1.addEventListener("load", function (event) {
                    console.log(event);

                    // and reset the form
                    document.forms["accommodationform"].reset();

                    // remove the appended room images
                    $('#hereNow').html('');

                    // remove the appended room images
                    $('#accinfo').html('');

                    // set the input button to 'Upload media...' whyyyy ???? no need!
                    // document.forms[1].elements["roomsmedia"].labels[0].children[0].innerText = "Upload media...";

                    // rest the carousel too
                    $('#accommodationFormCarousel').carousel(0);

                    // make the previous and next buttons as they were
                    $("#accsub").replaceWith('<button class="btn btn-primary" id="an" href="#accommodationFormCarousel" data-slide="next">Next</button>');
                    $("#ap").replaceWith('<button class="btn btn-outline-primary" id="ap" href="#accommodationFormCarousel" disabled="true" data-slide="prev">Previous</button>');

                    if (event.target.status === 200) { // add successful alert
                        $("#tl").before(`<div class="alert alert-success mt-3 fade show" id="accommodationposted" role="alert">Accommodation space was posted successfully.
                                    <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                                        <span aria-hidden="true">&times;</span>
                                    </button>
                                    </div>`);

                    } else { // add UNsuccessful alert
                        $("#tl").before(`<div class="alert alert-danger mt-3 fade show" id="accommodationposted" role="alert">We couldn\'t post that. Please try again.
                                    <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                                        <span aria-hidden="true">&times;</span>
                                    </button>
                                    </div>`);
                    }

                    /**
                     * resetting the accommodation for element, Important!!
                     * should this be a function ?
                     * 1. make Necessary parts hidden
                     * 
                     * BUG: try all diffrent rent types (for subleasd, roommate, and new rent) ... fix all bugs
                    */
                    document.getElementById('roommatediv').style.display = 'none';
                    document.getElementById('expirediv').style.display = 'none';
                    document.getElementById('roommate-rent').style.display = 'none';

                    document.getElementById('occupant-rent').style.display = 'block';

                });

                // Define what happens at end of request
                XHR1.addEventListener("loadend", function (event) {
                    setTimeout(function () {
                        $('#accommodationposted').alert('close'); // Closes an alert by removing it from the DOM
                    }, 4000);
                    
                });

                // Define what happens in case of error
                XHR1.addEventListener("error", function (event) {
                    $("#tl")
                        .before(`<div class="alert alert-danger mt-3 fade show" id="accommodationposted" role="alert">Oops! Something went wrong. It's us, not you.
                                    <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                                        <span aria-hidden="true">&times;</span>
                                    </button>
                                    </div>`);
                });

                // Set up our request
                XHR1.open('POST', '/accommodations', true);
                // true makes it async request

                // XHR1.setRequestHeader('Content-Type', 'multipart/form-data'); // this causes error [Multipart, boundary not found], it should stay commented

                // The data sent is what the user provided in the form
                XHR1.send(FD1);
            }

            // Access the form element...
            let form1 = document.getElementById("accommodationform");

            // ...and take over its submit event.
            form1.addEventListener("submit", function (event) {
                event.preventDefault(); // the default behaviour is refreshing the page and adding search params to the url

                sendAccommodation();
            }, false, true); // https://developer.mozilla.org/en-US/docs/Web/Events/submit
        </script>

        <div>

            <script>
                $("#me").click(function (e) {
                    e.preventDefault();
                    $("#wrapper").toggleClass("toggled");
                });
            </script>
            <!-- make alerts appear only in relevant screens. like the alert in the middle (col-sm-9) appear only on small screens. then the one on the right, col-sm-3 appear only on large screens.-->

            <main role="main">
                <div class="pt-3 maincontent p-md-4 container">
                    <div
                        class="row pb-3">
                        <!-- hide on screens smaller than md -->
                        <div
                            class="col-md-3 d-none d-md-block">
                            <!-- put the corper's information. let them see their profile (and be able to change it) -->
                            <div class="card shadow" id="profilecard">
                                <div class="card-body">
                                    <h6>About
                                        <small>
                                            &#183;
                                            <a href="/profile">Edit</a>
                                        </small>
                                    </h6>
                                    <ul id="profile">
                                        <li>
                                            Serving at
                                            <a href="#!">
                                                <%= corper.servicestate %>
                                            </a><!--link should do what?-->
                                        </li>
                                        <li>
                                            Batch
                                            <a href="#!">
                                                <%= batch %>
                                            </a>
                                            <!--link should take to /state/batch-->
                                        </li>
                                        <li>
                                            PPA at
                                            <a href="<%= ( corper.ppaId ? '#!/places?nop=' + corper.PPA.name : '/profile#PPA' ) %>">
                                                <%= ( corper.ppaId ? corper.PPA.name : '?' ) %>
                                            </a>
                                        </li>
                                    </ul>
                                </div>
                            </div>
                            <!-- test -->
                            <!--//-->
                        </div>

                        <div class="col-md-6" data-spy="scroll" id="middlediv" data-offset="0">

                            <div id="loader" class='pb-3'></div>
                            <div id="1or0"></div>
                            <!--in this middle part, we'll give various toggle tabs for location of accommodation, PPAs, SPAs, SALES-->
                            <!-- Nav tabs for the accommodation, PPAs, SPAs, SALES -->
                            <!-- <ul class="nav nav-tabs nav-justified" id="myTab" role="tablist">
                                    <li class="nav-item">
                                    <a class="nav-link active" id="sales-tab" data-toggle="tab" href="#sales" role="tab" aria-controls="sales" aria-selected="true">Sales</a>
                                    </li>
                                    <li class="nav-item">
                                    <a class="nav-link" id="accommodation-tab" data-toggle="tab" href="#accommodation" role="tab" aria-controls="accommodation" aria-selected="false">accommodations</a>
                                    </li>
                                    <li class="nav-item">
                                    <a class="nav-link" id="ppa-tab" data-toggle="tab" href="#ppa" role="tab" aria-controls="ppa" aria-selected="false">PPAs</a>
                                    </li>
                                    <li class="nav-item">
                                    <a class="nav-link" id="spa-tab" data-toggle="tab" href="#spa" role="tab" aria-controls="spa" aria-selected="false">SPAs</a>
                                    </li>
                                </ul> -->
                            <!-- Tab panes for the accommodation, PPAs, SPAs, SALES-->
                            <!-- <div class="tab-content" id="myTabContent">
                                <div class="tab-pane fade show active" id="sales" role="tabpanel" aria-labelledby="sales-tab">
                                organic, assumenda labore aesthetic magna delectus mollit. Keytar helvetica VHS salvia yr,
                                vero magna velit sapiente labore stumptown. Vegan fanny pack odio cillum wes anderson 8-bit,
                                sustainable jean shorts beard ut DIY ethical culpa terry richar
                                </div>
                                <div class="tab-pane fade" id="accommodation" role="tabpanel" aria-labelledby="accommodation-tab">
                                Food truck fixie locavore, accusamus mcsweeney's marfa nulla single-origin coffee squid.
                                Exercitation +1 labore velit, blog sartorial PBR leggings next level wes anderson artisan
                                four loko farm-to-table craft beer twee. Qui photo booth
                                </div>
                                <div class="tab-pane fade" id="ppa" role="tabpanel" aria-labelledby="ppa-tab">
                                hardson biodiesel. Art party scenester stumptown, tumblr butcher vero sint
                                qui sapiente accusamus tattooed echo park.
                                </div>
                                <div class="tab-pane fade" id="spa" role="tabpanel" aria-labelledby="spa-tab">
                                To help fit your needs, this works with -based markup, as shown above,
                                    or with any arbitrary “roll your own” markup. Note that if you’re using,
                                    you shouldn’t add role="tablist" directly to it.
                                </div>
                            </div> -->
                            <ul class="list-group" id="tl"> 
                            <!--
                                <li class="list-group-item">
                                <div class="media mb-4">
                                    <img class="align-self-start mr-2 rounded-circle" src="data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%2245%22%20height%3D%2245%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%2045%2045%22%20preserveAspectRatio%3D%22none%22%3E%3Cdefs%3E%3Cstyle%20type%3D%22text%2Fcss%22%3E%23holder_167df8c1bbc%20text%20%7B%20fill%3A%23AAAAAA%3Bfont-weight%3Abold%3Bfont-family%3AArial%2C%20Helvetica%2C%20Open%20Sans%2C%20sans-serif%2C%20monospace%3Bfont-size%3A10pt%20%7D%20%3C%2Fstyle%3E%3C%2Fdefs%3E%3Cg%20id%3D%22holder_167df8c1bbc%22%3E%3Crect%20width%3D%2245%22%20height%3D%2245%22%20fill%3D%22%23EEEEEE%22%3E%3C%2Frect%3E%3Cg%3E%3Ctext%20x%3D%223.96875%22%20y%3D%2226.896875%22%3E45x45%3C%2Ftext%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E" alt="user image">
                                    <div class="media-body">
                                    <div class="d-flex w-100 justify-content-between">
                                        <h6 class="mb-1">AB/12F/9478</h6>
                                        <small>2 days ago</small>
                                    </div>
                                    <p>f f sad a bbbbbb</p>
                                    <div >
                                        <div class="media-content"></div>
                                    </div>
                                    </div>
                                </div>
                                <div class="align-items-center"></div>
                                </li>
    
    
                                <li class="list-group-item">
                                    <div class="media mb-4">
                                        <img class="align-self-start mr-2 rounded-circle" data-src="holder.js/45x45?theme=thumb" alt="user image">
                                        <div class="media-body">
                                        <div class="d-flex w-100 justify-content-between">
                                            <h6 class="mb-1">List group item heading <br> <small>Umuahia, Abia State</small></h6>
                                            <small>3 days ago</small>
                                        </div>
                                        <p>Cras sit amet nibh libero, in gravida nulla. Nulla vel metus scelerisque ante sollicitudin. Cras purus odio, vestibulum in vulputate at, tempus viverra turpis. Fusce condimentum nunc ac nisi vulputate fringilla. Donec lacinia congue felis in faucibus.</p>
                                        <p>Donec sed odio dui. Nullam quis risus eget urna mollis ornare vel eu leo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus.</p>
                                        <div >
                                            <div class="media-content">
                                                <div class="app">
                                                    <img data-action="zoom" src="/5.png" class="img-fluid border" alt="Responsive image">
                                                    <img data-action="zoom" src="/3.png" class="img-fluid border" alt="Responsive image">
                                                    <img data-action="zoom" src="/6.PNG" class="img-fluid border" alt="Responsive image">
                                                </div>
                                            </div>
                                        </div>
                                        <div id="comment">
                                            <hr>
                                            <div class="media mt-3">
                                                <a class="pr-2" href="#!">
                                                    <img class="rounded-circle" data-src="holder.js/45x45?theme=thumb" alt="img">
                                                </a>
                                                <div class="media-body">
                                                    <div class="d-flex w-100 justify-content-between">
                                                        <h6 class="mb-1">List group item heading</h6>
                                                        <small>3 days ago</small>
                                                    </div>
                                                    <p>Cras sit amet nibh libero, in gravida nulla. Nulla vel metus scelerisque ante sollicitudin. Cras purus odio, vestibulum in vulputate at, tempus viverra turpis. Fusce condimentum nunc ac nisi vulputate fringilla. Donec lacinia congue felis in faucibus.</p>
                                                    <div id="media-content">
                                                        <div class="app">
                                                        <img data-action="zoom" src="/4.jpg" class="img-fluid border"  alt="Responsive image">
                                                        <img src="/3.png" class="img-fluid border"  alt="Responsive image">
                                                        </div>
                                                    </div>
                                                    </div>
                                                </div>
                                        </div>
                                        </div>
                                    </div>
                                </li>
                        -->

                            </ul>
                        </div>
                        <!-- hide on screens smaller than md -->
                        <div class="col-md-3 d-none d-md-block">

                            <div class="card shadow" id="statscard">
                                <div class="card-body text-center">
                                    <h6 class="card-title">Stats</h6>
                                    <!-- How many items are available for sale. houses for rent? and corpers online, for when we start having numbers -->
                                    <!-- <p class="card-text">
                                                                            <ul>
                                        
                                                                            </ul>
                                                                          </p>
                                                                          <a href="#!" >Go somewhere</a>
                                                                          <a href="#!" class="card-link">Card link</a>
                                                                          <a href="#!" class="card-link">Another link</a> -->
                                    <div>
                                        <small id="tco"></small>
                                    </div>
                                </div>
                            </div>

                            <!--testing forms uploads-->
                        <!--// testing forms uploads-->
                            <!--strick through the message 1 corper online when user is offline-->
                            <!--
                                                          they should see news about current events concerning corpers happening around them
                                
                                                          news like cds meetings happening now, send forth meetings happening now, due dates for PV Signing,
                                                          polls and results of incoming executives should be shown, congratulate
                                                          corper so so n so for becoming the new secretary for ____ CDS, involve
                                                          accounts for CDS Inspectors, so they can send messages too and verify
                                                          people. Help the variuo CDS in ways we can; e.g. Publicity in gathering
                                                          articules, reporting real-time events. (once somebody registers as being
                                                          in publicity and editorial CDS, they can report real time events. like
                                                          people in ENvironmetal CDS can take pictures of bad places around them
                                                          and report to responsible Govt. officials etc. || people in drug and free
                                                          cds can audit drugs in Pharmacies and road side sales ... people in law
                                                          and legal aid can find SPAs at Law Courts etc. If Law offices need corpers,
                                                          they should advertise on Corpers Online and easily find !!!!!!!! --
                                                          use this in other screnerious too (like other Organisation that need
                                                          corpers for SPAs work, can put their requirements etc.) )
                                                    -->
                        </div>
                    </div>
                </div>

                <!-- fab Code begins here -->
                <div class="float space-float d-md-none" data-toggle="modal" data-target="#accommodationModal">
                    <i class="fa fa-home icon my-float"></i> <!-- <i class="bi bi-house-door-fill icon my-float"></i> -->
                </div>
                <!-- hide on screens wider than md -->
                <div class="float sale-float d-md-none" data-toggle="modal" data-target="#saleModal">
                    <i class="fa fa-tag icon my-float"></i> <!-- <i class="bi bi-tags-fill icon my-float"></i> -->
                </div>
            </main>


        </div>
        <script>
            // check if it's empty i.e. the person is the first to register in the state
            /** tell the user they are the first to show up from their state and they should start using the platform, basically give them a tour */
            let tell = function () {
                if (!document.getElementById("1or0msg")) {
                    // if it isn't there before
                    // console.log('teeeeelllllllllllll');
                    // create a new div element
                    let newDiv = document.createElement("div");
                    newDiv.id = '1or0msg'
                    newDiv.className = 'pt-4 pb-2 display-2';
                    newDiv.style.fontSize = '1.5rem';
                    // and give it some content
                    let newContent = document.createTextNode("You're either the first here or no one has posted anything... yet! Either way, welcome. Now tell others what you want to sell or sublease. Post something!");
                    // add the text node to the newly created div
                    newDiv.appendChild(newContent);

                    // add the newly created element and its content into the DOM
                    document.getElementById("1or0").appendChild(newDiv);
                }
            };
            // Replace source
            // to replace that with a "missing image" graphic that you are sure exists so there is better visual feedback that something is wrong
            $('img').on("error", function () {
                $(this).attr('src', 'assets/images/2/favicon-16x16.png');
                // you may wish to trigger some kind of Ajax action to send an email to a site admin when this occurs.
            });

            // to do ;; lazy load images

            // if someone refreshes the page, a big maybe cache the present posts [keep the variable user_timeline_sale array intacted] and fetch newer posts from db and change the time on the older posts!!!

            // for loader
            window.onload = function () { /* if (!document.getElementById( "tl" ).contains(document.getElementsByClassName('list-group-item')[0])) {
                    tell();
                    document.getElementById('loader').style.display = 'none' ;
                    console.log('nothing in here ...')
                }   */
            }
            // we'll be doing loader alot ...for when socket.io is still fetching data... and the timeline is empty... for when user drags page down too like android app maybe


            /**
            bootstrap scripts
    
            DON'T DELETE NEXT COMMENTED CODE, FOR USE LATER.
            */
            /*
    
              $('#myTab a[href="#spa"]').on('click', function (e) {
                e.preventDefault()
                $(this).tab('show')
                console.log('spa tab active');
              })
    
              $('#theTabs a[href="#ppa"]').on('click', function (e) {
                e.preventDefault()
                $(this).tab('show')
                console.log('ppa tab active');
              })
    
              $('#theTabs a[href="#accommodation"]').on('click', function (e) {
                e.preventDefault()
                $(this).tab('show')
                console.log('ppa tab active');
              })
    
              $('#theTabs a[href="#sales"]').on('click', function (e) {
                e.preventDefault()
                $(this).tab('show')
                console.log('ppa tab active');
              })
    
              $('#theTabs a[href="#spa"]').on('click', function (e) {
                e.preventDefault()
                $(this).tab('show')
                console.log('ppa tab active');
              })
    
            */

            /***
             * 
             * WARNING !!!!!!!!!!!!!!!!!!!!!!!!!!!!1
             * 
             * READ SOMETHING ABOUT SCOPE WHERE IF YOU CAN MAKE VARIABLES NOT ACCESSIBLE FROM window object
             * 
             * Apply it to variable user_timeline_sale and user_timeline_accommodations and EVERY OTHER VARIABLE
             */


            let pathArray = window.location.pathname.split('/');
            // console.log('user = ', pathArray[2]);

            // start: user_timeline_sale[0], //oldest post in user's timeline
            // end: user_timeline_sale[user_timeline_sale.length - 1] //newest post in user's timeline
            // user_timeline_sale[] = boardcast messages currently in the user's time line
            let user_timeline_sale = [],
                user_timeline_accommodations = [];

            // connect to socket.io on /user but somehow it still connects with\to /

            /*
            By default, a long-polling connection is established first, then
            upgraded to "better" transports (like WebSocket {transports: ['websocket'],}). If you like to
            live dangerously, this part can be skipped:
            */
            let socket = io('/user', {
                transports: ['websocket'],
                query: {
                    corper: JSON.stringify(<%- JSON.stringify(corper) %>),
                    user: pathArray[2],
                    sutl: user_timeline_sale,
                    autl: user_timeline_accommodations,
                    // first_post_pst: user_timeline_sale.length > 0 ? user_timeline_sale[0] : null,
                    // last_post_pst: user_timeline_sale.length > 0 ? user_timeline_sale[user_timeline_sale.length - 1] : null,
                    // first_post_acc: user_timeline_accommodations.length > 0 ? user_timeline_accommodations[0] : null,
                    // last_post_acc: user_timeline_accommodations.length > 0 ? user_timeline_accommodations[user_timeline_accommodations.length - 1] : null,
                    test: 'ertrerer',
                    from: window.location.pathname.substring(1, 12),
                    statecode: '<%= statecode %>' // window.location.pathname.substring( 1, 12 ) // '<%= statecode %>'
                }
            });

            socket.on('totalunreadmsg', function (data) {
                // console.log('got an unread message', data);
                // (data.count == 1 ? '' : 's') adds 's' to 'corpers' if there are more than one corpers online.

                let ph = document.getElementById('totalunreadmsg').innerHTML;
                if (! ph == '') { // if it is not empty, i.e. there was a number there, there's been unread messages
                    let c = parseInt(ph);
                    document.getElementById('totalunreadmsg').innerHTML = c + 1; // increment the number of messages
                } else {
                    document.getElementById('totalunreadmsg').innerHTML = 1;
                }
            });

            socket.on('connect', function () {

                // console.log('connected', new Date(Date.now()).toLocaleString(), Date.now());

                // console.log('the socket object:', socket);
                // trying sth --{first_post: user_timeline_sale[0], last_post: user_timeline_sale[user_timeline_sale.length - 1]}

            });
            socket.on('reconnect', (attemptNumber) => {
                // console.log('connetce again')

                // console.log(attemptNumber, 'reconnection, re-connected :', new Date(Date.now()).toLocaleString());

                $('#offlinealert').alert('close');
                // Closes an alert by removing it from the DOM

                // this unstrikes the number of corpers div, // there's a story on this with $('').removeAttr('style');
                $('#tco').css('text-decoration', '');
            });

            // on reconnection, reset the transports option, as the Websocket
            // connection may have failed (caused by proxy, firewall, browser, ...)
            socket.on('reconnect_attempt', () => {
                socket.io.opts.transports = ['polling', 'websocket'];
            });

            // reason (String) either 'io server disconnect' or 'io client disconnect'
            socket.on('disconnect', (reason) => {
                // find a really good way to handle sessions - in server and client -- if user disconnects for too long and session expires, take user to login, if user closes this window, he shouldn't be able to open it unless it's thesame computer  --- just handle sessions effectively
                // console.log('disconnected!', reason);

                // check if the alert is there already before adding it so there is no redundancy (so it doens't appear twice)
                if ($("#offlinealert").length) { // to check if element exists from https://stackoverflow.com/a/41605814 (& jQuery doc.)
                    $("#tl").before(`<div class="alert alert-danger mt-3" id="offlinealert" role="alert">Seems you\'re offline!
                        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                        </div>`)
                }

                // incase their tl is empty and hasn't connected
                // remove the loader --this is a not so much an awesome logic
                document.getElementById('loader').style.display = 'none';

                // apply text-decoration: line-through;
                $('#tco').css('text-decoration', 'line-through');

                // track users across multiple session id because when sockets disconnects and then reconnects they are assigned a new session id without knowing the new id that sockets had, but socket.io has a way of knowing with the 'reconnect' event listner...

                // very important !!!!!!!!!!!!
                // also we need to message the user when there was an error in sending messages/ posts.
                // alert them when they are offline and handle other events they might want to perform. Like save their draft messages in a cookie.

                if (reason === 'io server disconnect') { // the disconnection was initiated by the server, you need to reconnect manually
                    socket.connect();
                }
                // else the socket will automatically try to reconnect
            });

            socket.on('corpersCount', function (data) {
                // console.log('got corpers count');
                // (data.count == 1 ? '' : 's') adds 's' to 'corpers' if there are more than one corpers online.
                document.getElementById('tco').innerHTML = data.count + ' corper' + (
                data.count == 1 ? '' : 's'
            ) + ' online';
            });

            socket.emit('ferret', 'aeee', 'tobi', (data) => {
                // this funtion will run here to show the server has gotten our message.
                // console.log(data); // data will be 'woot ...'
            });

            let cb = function (params) { // console.log('the callback', params);
            };
            socket.on('callback', cb);

            /*  when we receive a boardcast message --save them (in var user_timeline_sale --an array somewhere up).
                so that thing where we can confirm a message has gotten to the server. */
            let bc = function (data) { // remove the loader --this is not a very awesom logic, but it works well
                document.getElementById('loader').style.display = 'none';

                // know when they are the first user in their state or if no one has posted on their state
                if (typeof data.post === 'object') {
                    console.log('wahat w egogt', data);
                    console.log('is array', Array.isArray(data.post), 'should be true');

                    // if we didn't get anything from backend and there's no post in corper's timeline
                    if (Array.isArray(data.post) && data.post.length === 0 && !document.getElementById("tl").contains(document.getElementsByClassName('list-group-item')[0])) {
                        // return true; // give them a tour guide
                        // console.log('got heree e ;')
                        tell();
                    } else { // return false; // remove the element div that tells them they are the first if the div exists

                        if (document.getElementById("1or0").hasChildNodes()) { // checking just to be extra sure

                            document.getElementById("1or0").removeChild(document.getElementById('1or0msg'));
                            // congratulate them for being the first to post
                        }

                        for (let post_index = 0; post_index < data.post.length; post_index++) {
                            const _post = data.post[post_index];
                            // the work with the data we just Received 
                            if (data.post[post_index].type === 'sale') {
                                user_timeline_sale.push(data.post[post_index].createdAt);
                            } else if (data.post[post_index].type === 'accommodation') {
                                user_timeline_accommodations.push(data.post[post_index].createdAt);
                            }


                            console.log('received boardcast message', data); // uncomment if we wanna see what we got

                            let feeds = document.getElementById('tl');

                            let newFeed = document.createElement("li");
                            newFeed.setAttribute('class', 'list-group-item');

                            // each post has a unique id, we'll later add state code to make it more unique
                            newFeed.setAttribute('id', (Date.parse(data.post[post_index].createdAt)));
                            // later convert the input time to js timestamp

                            // chaining is not good for appendChild()

                            let h = document.createElement('div');
                            h.setAttribute('class', '');
                            let g = document.createElement('div');
                            g.setAttribute('class', 'media-content');
                            h.appendChild(g);

                        
                            // ------------------ previously on how we handled images
                            /* if (data.post[post_index].images) {
                
                                for (let i = 0; i < data.post[post_index].images.length; i++) {
                                    // let ii = 'img' + i.toString();
                                    ii = document.createElement('img');
                                    ii.setAttribute('class', 'img-fluid border');
                                    ii.setAttribute('src', data.post[post_index].images[i]);
                                    ii.setAttribute('alt', 'user\'s posted image ' + i);
                                    gg.appendChild(ii);
                                }
                
                                g.appendChild(gg);
                
                            } */



                                    
                            if (data.post[post_index].type == "sale") {
                                if (data.post[post_index].mediaId && Array.isArray(data.post[post_index].saleMedia.urls)) {
                                    let gg = document.createElement('div');
                                    gg.setAttribute('class', 'app');

                                    let jk = data.post[post_index].saleMedia.urls.length;
                                    for (let i = 0; i < jk; i++) { // let ii = 'img' + i.toString();
                                        ii = document.createElement('img');
                                        ii.setAttribute('class', 'img-fluid border');

                                        
                                        ii.setAttribute('src', data.post[post_index].saleMedia.urls[i]); // add the trailing slash for normal images that was uploaded.
                                        ii.setAttribute('alt', 'user\'s posted image'); // do better
                                        gg.appendChild(ii);
                                    }
                                    g.appendChild(gg);
                                }

                                /*
                                let ii = document.createElement('img');
                                ii.setAttribute('class', 'col-4');
                                ii.setAttribute('data-src','holder.js/64x64?theme=thumb');
                                ii.setAttribute('alt', 'user\'s posted image');
                                */

                                let e = document.createElement('div');
                                e.setAttribute('class', 'd-flex w-100 justify-content-between');

                                let z = document.createElement('h6');
                                z.setAttribute('class', 'mb-1');
                                z.innerHTML = data.post[post_index].saleByCorper.firstname + '<br> <small>' + data.post[post_index].saleByCorper._location + '</small>';

                                let y = document.createElement('small');
                                y.setAttribute('class', '');
                                y.innerText = data.post[post_index].age;
                                e.appendChild(z);
                                e.appendChild(y);

                                let k = document.createElement("p");
                                // k.classList(["maintext"]);
                                k.setAttribute('class', 'maintext');
                                k.innerHTML = `<p><span class='font-italic text-muted'>Item</span>: ${
                                    data.post[post_index].itemname
                                } selling for &#8358;${
                                    new Intl.NumberFormat().format(data.post[post_index].price)
                                }.</p> ${
                                    data.post[post_index].text ? "<p><span class='font-italic text-muted'>More info</span>: " + data.post[post_index].text + "</p>" : ''
                                }`;
                                // k.innerText = data.post[post_index].text;
                                let d = document.createElement('div');
                                d.setAttribute('class', 'media-body');
                                d.appendChild(e);
                                d.appendChild(k); // the text from sender
                                d.appendChild(h);

                                let _c = document.createElement('div');
                                _c.setAttribute('class', 'small-alt-text');
                                let c = document.createElement('img');
                                c.setAttribute('class', 'align-self-start mr-2 rounded-circle profile-pic');
                                // c.setAttribute('data-src', 'holder.js/64x64');

                                c.setAttribute('src', (data.post[post_index].picture_id ? "https://drive.google.com/uc?id=" + data.post[post_index].picture_id : 'data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%2245%22%20height%3D%2245%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%2045%2045%22%20preserveAspectRatio%3D%22none%22%3E%3Cdefs%3E%3Cstyle%20type%3D%22text%2Fcss%22%3E%23holder_167df8c1bbc%20text%20%7B%20fill%3A%23AAAAAA%3Bfont-weight%3Abold%3Bfont-family%3AArial%2C%20Helvetica%2C%20Open%20Sans%2C%20sans-serif%2C%20monospace%3Bfont-size%3A10pt%20%7D%20%3C%2Fstyle%3E%3C%2Fdefs%3E%3Cg%20id%3D%22holder_167df8c1bbc%22%3E%3Crect%20width%3D%2245%22%20height%3D%2245%22%20fill%3D%22%23EEEEEE%22%3E%3C%2Frect%3E%3Cg%3E%3Ctext%20x%3D%223.96875%22%20y%3D%2226.896875%22%3E' + `${
                                    data.post[post_index].statecode.slice(0, 2)
                                } ${
                                    data.post[post_index].statecode.slice(3, 5)
                                }` + '%3C%2Ftext%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E'));
                                // c.setAttribute('src', 'holder.js/45x45');
                                c.setAttribute('alt', data.post[post_index].statecode);
                                // c.setAttribute('style', 'font-size: 8px;');

                                let b = document.createElement('div');
                                b.setAttribute('class', 'mt-2 row');
                                // do not put var b inside the this next if block. it would affect newFeed.appendChild(b)
                                if (window.location.pathname.substring(1) != data.post[post_index].statecode) { // if they aren't the one who made the post, show the three interact icons
                                    for (let index = 0; index < 3; index++) {
                                        let zx = document.createElement('a');
                                        if (index == 1) {
                                            zx.href = `/chat?posts[type]=sale&posts[id]=${
                                                data.post[post_index].id
                                            }`;
                                        }
                                        zx.setAttribute('class', 'col-4 text-center');

                                        let cv = document.createElement('i');
                                        cv.setAttribute('class', (index == 0 ? 'far fa-bookmark' : index == 1 ? 'far fa-comment-alt' : 'fas fa-ellipsis-h'));

                                        zx.appendChild(cv);
                                        b.appendChild(zx);
                                    }
                                }

                                let a = document.createElement('div');
                                a.setAttribute('class', 'media mb-4');
                                _c.appendChild(c);
                                a.appendChild(_c);
                                a.appendChild(d);

                                newFeed.appendChild(a);
                                newFeed.appendChild(b);

                                // right now, we'll append every post together
                                feeds.insertBefore(newFeed, feeds.children[0]);

                            } else if (data.post[post_index].type === 'accommodation') {
                                // if accommodation
                                console.log('adding accommodation', data);

                                // rooms is an array already!! how and when ?
                                // check if it's an array, else split
                                // because when a post is made, it is immediately sent to others before saving to db
                                // so in that state of being sent to others, it is an array, but from db, it's a string

                                let rms = (Array.isArray(data.post[post_index].availableRooms) ? data.post[post_index].availableRooms : data.post[post_index].availableRooms.split(',')); // we'd later not need this tenery check ...availableRooms would be coming as an array

                                // the && is quite redundant, if mediaId is not null, then we would def have an array of urls ...but let's keep it going
                                if (data.post[post_index].mediaId && Array.isArray(data.post[post_index].accommodationMedia.urls)) {
                                
                                let jk = data.post[post_index].accommodationMedia.urls.length;


                                // todo: if it's only one picture... don't show indicators
                                if (jk > 0) { // the carousel
                                    let gg = document.createElement('div');
                                    gg.setAttribute('id', 'carousel' + new Date(data.post[post_index].createdAt).getTime()); // each carousel has unique id with input time maybe new Date(data.post[post_index].input_time)
                                    gg.setAttribute('class', 'carousel slide carousel-fade');
                                    gg.setAttribute('data-ride', 'carousel');

                                    // the indicators for the corousel
                                    let ind = document.createElement('ol');
                                    ind.setAttribute('class', 'carousel-indicators bg-dark');

                                    // the carousel inner
                                    let cinn = document.createElement('div');
                                    cinn.setAttribute('class', 'carousel-inner');

                                    // the actual indicators
                                    for (let i = 0; i < jk; i++) {
                                        let aind = document.createElement('li');
                                        aind.setAttribute('data-target', '#carousel' + new Date(data.post[post_index].createdAt).getTime()); // the # is important
                                        aind.setAttribute('data-slide-to', i);

                                        ind.appendChild(aind);

                                        // the carousel items
                                        let ci = document.createElement('div');
                                        ci.setAttribute('class', 'carousel-item' + (
                                            i == 0 ? ' active' : ''
                                        )); // the first carousel item must be active

                                        cinn.appendChild(ci);

                                        cimg = document.createElement('img');
                                        cimg.setAttribute('class', 'd-block img-fluid mx-auto');
                                        cimg.setAttribute('loading', 'lazy');
                                        cimg.setAttribute('src', data.post[post_index].accommodationMedia.urls[i]);
                                        console.log('[][]', data.post[post_index].accommodationMedia.urls[i]);
                                        cimg.setAttribute('alt', `Might be a picture of a ${''}`); // will add this later
                                        // this is not exactly correct, needs more work


                                        // for each carousel item, append to it the image and explanatory/description div
                                        ci.appendChild(cimg);


                                        // the descriptions [we aren't adding the right descriptions]
                                        // let thed = document.createElement('div');
                                        // thed.setAttribute('class', 'carousel-caption d-none d-md-block');

                                        let hh5 = document.createElement('h3');
                                        // // jk[i].includes(rms[ i ]);
                                        // // let tr = jk[i].slice(parseInt(jk[i]).toString().length, jk[i].lastIndexOf('.'));
                                        // hh5.innerText = `${(rms[i] == undefined ? rms[0] : rms[i])}`;
                                        // // hh5.innerText = ( rms[ i ] == undefined ? rms[ 0 ] : rms[ i ] ); // this is not exactly correct, needs more work

                                        // // let ppp = document.createElement( 'p' );
                                        // // ppp.innerText = `Maybe some metric about ${(rms[i] == undefined ? rms[0] : rms[i])}`; // this is not exactly correct, needs more work

                                        // append h5 and p to description div
                                        // thed.appendChild(hh5);
                                        // // thed.appendChild( ppp );

                                        // then ...
                                        // ci.appendChild(thed);
                                        // end of the descriptions

                                    };
                                    gg.appendChild(ind);
                                    gg.appendChild(cinn);

                                    
                                    // append the other indicators here

                                    for (let index = 0; index <= 1; index++) { // 2nd indicators
                                        let aind2 = document.createElement('a');
                                        aind2.setAttribute('class', 'carousel-control-' + (
                                            index == 0 ? 'prev' : 'next'
                                        ) + ' bg-secondary');
                                        aind2.setAttribute('href', '#carousel' + new Date(data.post[post_index].createdAt).getTime());
                                        aind2.setAttribute('data-slide', (index == 0 ? 'prev' : 'next'));
                                        aind2.setAttribute('style', 'top: 43%; bottom: 43%;');
                                        aind2.setAttribute('role', 'button');
                                        aind2.setAttribute('title', (index == 0 ? 'Previous room' : 'Next room'));

                                        let aind2icon = document.createElement('span');
                                        aind2icon.setAttribute('class', 'carousel-control-' + (index == 0 ? 'prev' : 'next') + '-icon');
                                        aind2icon.setAttribute('aria-hidden', 'true');

                                        aind2.appendChild(aind2icon);
                                        // append the other indicators here
                                        gg.appendChild(aind2);
                                    }

                                    g.appendChild(gg);

                                }

                                }


                                let e = document.createElement('div');
                                e.setAttribute('class', 'd-flex w-100 justify-content-between');

                                let z = document.createElement('h6');
                                z.setAttribute('class', 'mb-1');
                                z.innerHTML = data.post[post_index].accommodationByCorper.firstname + '<br> <small>' + data.post[post_index].accommodationByCorper._location + '</small>';

                                let y = document.createElement('small');
                                y.setAttribute('class', '');
                                y.innerText = data.post[post_index].age;
                                e.appendChild(z);
                                e.appendChild(y);

                                let k = document.createElement("p");
                                // k.classList(["maintext"]);
                                k.setAttribute('class', 'maintext');
                                // console.log(data.post[post_index]);
                                // to make the sentence thingy ['ggff','gfff'].toString().replace(',', ', ').replace(['ggff','gfff'][['ggff','gfff'].length - 1], 'and ' + ['ggff','gfff'][['ggff','gfff'].length - 1]) gives "ggff, and gfff" // there is a little edit with the ,
                                k.innerHTML = `<address>
                                        <span class='font-italic text-muted'>Address</span>: <a href="#!">${
                                    data.post[post_index]?.Location?.address
                                } </a> 
                                    </address>
                                    <p>
                                        <span class='font-italic text-muted'>Details</span>: ${
                                    data.post[post_index].accommodationType
                                } ${
                                    (rms.length > 1 ? 'with ' + rms.toString().replace('', 'and ').split(',').reverse().toString().replace(/,/g, ', ') : 'with a ' + rms[0])
                                } at &#8358;${
                                    new Intl.NumberFormat().format(data.post[post_index].rent)
                                } ${
                                    data.post[post_index].rentRange
                                }. ${
                                    (data.post[post_index].tenure == 'Sublease' ? 'Sublease (expires ' + new Date(Date.parse(data.post[post_index].rentExpireDate)).toDateString().italics().bold() + ').' : data.post[post_index].tenure == 'Roommate' ? '<b>Seeking a roommate:</b> ' + data.post[post_index].idealRoommate + '. <b>They are:</b> ' + data.post[post_index].occupantDescription : 'New lease.')
                                }
                                    </p>
                                    <p>
                                        <span class='font-italic text-muted'>Directions</span>: ${
                                    data.post[post_index]?.Location?.directions
                                }
                                    </p>`;
                                let d = document.createElement('div');
                                d.setAttribute('class', 'media-body');
                                d.appendChild(e);
                                d.appendChild(k); // the text from sender
                                d.appendChild(h);

                                let _c = document.createElement('div');
                                _c.setAttribute('class', 'small-alt-text');
                                let c = document.createElement('img');
                                c.setAttribute('class', 'align-self-start mr-2 rounded-circle profile-pic');
                                // c.setAttribute('data-src','holder.js/64x64');

                                c.setAttribute('src', (data.post[post_index].picture_id ? "https://drive.google.com/uc?id=" + data.post[post_index].picture_id : 'data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%2245%22%20height%3D%2245%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%2045%2045%22%20preserveAspectRatio%3D%22none%22%3E%3Cdefs%3E%3Cstyle%20type%3D%22text%2Fcss%22%3E%23holder_167df8c1bbc%20text%20%7B%20fill%3A%23AAAAAA%3Bfont-weight%3Abold%3Bfont-family%3AArial%2C%20Helvetica%2C%20Open%20Sans%2C%20sans-serif%2C%20monospace%3Bfont-size%3A10pt%20%7D%20%3C%2Fstyle%3E%3C%2Fdefs%3E%3Cg%20id%3D%22holder_167df8c1bbc%22%3E%3Crect%20width%3D%2245%22%20height%3D%2245%22%20fill%3D%22%23EEEEEE%22%3E%3C%2Frect%3E%3Cg%3E%3Ctext%20x%3D%223.96875%22%20y%3D%2226.896875%22%3E' + `${
                                    data.post[post_index].statecode.slice(0, 2)
                                }  ${
                                    data.post[post_index].statecode.slice(3, 5)
                                }` + '%3C%2Ftext%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E'));
                                // c.setAttribute('src', 'holder.js/45x45');
                                c.setAttribute('alt', data.post[post_index].accommodationByCorper.statecode);
                                // c.setAttribute('style', 'font-size: 8px;');

                                let b = document.createElement('div');
                                b.setAttribute('class', 'mt-2 row');
                                // do not put var b inside the this next if block. it would affect newFeed.appendChild(b)
                                if (window.location.pathname.substring(1) != data.post[post_index].statecode) { // if they aren't the one who made the post, show the three interact icons
                                    for (let index = 0; index < 3; index++) {
                                        let zx = document.createElement('a');
                                        if (index == 1) {
                                            zx.href = `/chat?posts[type]=accommodation&posts[id]=${
                                                data.post[post_index].id
                                            }`;
                                        }
                                        zx.setAttribute('class', 'col-4 text-center');

                                        let cv = document.createElement('i');
                                        cv.setAttribute('class', (index == 0 ? 'far fa-bookmark' : index == 1 ? 'far fa-comment-alt' : 'fas fa-ellipsis-h'));

                                        zx.appendChild(cv);

                                        b.appendChild(zx);
                                    }
                                }

                                let a = document.createElement('div');
                                a.setAttribute('class', 'media mb-4');
                                _c.appendChild(c);
                                a.appendChild(_c);
                                a.appendChild(d);

                                newFeed.appendChild(a);
                                newFeed.appendChild(b);

                                // right now, we'll append every post together
                                feeds.insertBefore(newFeed, feeds.children[0]); // we need to append chronologically
                            } else if (data.post[post_index].type == 'location') { // NEEDS WORK
                                console.info('got a location', data);
                                if (true) {
                                    let gg = document.createElement('div');
                                    gg.setAttribute('class', 'app');

                                    ii = document.createElement('img');
                                    ii.setAttribute('class', 'img-fluid border');

                                    // if what's coming is already a url (like our mapbox pictures) // change later maybe...
                                    try {
                                        let a = new URL(data.post[post_index].media || data.post[post_index].mapdata).toString();
                                        // console.log('good url?')
                                        ii.setAttribute('src', a);
                                    } catch (error) {
                                        // if it's not already a url
                                        // console.error('err image map', error);
                                        // with holder.js set the src attr of the image to display an appropriate err msg
                                        // ii.setAttribute('src', a); // set a with error image
                                    }
                                    ii.setAttribute('alt', 'map image'); // do better
                                    gg.appendChild(ii);
                                    g.appendChild(gg);
                                }

                                /*
                                let ii = document.createElement('img');
                                ii.setAttribute('class', 'col-4');
                                ii.setAttribute('data-src','holder.js/64x64?theme=thumb');
                                ii.setAttribute('alt', 'user\'s posted image');
                                */

                                let e = document.createElement('div');
                                e.setAttribute('class', 'd-flex w-100 justify-content-between');

                                let z = document.createElement('h6');
                                z.setAttribute('class', 'mb-1');
                                z.innerHTML = data.post[post_index].saleByCorper.firstname + ' <br> <small>' + data.post[post_index].saleByCorper._location + '</small>';

                                let y = document.createElement('small');
                                y.setAttribute('class', '');
                                y.innerText = data.post[post_index].age;
                                e.appendChild(z);
                                e.appendChild(y);

                                let k = document.createElement("p");
                                // k.classList(["maintext"]);
                                k.setAttribute('class', 'maintext');
                                k.innerText = data.post[post_index].text;
                                let d = document.createElement('div');
                                d.setAttribute('class', 'media-body');
                                d.appendChild(e);
                                d.appendChild(k); // the text from sender
                                d.appendChild(h);

                                let _c = document.createElement('div');
                                _c.setAttribute('class', 'small-alt-text');
                                let c = document.createElement('img');
                                c.setAttribute('class', 'align-self-start mr-2 rounded-circle profile-pic');
                                // c.setAttribute('data-src','holder.js/64x64');

                                c.setAttribute('src', (data.post[post_index].picture_id ? "https://drive.google.com/uc?id=" + data.post[post_index].picture_id : 'data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%2245%22%20height%3D%2245%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%2045%2045%22%20preserveAspectRatio%3D%22none%22%3E%3Cdefs%3E%3Cstyle%20type%3D%22text%2Fcss%22%3E%23holder_167df8c1bbc%20text%20%7B%20fill%3A%23AAAAAA%3Bfont-weight%3Abold%3Bfont-family%3AArial%2C%20Helvetica%2C%20Open%20Sans%2C%20sans-serif%2C%20monospace%3Bfont-size%3A10pt%20%7D%20%3C%2Fstyle%3E%3C%2Fdefs%3E%3Cg%20id%3D%22holder_167df8c1bbc%22%3E%3Crect%20width%3D%2245%22%20height%3D%2245%22%20fill%3D%22%23EEEEEE%22%3E%3C%2Frect%3E%3Cg%3E%3Ctext%20x%3D%223.96875%22%20y%3D%2226.896875%22%3E' + `${
                                    data.post[post_index].statecode.slice(0, 2)
                                } ${
                                    data.post[post_index].statecode.slice(3, 5)
                                }` + '%3C%2Ftext%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E'));
                                // c.setAttribute('src', 'holder.js/45x45');
                                c.setAttribute('alt', data.post[post_index].statecode);
                                // c.setAttribute('style', 'font-size: 8px;');


                                let b = document.createElement('div');
                                b.setAttribute('class', 'mt-2 row');
                                // do not put var b inside the this next if block. it would affect newFeed.appendChild(b)
                                if (window.location.pathname.substring(1) != data.post[post_index].statecode) { // if they aren't the one who made the post, show the three interact icons
                                    for (let index = 0; index < 3; index++) {
                                        let zx = document.createElement('a');
                                        if (index == 1) {
                                            zx.href = `/chat?posts[type]=sale&posts[id]=${
                                                data.post[post_index].id
                                            }`;
                                        }
                                        zx.setAttribute('class', 'col-4 text-center');

                                        let cv = document.createElement('i');
                                        cv.setAttribute('class', (index == 0 ? 'far fa-bookmark' : index == 1 ? 'far fa-comment-alt' : 'fas fa-ellipsis-h'));

                                        zx.appendChild(cv);

                                        b.appendChild(zx);
                                    }
                                }


                                let a = document.createElement('div');
                                a.setAttribute('class', 'media mb-4');
                                _c.appendChild(c);
                                a.appendChild(_c);
                                a.appendChild(d);

                                newFeed.appendChild(a);
                                newFeed.appendChild(b);

                                // right now, we'll append every post together
                                feeds.insertBefore(newFeed, feeds.children[0]);
                            }

                            // send 'my other event' to everyone else

                            // find a way to record the number of people that has seen a particular ad/post. and show the sender.

                            // socket.emit('seen', { my: 'saw data, because we recieved it' });
                            
                        }
                    
                    }
                }

                

                


                
            };

            socket.on('boardcast message', bc);
        </script>
        <script>

            /*
                let handleKey = function(evt) {
                  console.log('keyup on #TXT field');
                  if (evt.keyCode === 13 || evt.keyCode === 14) {
                    sendMsg();
                    console.log('sent');
                  }
                }
    
                txtFld.addEventListener("keyup", handleKey, false );
            */

            // some sort of global variables
            let previewParent = document.getElementById('previewParent');
            let msg = {
                images: [],
                videos: []
            };
            /*       let sendBtn = document.getElementById("SEND");
            
                  function sendMsg() {
            
                    console.log('sendMsg function running');
            
                    msg.text = txtFld.value,
                      msg.type = "sale",
                      msg.post_time = Date.now(),
                      msg.sender = pathArray[2],
                      msg.location = userlocation,
                      msg.statecode = usersc;
                    socket.emit('boardcast message', msg, (delivered_value) => {
                      // this funtion will run here to show the server has gotten our message.
                      console.log('server got our message ? ', delivered_value); // data will be 'true'
                    }); // use post time to know the particular message.
            
                    console.log(msg,
                      'append boardcast message to corper tl then use sth to make them know their stuff be delivered.');
            
                    //append sent message to sender's timeline (not yet !! maybe when we do we'll make user know it hasn't been done)
            
                    //close modal
                    $('#saleModal').modal('hide');
                    //show that post has been made
            
                  }
            
            
                  // after post has been made and/or modal closed
                  $('#saleModal').on('hidden.bs.modal', function (e) {
                    // do something...
                    console.log('post modal hidden');
                    txtFld.value = "";
                    document.getElementById('SEND').disabled = true;
                    //remove the attached image from the div and the input tag, empty the msg object
            
                    //if there's an attached image, remove it, we don't want errors incase the corper didn't pick any pictures
                    //remove all
            
                    while (previewParent.firstChild) {
                      previewParent.removeChild(previewParent.firstChild);
                    }
            
                    if (msg.images.length > 0) {
                      msg.images = [];
                    }
                  });
            
                  sendBtn.addEventListener("click", sendMsg, false); */

            $('#saleModal').on('shown.bs.modal', function (e) { // txtFld.focus();
            });

            $('#saleModal').on('hidden.bs.modal', function (e) {
                /* if (document.getElementById( 'previewParent' ).hasChildNodes()) {
                        document.getElementById( 'previewParent' )
                            .removeChild( document.getElementById( 'preview' ) );
                            document.getElementById( 'locinfo' ).innerHTML = '';
                    } */

                // if we want to clear what they were gonna post, uncomment. but we don't !
                /* $('#previewPostPics').html('');
                    document.getElementById( 'locinfo' ).innerHTML = ''; */

            });

            /*
              WE'LL LAZY LOAD ALL CONTENT, FIND A WAY TO COMPRESS IMAGES, TRY TO FIND WHATSAPP COMPRESSION ALGORITHM (CAUSE THEY'RE REALLY GOOD) - ONCE WE DO THIS, MAYBE WE CAN DO VIDEO TOO
            */

            /* Dynamically adding a change listener to the img input button */
            let imgBtn = document.getElementById("IMG");


            function handleImages() { // remove location image from DOM ... and clear map data ???? yes for now, later we'd be saving it, more info
                $('#preview').html('');
                $('#locinfo').html('');
                document.getElementById("mapimg").value = '';
                // set post type to sale
                document.getElementById("ptype").value = 'sale';
                // let preview = document.getElementById('preview');
                // let preview = document.createElement( 'div' );
                // preview.setAttribute( 'id', 'preview' );
                // preview.setAttribute( 'class', 'app' );
                // console.log( 'created!' );

                let fileList = this.files;
                /* now you can work with the file list */
                // console.log('picture(s) picked!');

                // remove what was there (pics to post) before
                $('#previewPostPics').html('');


                for (let i = 0; i < fileList.length; i++) {
                    let file = fileList[i];

                    if (file.type.startsWith('image/')) {
                        /* let contain = document.createElement( 'div' );
                        contain.setAttribute( 'class', 'image-wrapper' );
                        contain.setAttribute( 'id', 'image-to-post' + i );
                        let b = document.createElement( 'button' );
                        b.classList.add( 'top-right', 'btn', 'btn-sm' );
                        b.innerHTML = 'Remove';
                        let ico = document.createElement( 'i' );
                        ico.classList.add( 'top-right', 'fa-remove' );
                        b.onclick = function remove( e ) {
                            console.log( e );
                            console.log( 'tryna remove' );
                            preview.removeChild( e.target.parentNode );
                            // remove them from images attribute in msg obj & if possible from the file input tag
                            // msg.images.splice(0, 1);
                            msg.images.splice( msg.images.indexOf( e.target.parentNode.firstChild.currentSrc ), 1 );
                            // why is 1 increased by 1
                            console.log( msg.images );
                        }
    
                        let img = document.createElement( "img" );
    
                        contain.appendChild( img );
                        contain.appendChild( b ); */
                        // or ico
                        // contain.appendChild(ico); // we'd add icon later
                        // img.classList.add("img-fluid", "border"); //add classes 'img-fluid' and 'border' // let's not add it 1stly

                        // preview.appendChild( contain );
                        /*Next, we establish the FileReader to handle asynchronously
                        loading the image and attaching it to the img element.
                        After creating the new FileReader object, we set up its
                        onload function and then call readAsDataURL() to start the
                        read operation in the background. When the entire contents
                        of the image file are loaded, they are converted into
                        a data: URL which is passed to the onload callback.
                        Our implementation of this routine sets the img element's
                        src attribute to the loaded image which results in the image
                        appearing in the thumbnail on the user's screen.*/
                        const reader = new FileReader();
                        /* reader.onload = (
                            function( aImg ) {
                                return function( e ) {
                                    aImg.src = e.target.result;
                                    //e.targer.result is the base64 of the image
                                    //msg.images[i] = aImg.src ;
                                    //either of the two , but wharever method, be able to remove from array when user cancels.
                                    msg.images.push( e.target.result );
                                    console.log( msg );
                                };
                            } )( img );
                        reader.readAsDataURL( file ); */

                        // -----

                        // const file = files[i];
                        // let reader = new FileReader();

                        reader.onload = (function (file) {
                            return function (event) {
                                $('#previewPostPics').append('<img src="' + event.target.result + '" class="rounded img-thumbnail img-fluid" style="max-width: 100%; height: auto;" data-order=0 data-id="' + file.lastModified + '" />');

                            };
                        })(file);

                        // document.forms[2].elements[3].files
                        /* Object.entries(document.forms[2].elements[3].files).forEach( f => {
                            console.log('f', f)
                        }); */

                        reader.readAsDataURL(file);
                    }


                }


                // append the div tag with id=preview
                // previewParent.appendChild( preview );
            }imgBtn.addEventListener("change", handleImages, false);

            $('#roomsmedia').change(function (e) {
                $('#hereNow').empty();
                let files = e.target.files;
                for (let i = 0; i < files.length; i++) {

                    let file = files[i];
                    const reader = new FileReader();

                    reader.onload = (function (file) {

                        // this is adding alt text to images
                        return function (event) {
                            $('#hereNow').prepend(`<div class="card">
                                                <div >
                                                    <img src="${
                                event.target.result
                            }" class="card-img-top" alt="..." data-order=0 data-id="${
                                file.lastModified
                            }" />
                                                </div>
                                                <div >
                                                        <select class="accviews custom-select" id="${
                                file.lastModified
                            }" name="${
                                file.size
                            }" style="border-radius: 0rem;">
                                        <option selected value="">Choose...</option>
                                        <option value="Bathroom">Bathroom</option>
                                        <option value="Sitting Room">Sitting Room</option>
                                        <option value="Toilet">Toilet</option>
                                        <option value="Kitchen">Kitchen</option>
                                        <option value="Bathroom & Toilet">Bathroom & Toilet</option>
                                        <option value="Hallway or Corridor">Hallway/Corridor</option>
                                        <option value="Frontage">Frontage</option>
                                    </select>
                                </div>
                            </div>`);
                            // the options should be what they selected the house has, right ??
                            
                            
                            // will uncomment later
                            $('.accviews')
                            .change(function (evt) {
                                // console.log('name of change', evt, evt.target.attributes['id'].value)
                                // the picture choosen
                                let farr = document.forms[1].elements["roomsmedia"].files;
                                for (let index = 0; index < farr.length; index++) {
                                    const f = farr[index];
                                    // console.log('fname', f.name, f.lastModified)
                                    if (f.lastModified == evt.target.attributes['id'].value) {
                                        // console.log('changed name')
                                        // get extenstion s.substring(s.lastIndexOf('.'), s.length);

                                        // this adds the name of the room, to the size of the file [will uncomment later, after I've decided how to add alt text]
                                        f.name = evt.target.value + f.name.substring(f.name.lastIndexOf('.'), f.name.length);
                                    }
                                }
                            })

                        };


                    })(file);

                    reader.readAsDataURL(file);
                }; // end for
            });


            // to do recording of video https://ourcodeworld.com/articles/read/671/how-to-record-a-video-with-audio-in-the-browser-with-javascript-webrtc

            // maybe later ? https://ourcodeworld.com/articles/read/518/how-to-create-a-360-video-player-with-javascript-using-clappr

            // https://ourcodeworld.com/articles/read/127/how-to-implement-a-pull-to-update-effect-android-refresh-style-with-javascript

            // https://ourcodeworld.com/articles/read/460/how-to-create-a-live-barcode-scanner-using-the-webcam-in-javascript

            // https://ourcodeworld.com/articles/read/457/how-to-display-images-in-the-javascript-console-of-the-browser (tell them (or rather show 'em): what you looking for ? give us a reach out !)

            // https://ourcodeworld.com/articles/read/167/how-to-prevent-modification-of-an-object-in-javascript-and-prevent-them-from-being-accesible-in-the-console

            $('[data-spy="scroll"]').on('activate.bs.scrollspy', function () {
                // do something
                // console.log('passed');
            });

        </script>
        <script>
            // https://developer.mozilla.org/en-US/docs/Web/API/Node/replaceChild
            let placeBtn = document.getElementById("place");

            function placeMe() {}placeBtn.addEventListener("click", placeMe, false);
        </script>
        <script>
            // work on this bit alot

            let findBtn = document.getElementById("findme");
            // let findBtn2 = document.getElementById("geo");

            function locate(ev) { // if it's for a location, remove sales pic from DOM and input
                $('#previewPostPics').html('');
                document.forms[2].elements[4].value = '';
                // set post type to location
                document.getElementById("ptype").value = 'location';
                // [ev.target.id == 'findme' ev.target.nodeName == 'SPAN'] [ev.target.nodeName == 'A' ev.target.id == 'geo']
                // if the screen is small, then ev.target.nodeName == 'I', the icon tag <i></i> so we use locinfo as infoElement
                let infoElement = (ev.target.nodeName == 'SPAN' ? 'locinfo' : ev.target.nodeName == 'A' ? 'accinfo' : 'locinfo'); // the variable that decides where the geolocation errors are displayed, this is getting the id of the element and passing it to the variable so we can reference the div element and display error messages

                console.log('Retriving location...', infoElement, ev.target.nodeName);
                let savePoint = {
                    "type": "Feature",
                    "properties": {},
                    "geometry": {
                        "type": "Point",
                        "coordinates": []
                    }
                };

                // empty the savePoint variable before use [i think because of previous usage] not after success anymore
                savePoint.geometry.coordinates.pop();
                savePoint.geometry.coordinates.pop();
                savePoint.properties = {};

                let geo_options = {
                    enableHighAccuracy: true,
                    maximumAge: 30000,
                    timeout: 27000
                };

                let geo_options_to = {
                    enableHighAccuracy: true,
                    maximumAge: 30000,
                    timeout: 33000
                };
                let one = 0;
                let geoPointError = function (error) { // console.error(error);
                    switch (error.code) {
                        case error.TIMEOUT:
                            // try again with a longer timeout

                            document.getElementById(infoElement).innerText = 'TIMEOUT Error. We\'re trying again...'; // add or 'never mind?' option in the sentence so corper can quit
                            if (one <= 1) {
                                one++;
                                // console.log('timeout', one, 'times');
                                navigator.geolocation.getCurrentPosition(geoPoint, geoPointError, geo_options_to);
                            }

                            break;
                        case error.PERMISSION_DENIED:
                            // it could be the user denied permission by not accpting location prompt and that the browser denied because of http and not https
                            // The user didn't accept the callout //showNudgeBanner();
                            document.getElementById(infoElement).innerText = 'Please you\'d need to allow location on your broswer. Let\'s do this again';
                            // (put loc function in showNudgeBanner() callback) ?, so when corper click ok\close for the banner, we get loc
                            // navigator.geolocation.getCurrentPosition(geoPoint, geoPointError, geo_options);
                            break;
                        case error.POSITION_UNAVAILABLE:
                            // say there's no network n try again when there is ?!!!?
                            document.getElementById(infoElement).innerText = 'You seem to be offline. Try again when you\'re online.';
                            // maybe find how we can auto get the user's location after telling them they're offline
                            // google said : [Violation] Only request geolocation information in response to a user gesture.
                            // window.addEventListener('online',  navigator.geolocation.getCurrentPosition(geoPoint, geoPointError));
                            break;
                        case 0:
                            // unknown error
                            // just try again
                            document.getElementById(infoElement).innerText = 'Something went wrong and we don\'t know what. We\'ll just try again.';
                            locate();
                            break;
                    }
                };

                let geoPoint = function (position) {
                    // Do magic with location

                    // inform the corper we got the location, and then suggests streets name for them in the input box, also if the geolocation isn't accurate enough, tell them to try again
                    document.getElementById(infoElement).innerText = 'We got it.';

                    // not removing these cause Uncaught TypeError: Converting circular structure to JSON, Thank God we don't need them to begin with
                    // delete e.sourceTarget;
                    // delete e.target;
                    // delete e.type;
                    // console.log('normal position', position);
                    // savePoint.properties.geo = position.coords;
                    // savePoint.properties.geo = JSON.parse(JSON.stringify(position.coords));

                    savePoint.properties.geo = {
                        accuracy: position.coords.accuracy,
                        latitude: position.coords.latitude,
                        longitude: position.coords.longitude,
                        timestamp: position.timestamp
                    }

                    // the position object from the geolocation doens't save to froms, so you have to clone it

                    // cordinates don't save unless you turn them to strings
                    savePoint.geometry.coordinates.push(position.coords.longitude);
                    savePoint.geometry.coordinates.push(position.coords.latitude);

                    // savePoint.geometry.coordinates[0] = position.coords.longitude.toString() ;
                    // savePoint.geometry.coordinates[1] = position.coords.latitude.toString() ;
                    // console.log('savePoint', savePoint, JSON.stringify(savePoint).length);

                    // do this only if the event came from accommodation form
                    if (infoElement == 'accinfo') {
                        document.forms[1].elements["acc_geodata"].value = JSON.stringify(savePoint);
                    }

                    // only do that image thinghy if the request came from the share location button
                    if (infoElement == 'locinfo') {
                        // console.log('weeeee');
                        // how can I know if and when the fetch api was aborted https://developers.google.com/web/updates/2017/09/abortable-fetch
                        // commented out because the next block of code is where we use it, and we aren't using the next block of code now
                        /* const controller = new AbortController();
                        const signal = controller.signal;
    
                        setTimeout(() => controller.abort(), 5000); */

                        // once we get the geo coordinates, first we get the name of the place., nominatium isn't perfect yet, will just be saving data from it to compare the accuracy we get
                        // commented out because we aren't using it for now, and it always returns an error, Failed to fetch, seems we're calling the API wrongly
                        /* fetch('https://nominatim.openstreetmap.org/reverse?format=jsonv2&lat=' + position.coords.latitude + '&lon=' + position.coords.longitude, {
                                    signal
                                })
                            .then(
                                function(response) {
                                    if (response.status !== 200) {
                                        console.log('Looks like there was a problem. Status Code: ' +
                                            response.status);
                                        return;
                                    }
    
                                    // Examine the text in the response AND WHY IS CORDINATES NOT SAVING TO savePoint variable
                                    response.json()
                                        .then(function(data) {
                                            console.log(data);
                                            savePoint.properties.nominatim = data;
                                            console.log('savePoint2', savePoint);
                                        });
                                }
                            ).catch(function(err) {
                                // console.log('Fetch Error :-S', err);
                                if (err.name === 'AbortError') {
                                    console.log('Fetch aborted');
                                } else {
                                    console.error('Uh oh, an error! Fetch Error :', err);
                                }
                            }); */
                        // save to db

                        // do the image
                        let img = new Image();
                        img.id = 'mapboximage';
                        // get map if location is accurate enough, but if it isn't then ask user where they are. | Retrieve a map at gotten longitude and latitude, with zoom 14.24, bearing 0, and pitch 60. The map will be 460 pixels wide and 460 pixels high (for mobile screen, 310px by 290px)
                        img.src = "https://api.mapbox.com/styles/v1/mapbox/streets-v10/static/pin-l(" + position.coords.longitude + "," + position.coords.latitude + ")/" + position.coords.longitude + "," + position.coords.latitude + ",14.25,0,60/310x290?access_token=pk.eyJ1IjoiY2h1a3MwMDciLCJhIjoiY2psOW1iZ2x0MXRoczNycGJwdzhpOGZhbCJ9.z03GKFAu-scE70Z1JKagOg";

                        // set the form property for the img
                        document.getElementById("mapimg").value = img.src;

                        let preview = document.createElement('div');
                        preview.setAttribute('id', 'preview');
                        preview.setAttribute('class', 'cnt mb-2');
                        // TODO, align item in middle
                        // preview.setAttribute('class', 'app');
                        document.getElementById(infoElement).innerText = '';
                        preview.appendChild(img);

                        img.onloadstart = (event) => { // console.log('map img load event', event)
                        }

                        // note: there's img.complete;

                        let anythere = document.getElementById('previewPostPics').hasChildNodes();
                        if (anythere) {
                            // replace the first element
                            // previewParent.replaceChild(preview, document.getElementById('previewPostPics'));
                            $('#previewPostPics').html('');
                            previewParent.appendChild(preview);
                        } else { // just append
                            previewParent.appendChild(preview);
                        } msg.images.push(img.src);
                        // document.forms[2].elements[2].value = img; // works ?
                        msg.type = 'location'; // add this to the forms
                        msg.geo = savePoint; // add to the forms, i think it's done already, it isn't mehnnnnn

                    }
                    // sendMsg();
                    /*
                        // to convert to dataURI // https://davidwalsh.name/convert-image-data-uri-javascript https://ourcodeworld.com/articles/read/182/the-canvas-has-been-tainted-by-cross-origin-data-and-tainted-canvases-may-not-be-exported
                        img.crossOrigin = "anonymous" ;
                        img.onload = function () {
                        let canvas = document.createElement('canvas');
                        canvas.width = this.naturalWidth; // or 'width' if you want a special/scaled size
                        canvas.height = this.naturalHeight; // or 'height' if you want a special/scaled size
    
                        canvas.getContext('2d').drawImage(this, 0, 0);
    
                        // Get raw image data
                        //callback(canvas.toDataURL('image/png').replace(/^data:image\/(png|jpg);base64,/, ''));
    
                        // ... or get as Data URI
                        canvas.toDataURL('image/png');
                        // console.log(canvas.toDataURL('image/png')); //almosts crashes the browser, for some reasons, it keeps on logging
                        img.src = canvas.toDataURL('image/png');
                        preview.appendChild(img);
                        previewParent.appendChild(preview);
                        };
    
                        https://stackoverflow.com/questions/27526281/websockets-and-apache-proxy-how-to-configure-mod-proxy-wstunnel/27534443#27534443
                    */


                };

                navigator.geolocation.getCurrentPosition(geoPoint, geoPointError, geo_options);
                document.getElementById(infoElement).innerText = 'Retrieving location...';
            };

            findBtn.addEventListener("click", locate, false);
            // findBtn2.addEventListener("click", locate, false);

        </script>

        <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.24.0/moment.min.js" integrity="sha256-4iQZ6BVL4qNKlQ27TExEhBN1HFPvAvAMbFavKKosSWQ=" crossorigin="anonymous"></script>
        <script src="/assets/js/searchallstates.js"></script>

        <script src="/assets/js/serviceWorkerNotification.js"></script>

        <script>
        // http://www.runningcoder.org/jquerytypeahead/demo/ User v1
        // they should only be able to search their state
        // use grouping from http://www.runningcoder.org/jquerytypeahead/demo/ Advanced demo Beer v1
        </script>

    <script>
        // https://developer.mozilla.org/en-US/docs/Web/API/Network_Information_API
        let connection = navigator.connection || navigator.mozConnection || navigator.webkitConnection;
        let type = connection.effectiveType;

        function updateConnectionStatus() { // console.log("Connection type changed from " + type + " to " + connection.type);
        }connection.addEventListener('change', updateConnectionStatus);
    </script>

    <script>
        // also check if we have permission ...to set the default state of the toggle
        document.getElementById('customSwitch1').addEventListener('change', (event) => {
            if (event.target.checked) {
                console.log('trying');
                testMethod()
                askPermission();
            }
        });
    </script>

    <!--on PoP day or the corper's birthday, pick one of these demos from https://tympanus.net/codrops/2019/01/08/animated-mesh-lines/ and display or use as the background.-->
</body></html>
