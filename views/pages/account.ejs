<!DOCTYPE html>
<html>

<head lang="en">
    <meta http-equiv="content-type" content="text/html; charset=UTF-8">
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="google" content="notranslate">
    <meta name="description" content="Get connected with other corpers.">
    <meta name="keywords" content="Corpers. Information. PPAs. Accommodation. Routes. Directions. Landmarks.">
    <meta name="author" content="corpers">

    <title>
        <%= statecode %> Online
    </title>
    <link rel="icon" type="image/png" href="assets/images/logo32x32.png" />

    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-MCw98/SFnGE8fJT3GXwEOngsV7Zt27NXFoaoApmYm81iuXoPkFOJwJ8ERdknLPMO" crossorigin="anonymous">

    <!-- <script src="/jquery-3.3.1.min.js"></script>
    <script src="/bootstrap.min.js"></script>
    <link rel="stylesheet" href="/bootstrap.css">

    <script src="/typeahead.bundle.js"></script> -->

    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js" integrity="sha256-FgpCb/KJQlLNfOu91ta32o/NMZxltwRo8QtmkMRdAu8=" crossorigin="anonymous"></script>
    <!-- <script src="https://code.jquery.com/jquery-3.3.1.min.js" integrity="sha256-FgpCb/KJQlLNfOu91ta32o/NMZxltwRo8QtmkMRdAu8="
    crossorigin="anonymous"></script> -->

    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/js/bootstrap.bundle.min.js" integrity="sha384-pjaaA8dDz/5BgdFUPX6M/9SUZv4d12SUPF0axWc+VRZkx5xU3daN+lYb49+Ax+Tl" crossorigin="anonymous">
    </script>


    <!-- <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/js/bootstrap.min.js" integrity="sha384-ChfqqxuZUCnJSK3+MXmPNIyE6ZbWh2IMqE241rYiqJxyMiZ6OW/JmZQ5stwEULTy"
    crossorigin="anonymous"></script> -->

    <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.8.2/css/all.css" integrity="sha384-oS3vJWv+0UjzBfQzYUhtDYW+Pj2yciDJxpsK1OYPAYjqT085Qq/1cq5FLXAZQ7Ay" crossorigin="anonymous">
    <!-- 
    <link href="https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css" rel="stylesheet"
      integrity="sha384-wvfXpqpZZVQGK6TAh5PVlGOfQNHSoD2xbE+QkPxCAFlNEevoEH3Sl0sibVcOQVnN" crossorigin="anonymous"> -->

    <!-- <script src="/font-awesome.min.css"></script> -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/holder/2.9.4/holder.js" integrity="sha256-crfkMD0BL2TtiwpbIlXF/SVmGSvOtgbMM8GBkibVKyc=" crossorigin="anonymous"></script>


    <!-- jQuery's typeahead -->

    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-typeahead/2.10.6/jquery.typeahead.min.js" integrity="sha256-W+Cxk9exgjON2p73M4RcoKvCpQUZ+IjXhEzZk6rlg9M=" crossorigin="anonymous"></script>


    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jquery-typeahead/2.10.6/jquery.typeahead.min.css" integrity="sha256-CU0/rbxVB3Eixd3bbIuJxHJLDnXriJS9cwp/BfcgpLw=" crossorigin="anonymous" />


    <!--- twitter's typeahead --->
    <!-- <script src="/typeahead.bundle.js"></script> -->

    <!--forThatInput-->
    <link rel="stylesheet" href="/assets/css/custom-file-input.css">
    <!--//forThatInput-->

    <style type="text/css">
        /* 
    .typeahead {
      background-color: #FFFFFF;
    }
    .tt-query {
      box-shadow: 0 1px 1px rgba(0, 0, 0, 0.075) inset;
    }
    .tt-hint {
      color: #999999;
    }
    .tt-menu {
      background-color: #FFFFFF;
      border: 1px solid rgba(0, 0, 0, 0.2);
      border-radius: 8px;
      box-shadow: 0 5px 10px rgba(0, 0, 0, 0.2);
      margin-top: 12px;
    }
    .tt-suggestion:hover {
      cursor: pointer;
      background-color: #0097CF;
      color: #FFFFFF;
    }
    .tt-suggestion p {
      margin: 0;
    } */

        /* remove this and the onNavigation after to remove the scroll and up and down arrow navigation feature */
        .typeahead__list {
            max-height: 300px;
            overflow-y: auto;
            overflow-x: hidden;
        }
    </style>
    <script crossorigin="anonymous" src="/socket.io/socket.io.js"></script>
    <style>
        #loader {
            border: 5px solid #f3f3f3;
            -webkit-animation: spin 1s linear infinite;
            animation: spin 1s linear infinite;
            border-top: 5px solid #555;
            border-radius: 50%;
            width: 40px;
            height: 40px;
            margin: auto;
            margin-top: 50px;
        }

        .card-columns {
            overflow-x: scroll;
            height: 40vh;
        }

        @media (max-width: 576px) {
            .card-columns {
                -webkit-column-count: 2;
                -moz-column-count: 2;
                column-count: 2;
                -webkit-column-gap: 0.5rem;
                -moz-column-gap: 0.5rem;
                column-gap: 0.5rem;
                orphans: 1;
                widows: 1;
            }

            .card-columns .card {
                display: inline-block;
                width: 100%;
            }
        }

        @-webkit-keyframes spin {
            0% {
                -webkit-transform: rotate(0deg);
                -ms-transform: rotate(0deg);
                transform: rotate(0deg);
            }

            100% {
                -webkit-transform: rotate(360deg);
                -ms-transform: rotate(360deg);
                transform: rotate(360deg);
            }
        }

        @keyframes spin {
            0% {
                -webkit-transform: rotate(0deg);
                -ms-transform: rotate(0deg);
                transform: rotate(0deg);
            }

            100% {
                -webkit-transform: rotate(360deg);
                -ms-transform: rotate(360deg);
                transform: rotate(360deg);
            }
        }

        .add {
            /*to make the edges of buttons to be rounded*/
            border-radius: 1rem;
        }

        small {
            font-size: 70%;
        }

        .fileUpload {
            position: relative;
            overflow: hidden;
            margin: 5px;
        }

        .fileUpload input.upload {
            position: absolute;
            top: 0;
            right: 0;
            margin: 0;
            padding: 0;
            font-size: 20px;
            cursor: pointer;
            opacity: 0;
            filter: alpha(opacity=0);
        }

        /**
        using design from https://gedd.ski/post/tile-layouts/
        make the pictures obey fibonacci series
        */
        .app {
            display: grid;
            grid-gap: 5px;
            grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));

        }

        @media (max-width: 576px) {
            #hereNow {}
        }


        @media (max-width: 576px) {
            .app {
                grid-template-columns: repeat(auto-fit, minmax(80px, 1fr));
            }
        }

        @media (max-width: 768px) {
            .app {
                grid-template-columns: repeat(auto-fit, minmax(100px, 1fr));
            }
        }

        ul .list-group-item:hover {
            background: rgb(236, 236, 236);
        }
    </style>
    <style>
        /* fab https://codepen.io/androidcss/pen/yOopGp s*/
        .float {
            position: fixed;
            width: 60px;
            height: 60px;
            bottom: 40px;
            right: 20px;
            background-color: rgb(44, 167, 27);
            color: #FFF;
            border-radius: 50px;
            text-align: center;
            box-shadow: 2px 2px 3px #999;
            z-index: 3;
        }

        .my-float {
            margin-top: 22px;
        }

        .edit-solid.icon {
            color: #000;
            position: absolute;
            margin-left: -9px;
            margin-top: 26px;
            width: 24px;
            height: 4px;
            border-radius: 1px;
            border: solid 1px currentColor;
            background-color: currentColor;
            -webkit-transform: rotate(-45deg);
            transform: rotate(-45deg);
        }

        .edit-solid.icon:before {
            content: '';
            position: absolute;
            left: -12px;
            top: -1px;
            width: 0px;
            height: 0px;
            border-left: solid 5px transparent;
            border-right: solid 5px currentColor;
            border-top: solid 2px transparent;
            border-bottom: solid 2px transparent;
        }


        @-ms-viewport {
            width: device-width;
        }

        /*Extra small devices (portrait phones, less than 576px)
         No media query for `xs` since this is the default in Bootstrap 
         
         https://getbootstrap.com/2.3.2/scaffolding.html
         */


        /* This CSS will be applied only to phones and other small devices. */
        @media only screen and (max-width: 480px) {
            #TXT {
                height: 85px;
            }
        }


        /* Small devices (landscape phones, 576px and up) */
        @media (min-width: 576px) {}

        @media (min-width: 768px) {}

        @media (min-width: 992px) {}

        @media (min-width: 1200px) {}


        /* Large desktop */
        @media (min-width: 1200px) {}

        /* Portrait tablet to landscape and desktop */
        @media (min-width: 768px) and (max-width: 979px) {}

        /* Landscape phone to portrait tablet */
        @media (max-width: 767px) {}

        /* Landscape phones and down */
        @media (max-width: 480px) {}
    </style>

    <style>
        /* Top right text */
        .image-wrapper .top-right {
            position: relative;
            top: -95px;
            right: -3px;
        }

        /* testing the post modal with picture arrangment */
        .image-wrapper {
            width: auto;
            /*was 100px*/
            height: 100px;
            border: 1px solid #ddd;
        }

        .image-wrapper img {
            object-fit: cover;
            min-width: 100%;
            min-height: 100%;
            width: auto;
            height: auto;
            max-width: 100%;
            max-height: 100%;
        }
    </style>

    <style>
        /*center anything within a div (or other element maybe)*/
        .cnt {
            display: flex;
            justify-content: center;
            align-items: center;
        }
    </style>

    <style>
        /*styling the scroll bar for the text area for posting, https://css-tricks.com/custom-scrollbars-in-webkit/ and http://www.tagindex.net/css/form/scrollbar_color.html */
        /* width */
        textarea.shadow-sm::-webkit-scrollbar {
            width: 5px;
        }

        /* Track */
        textarea.shadow-sm::-webkit-scrollbar-track {
            background: #f1f1f1;
        }

        /* Handle */
        textarea.shadow-sm::-webkit-scrollbar-thumb {
            background: #888;
            -webkit-border-radius: 10px;
            border-radius: 10px;
        }

        /* Handle on hover */
        textarea.shadow-sm::-webkit-scrollbar-thumb:hover {
            background: #555;
        }

        /* Handle scroll bar edge/corner */
        textarea.shadow-sm::-webkit-scrollbar-corner {
            background: rgb(255, 255, 255);
        }
    </style>
    <style>
        p.maintext {
            /* didn't work */
            /* word-wrap: break-word; */
            /* or overflow-wrap */

            -ms-word-break: break-all;
            word-break: break-all;

            /* Non standard for WebKit */
            word-break: break-word;

            -webkit-hyphens: auto;
            -moz-hyphens: auto;
            -ms-hyphens: auto;
            hyphens: auto;
        }
    </style>
</head>


<body class="">
    <nav class="navbar navbar-expand-sm navbar-light bg-light active">
        <a class="navbar-brand" href="/">Corpers Online</a>
        <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarsExample03" aria-controls="navbarsExample03" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>

        <div class="collapse navbar-collapse" id="navbarsExample03">

            <!-- Nav tabs for the accommodation, PPAs, SPAs, SALES -->
            <ul class="nav navbar-nav mr-auto" id="theTabs" role="tablist">
                <li class="nav-item">
                    <a class="nav-link" href="/map" aria-selected="true">Maps</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="/chat?s=<%= statecode2 %>" aria-selected="true">
                        Messages
                        <span id="totalunreadmsg" class="float-right badge badge-secondary badge-pill"><%= (total_num_unread_msg > 0 ? total_num_unread_msg : '') %></span>
                    </a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="/logout" aria-selected="true">Logout</a>
                </li>
                <!-- <li class="nav-item">
                      <a class="nav-link active" id="sales-tab" data-toggle="tab" href="#sales" role="tab" aria-controls="sales" aria-selected="true">Sales</a>
                    </li>
                    <li class="nav-item">
                      <a class="nav-link" id="accommodation-tab" data-toggle="tab" href="#accommodation" role="tab" aria-controls="accommodation" aria-selected="false">accommodations</a>
                    </li>
                    <li class="nav-item">
                      <a class="nav-link" id="ppa-tab" data-toggle="tab" href="#ppa" role="tab" aria-controls="ppa" aria-selected="false">PPAs</a>
                    </li>
                    <li class="nav-item">
                      <a class="nav-link" id="spa-tab" data-toggle="tab" href="#spa" role="tab" aria-controls="spa" aria-selected="false">SPAs</a>
                    </li> -->
            </ul>
            <!-- <form class="form-inline my-2 pr-2">
              <div id="bloodhound">
                  <input class="form-control js-typeahead-search typeahead" type="text" placeholder="Search accommodations, places, PPAs, SPAs">
              </div>
            </form> -->

            <form id="form-search" action="/newsearch" name="form-search" class="mr-md-3">
                <div class="typeahead__container">
                    <div class="typeahead__field">
                        <div class="typeahead__query">
                            <input class="js-typeahead-search" name="search[query]" type="search" placeholder="Search PPAs, apartments etc." autocomplete="off" inputmode="search">
                        </div>
                        <div class="typeahead__button">
                            <button type="submit">
                                <i class="typeahead__search-icon"></i>
                            </button>
                        </div>
                    </div>
                </div>
            </form>


            <!-- Button trigger modal for posting-->
            <!-- hide on screens smaller than md -->
            <button id="bfp" class="btn btn-primary   d-none d-md-block" data-toggle="modal" data-target="#postModalSale">Post</button>
        </div>
    </nav>


    <!-- accommodation modal -->
    <div id="accommodationModal" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="accommodationModal" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="">Put up an accommodation</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>

                <div class="">
                    <form id="accommodationform" enctype="multipart/form-data">
                        <div class="modal-body">

                            <!-- https://getbootstrap.com/docs/4.1/components/carousel/ -->
                            <div id="accommodationFormCarousel" class="carousel slide" data-keyboard="true" data-interval="false">
                                <div class="carousel-inner">
                                    <div class="carousel-item active" style="height: 400px;">
                                        <div class="progress mb-2" style="height: 1px;">
                                            <div class="progress-bar" role="progressbar" style="width: 20%;" aria-valuenow="20" aria-valuemin="0" aria-valuemax="100"></div>
                                        </div>
                                        <div class="mx-1">

                                            <fieldset>
                                                <h2>Accommodation size</h2>
                                                <!-- // form for accommodation -->

                                                <div class="form-group">
                                                    <label for="accommodationtype">Accommodation type</label>
                                                    <!-- <label class="sr-only" for="accommodationtype">Accommodation type</label> -->
                                                    <select class="custom-select pointer" name="accommodationtype" id="accommodationtype" required>
                                                        <option value="" selected>Choose...</option>
                                                        <option value="Self contain">Self contain</option>
                                                        <option value="Flat">Flat</option>
                                                        <option value="1 bedroom flat">1 bedroom flat</option>
                                                    </select>
                                                    <small id="" class="form-text text-muted">Choose the category that best describes it.</small>


                                                    <!-- //test -->
                                                    <div class="custom-control custom-checkbox">
                                                        <input name="rooms" type="checkbox" class="custom-control-input" id="rooms1" value="Sitting room">
                                                        <label class="custom-control-label" for="rooms1">Sitting room ?</label>
                                                    </div>
                                                    <div class="custom-control custom-checkbox">
                                                        <input name="rooms" type="checkbox" class="custom-control-input" id="rooms2" value="kitchen">
                                                        <label class="custom-control-label" for="rooms2">Kitchen ?</label>
                                                        <!-- Maybe later seperate the two, with radio buttons, kitchen in the apartment or a general one tenant shares -->
                                                    </div>
                                                    <div class="custom-control custom-checkbox">
                                                        <input name="rooms" type="checkbox" class="custom-control-input" id="rooms3" value="Bedroom">
                                                        <label class="custom-control-label" for="rooms3">Bedroom ?</label>
                                                        <!-- if it comes with a bedroom, then how many [do later] -->
                                                    </div>
                                                    <!-- input tag check box id attribute connects with the for attribute of label tag -->
                                                    <div class="custom-control custom-checkbox">
                                                        <input name="rooms" type="checkbox" class="custom-control-input" id="rooms4" value="Toilet">
                                                        <label class="custom-control-label" for="rooms4">Toilet ?</label>
                                                    </div>
                                                    <div class="custom-control custom-checkbox">
                                                        <input name="rooms" type="checkbox" class="custom-control-input" id="rooms5" value="Bathroom">
                                                        <label class="custom-control-label" for="rooms5">Bathroom ?</label>
                                                    </div>
                                                    <small id="" class="form-text text-muted mb-4">What rooms does the accommodation contain?</small>
                                                    <!-- // // test -->
                                                    <!-- the check box should change based on the accommodation type choosen -->

                                                </div>
                                            </fieldset>
                                            <!-- // -->
                                        </div>
                                    </div>
                                    <div class="carousel-item" style="height: 400px;">
                                        <div class="progress mb-2" style="height: 1px;">
                                            <div class="progress-bar" role="progressbar" style="width: 40%;" aria-valuenow="40" aria-valuemin="0" aria-valuemax="100"></div>
                                        </div>

                                        <div class="mx-1">
                                            <fieldset>
                                                <h2>Metrics about the rent</h2>
                                                <!-- //form for accommodation -->
                                                <div class="form-group">

                                                    <!--//testing-->
                                                    <div class="d-block my-3">
                                                        <div class="custom-control custom-radio">
                                                            <input id="monthly" name="rentrange" type="radio" class="custom-control-input" value="monthly" checked required>
                                                            <label class="custom-control-label" for="monthly">Monthly</label>
                                                        </div>
                                                        <div class="custom-control custom-radio">
                                                            <input id="quarterly" name="rentrange" type="radio" class="custom-control-input" value="quarterly" required>
                                                            <label class="custom-control-label" for="quarterly">Quarterly</label>
                                                        </div>
                                                        <div class="custom-control custom-radio">
                                                            <input id="yearly" name="rentrange" type="radio" class="custom-control-input" value="yearly" required>
                                                            <label class="custom-control-label" for="yearly">Yearly</label>
                                                        </div>
                                                    </div>
                                                    <!-- / // / testing -->

                                                    <!-- this should be disabled until the person chooses either per month or quarter or year then we say price per whatever the person chose -->

                                                    <label for="price">Price per month/quater/year</label>

                                                    <div class="input-group">
                                                        <div class="input-group-prepend">
                                                            <span class="input-group-text">&#8358;</span>
                                                        </div>
                                                        <input name="price" type="number" inputmode="numeric" class="form-control" id="price" placeholder="Recurring price" required>
                                                        <div class="invalid-feedback" style="width: 100%;">
                                                            The recurring price for the rent is required.
                                                        </div>
                                                    </div>

                                                </div>
                                            </fieldset>


                                            <!-- // -->
                                        </div>


                                    </div>
                                    <div class="carousel-item" style="height: 400px;">
                                        <div class="progress mb-2" style="height: 1px;">
                                            <div class="progress-bar" role="progressbar" style="width: 60%;" aria-valuenow="60" aria-valuemin="0" aria-valuemax="100"></div>
                                        </div>

                                        <div class="mx-1">
                                            <fieldset>
                                                <h2>Precise location</h2>
                                                <!-- <small>.</small> -->
                                                <!-- //  -->
                                                <div class="form-group">
                                                    <label for="streetname">Street name</label>
                                                    <input type="text" name="streetname" class="form-control" id="streetname" placeholder="No. 17B, Room 5.">


                                                    <div class=" d-none" style="display: none">
                                                        <label for="ppa_geodata">Geo data <span class="text-muted">(Optional, but kinda important)</span></label>
                                                        <input type="text" name="acc_geodata" class="form-control" id="acc_geodata" placeholder="What part of town is it?">
                                                        <small class="text-muted">We are trying to get an accurate as possible data, so we might ask you to try again if what we got won't be of help to other corpers.</small>
                                                    </div>

                                                    <div class="">
                                                        <label for="address">Address <small class="form-text text-muted">(If you're there right now click 'Geo' to locate in maps)</small> </label>
                                                        <div class="input-group">
                                                            <input type="text" name="address" class="form-control" id="address" placeholder="Adeleke Street">
                                                            <div class="input-group-append">
                                                                <a id="geo" class="btn btn-secondary">Geo</a>
                                                            </div>
                                                        </div>

                                                        <small id="accinfo"></small>

                                                    </div>
                                                    <div class="">
                                                        <label for="directions">Directions</label>
                                                        <textarea class="form-control" name="directions" id="directions" placeholder="Give directions to the accommodation from a popular nearby junction or hard-to-miss building"></textarea>
                                                    </div>
                                                </div>
                                            </fieldset>
                                            <!-- 
      maybe a little map area to pin the location of the place if they're currently there

      we can even try to show a route in the map based on what address is and information in the directions textarea, we can even auto route.
  -->

                                            <!-- //end form for accommodation -->
                                        </div>
                                    </div>
                                    <div class="carousel-item" style="height: 400px;">
                                        <div class="progress mb-2" style="height: 1px;">
                                            <div class="progress-bar" role="progressbar" style="width: 80%;" aria-valuenow="80" aria-valuemin="0" aria-valuemax="100"></div>
                                        </div>

                                        <div class="mx-1">
                                            <fieldset>
                                                <h2>Let's see it</h2>
                                                <!-- //form for accommodation -->

                                                <!-- 
    <div class="form-group custom-file">
      <input type="file" class="custom-file-input" id="customFileLang" lang="es">
      <label class="custom-file-label" for="customFileLang">Images and/or Videos</label>
    </div> 
  -->

                                                <div class="form-group">
                                                    <!-- thatInput -->
                                                    <div class="box">
                                                        <input type="file" name="roomsmedia" id="roomsmedia" accept="image/*,video/*" class="inputfile inputfile-2" data-multiple-caption="{count} files selected" multiple="multiple" />
                                                        <label for="roomsmedia"><span>Upload media&hellip;</span></label>
                                                    </div>

                                                    <!-- this script must come after the input -->
                                                    <script src="/assets/js/custom-file-input.js"></script>
                                                    <!-- //thatInput -->
                                                </div>
                                            </fieldset>

                                            <!-- 
    the images and/or videos they'll put up will be based on the checked box under accommodation type
    so there would be as many input tag for the places in the accommodation
    ( doing this might be stressful, we show a bit of their gallary as a nudge when we do our app)
    or they can just do a short 15 seconds video of everywhere
  -->
                                            <div class="card-columns" id="hereNow">
                                            </div>
                                        </div>
                                    </div>
                                    <div class="carousel-item" style="height: 400px;">
                                        <div class="progress mb-2" style="height: 1px;">
                                            <div class="progress-bar" role="progressbar" style="width: 100%;" aria-valuenow="100" aria-valuemin="0" aria-valuemax="100"></div>
                                        </div>

                                        <div class="mx-1">
                                            <fieldset>
                                                <h2>Current Status</h2>
                                                <div class="form-group">
                                                    <small id="" class="form-text text-muted">Are you leasing out your active rent tenure or is this a
                                                        new rent?</small>
                                                    <!-- //form for accommodation -->

                                                    <!-- 
          we already have price per month or quater or year, we just need to know when it'll expire
          &
          we'd compute how much the corper is expecting from whoever will take over from the rent.
      -->
                                                    <div class="d-block my-3">
                                                        <div class="custom-control custom-radio">
                                                            <input id="newrent" name="tenure" type="radio" class="custom-control-input" value="Lease" required>
                                                            <label class="custom-control-label" for="newrent">New rent (No present occupant)</label>
                                                        </div>
                                                        <div class="custom-control custom-radio">
                                                            <input id="oldrent" name="tenure" type="radio" class="custom-control-input" value="Sublease" checked required>
                                                            <label class="custom-control-label" for="oldrent">Leasing out an active rent</label>
                                                        </div>
                                                    </div>

                                                    <div id="expirediv" class="mb-4">
                                                        <label for="bday">When does your rent expires:</label>
                                                        <input type="date" id="expire" min="" max="" name="expiredate" required>
                                                    </div>
                                                </div>
                                            </fieldset>

                                            <script>
                                                let minmax = new Date();
                                                document.getElementById('expire')
                                                    .min = minmax.toISOString()
                                                    .substr(0,
                                                        10); // Minimum date is today!
                                                // Max date is two years from now.
                                                document.getElementById('expire')
                                                    .max = new Date(minmax.getFullYear() + 2, minmax.getMonth())
                                                    .toISOString()
                                                    .substr(0, 10); // The argument monthIndex is 0-based. This means that January = 0 and December = 11.

                                                let radios = document.forms["accommodationform"].elements['tenure'];
                                                for (let i = 0, max = radios.length; i < max; i++) {
                                                    radios[i].onclick = function() {
                                                        // using if-else because we have just two options, so if it isn't one, it's the other

                                                        // if expire date is showing, it means the rent isn't new, then it is required.

                                                        if (this.id == 'oldrent') {
                                                            console.log('an old rent [sublease]');
                                                            document.getElementById('expirediv')
                                                                .style.display = 'block';
                                                            document.forms["accommodationform"].elements["expiredate"].required = true;
                                                        } else {
                                                            console.log('new rent [lease]');
                                                            document.getElementById('expirediv')
                                                                .style.display = 'none';
                                                            document.forms["accommodationform"].elements["expiredate"].required = false;
                                                        }
                                                    }
                                                }
                                            </script>

                                            <!-- //end form for accommodation -->
                                        </div>
                                    </div>
                                </div>

                                <!-- 
                        <a class="carousel-control-prev" href="#accommodationFormCarousel" role="button" data-slide="prev">
                          <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                          <span class="sr-only">Previous</span>
                        </a>
                        <a class="carousel-control-next" href="#accommodationFormCarousel" role="button" data-slide="next">
                          <span class="carousel-control-next-icon" aria-hidden="true"></span>
                          <span class="sr-only">Next</span>
                        </a> 
                      -->
                            </div>

                        </div>

                        <div class="modal-footer">
                            <!--             <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                  <button type="button" class="btn btn-primary">Save changes</button> -->

                            <div class="btn-group" role="group" aria-label="Carousel navigation">
                                <button class="btn btn-outline-primary" id="ap" href="#accommodationFormCarousel" disabled="true" data-slide="prev">
                                    Previous
                                </button>
                                <button class="btn btn-primary" id="an" href="#accommodationFormCarousel" data-slide="next">
                                    Next
                                </button>
                            </div>
                        </div>
                    </form>
                </div>


            </div>
        </div>
    </div>

    <script>
        // for the accommodation form carousel
        $('#accommodationFormCarousel')
            .on('slide.bs.carousel', function(e) {
                // do something…
                console.log('e', e);
                if (e.from == 0 && e.to == 1) {
                    // document.getElementById('ap').setAttribute('disabled', 'false');
                    document.getElementById('ap')
                        .disabled = false;
                } else if (e.from == 1 && e.to == 0) {
                    document.getElementById('ap')
                        .disabled = true;
                } else if (e.from == 3 && e.to == 4) {
                    // change the next button to submit && make sure the form is full before they can submit
                    // make the corper see a preview of how their post would look like too, to make them make changes as much as neccessary
                    console.info('change');
                    $("#an")
                        .replaceWith("<input type='submit' class='btn btn-primary' id='accsub' value='Put up for rent'>");
                } else if (e.from == 4 && e.to == 3) {
                    $("#accsub")
                        .replaceWith('<button class="btn btn-primary" id="an" href="#accommodationFormCarousel" data-slide="next">Next</button>');
                }
            });

        $('#accommodationFormCarousel')
            .on('slid.bs.carousel', function(e) {
                // do something…
                console.log('2nd e', e);

            });

        $('#accommodationModal')
            .on('shown.bs.modal', function(e) {
                console.info('acc modal shown');
                // document.getElementById('ap').disabled = true;

                // once a user submits accommodation, reset everything and prevent user from posting twice
                // also reset if all fields are empty when corper closes the carousel
                // if the form is not completely filled, disable the submit/put up for rent button
            });

        $('#accommodationModal')
            .on('hidden.bs.modal', function(e) {
                console.info('acc modal hidden');
                // document.getElementById('ap').disabled = true;

            });
    </script>


    <!-- the Modal for posting (sale)-->
    <div class="modal fade" id="postModalSale" tabindex="-1" role="dialog" aria-labelledby="postModalLabelSale" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <form id="postform" name="postform">
                    <!-- a very good form -->
                    <input type="text" name="mapimage" id="mapimg" hidden>
                    <input type="text" name="type" id="ptype" value="sale" hidden>

                    <div class="modal-header">
                        <h5 class="modal-title" id="">Create post</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">

                        <textarea autofocus required name="text" type="text" class="form-control mb-3 shadow-sm" placeholder="Upload items for sale. Share the location of your PPA (give directions from a popular landmark or junction!). Get creative." id="TXT"></textarea>
                        <!--make sure there's no space between opening and closing textarea tag-->

                        <small id="locinfo"></small>

                        <div id="previewParent">
                            <div id="previewPostPics" class="app"></div>
                        </div>

                        <div class="d-flex align-items-center">
                            <div class="mr-auto">
                                <div class="fileUpload btn btn-outline-dark">
                                    <span class="d-none d-md-block d-lg-none   d-lg-block d-xl-none   d-xl-block">
                                        Image
                                    </span>
                                    <i class="fas fa-images   d-block d-sm-none  d-none d-sm-block d-md-none"></i>
                                    <input type="file" accept="image/*" name="see" class="upload" multiple id="IMG">
                                </div>
                                <!--<div class="fileUpload btn btn-light">
                                                  <span>Vid</span>
                                                  <input type="file" accept="video/*" class="upload" id="VID">
                                                </div>-->
                                <!--the input for giving routes should offer places suggestions as user types.
                                                use appropriate ui. form place to place with side notes and advice.-->
                                <!--instead of putting like, nooo!!!!! put affrimations, other corpers
                                                should affirm other prople posts !!! increases trust. possible give alternative,
                                                and even say when something is a lie or fasle or not entirely true.-->
                                <!--<button type="button" class="btn btn-light" id="trackme">Share Route</button>-->


                                <div class="btn-group" role="group" aria-label="Sharing places and locations">
                                    <div class="btn btn-outline-dark" id="findme">
                                        <!-- Visible only on md, lg, xl | should only be visible on lg, and xl-->
                                        <span class="d-none d-md-block d-lg-none   d-lg-block d-xl-none   d-xl-block">Share current location</span>

                                        <!-- Visible only on xs, sm | should be visible on md too-->
                                        <i class="fas fa-location-arrow  d-block d-sm-none  d-none d-sm-block d-md-none"></i>
                                    </div>

                                    <!-- <button class="btn btn-outline-dark" id="findme">Share location</button> -->

                                    <div class="btn btn-outline-dark" id="place">
                                        <span class="d-none d-md-block d-lg-none   d-lg-block d-xl-none   d-xl-block">or accommodation</span>
                                        <i class="fas fa-home   d-block d-sm-none  d-none d-sm-block d-md-none"></i>
                                    </div>

                                    <!-- <button class="btn btn-outline-dark" id="place">or accommodation</button> -->
                                </div>
                                <!-- way less than 245418.50 -->
                                <!--
                              like malls/shops apartments markets parks/bustops or popular pickup and dropoff points. 
                            -->
                            </div>
                        </div>

                    </div>
                    <div class="modal-footer">
                        <input type="submit" class="btn btn-primary" id="postsubmit" value="Post it" disabled>
                    </div>

                </form>
            </div>
        </div>
    </div>

    <script>
        /**
         * 
         * TODO
         * For compulsory fields, disable the next button until users fills in valid texts for that section https://getbootstrap.com/docs/4.1/components/carousel/
         */
        document.getElementById('place').addEventListener('click', function(event) {
            // close post modal and open accommodation modal
            $('#postModalSale').modal('hide');

            $('#accommodationModal').modal('show');
        })
    </script>

    <script>
        // script for submitting posts (not accommodation).
        function sendPost() {

            // close the modal first. this makes the site look 
            $('#postModalSale').modal('hide');

            // use fetch api later on or NOT https://gomakethings.com/why-i-still-use-xhr-instead-of-the-fetch-api/
            const XHR = new XMLHttpRequest();

            // Bind the FormData object and the form element
            let FD = new FormData(form);

            // append post_time
            FD.append('post_time', Date.now()); // data type number

            // append post type

            // checks if there are preview picture and the mapboximage exists
            /* if (document.getElementById( 'previewParent' ).hasChildNodes() & $( "#mapboximage" ).length ) {
                FD.append( 'type', 'location' );
                
                // get the image loaded from mapbox here.
                FD.append( 'mapimage', document.getElementById('mapboximage').src );
                // console.log('l', );

            } else {
                FD.append( 'type', 'sale' );
            } */


            // Define what happens on successful data submission
            XHR.addEventListener("load", function(event) {
                // alert(event.target.responseText);
                console.log(event.target.responseText, event.target, event.timeStamp); // calculate the time a post was clicked, when it was submitted and when the response was given to the user

                // and reset the form
                document.forms['postform'].reset();
                // also clear the append image in the document body if it exists
                /* if ( document.getElementById('previewParent').children.length > 0 ) { // what does hasChildNodes actually do? and why does it return this error: TypeError: Argument 1 of Node.removeChild is not an object. when there is no previewParent
                    document.getElementById('previewParent').removeChild( document.getElementById( 'preview' ) );
                } */

                $('#previewPostPics').html('');

                // if there were location info, clear it
                document.getElementById('locinfo').innerHTML = '';

                document.getElementById('postsubmit').disabled = true;

                // some times there are cases where posts happen immediately after each other 
                // and there would then be more than one notifications on the user tl...
                // how do we ensure they are closed as they come ? A dedicated functions to handle notifications ????/

                if (event.target.status == 200) {
                    $("#1or0") // #tl
                        .before(
                            '<div class="alert alert-success mt-3 fade show" id="postposted" role="alert">Post created successfully.</div>'
                        );

                } else {
                    $("#1or0") // formerly #tl
                        .before(
                            '<div class="alert alert-success mt-3 fade show" id="postposted" role="alert">We didn\'t get that. Please post again.</div>'
                        );
                }
                setTimeout(function() {
                    $('div.alert.alert-success.mt-3.fade.show')
                        .alert('close'); // Closes an alert (for now all) by removing it from the DOM
                }, 2000);

            });

            // Define what happens in case of error
            XHR.addEventListener("error", function(event) {
                alert('Oops! Something went wrong.');
            });

            // Set up our request
            XHR.open('POST', '/posts'); // true makes it async request

            // XHR.setRequestHeader('Content-Type', 'multipart/form-data'); // causes error Error: Multipart: Boundary not found

            // The data sent is what the user provided in the form
            XHR.send(FD);
        }

        // Access the form element...
        let form = document.getElementById("postform");

        // ...and take over its submit event.
        form.addEventListener("submit", function(event) {
            event.preventDefault(); // the default behaviour is refreshing the page and adding search params to the url

            sendPost();
        }, false, true); // https://developer.mozilla.org/en-US/docs/Web/Events/submit
    </script>

    <script>
        // script for submitting accommodation (not posts).
        function sendAccommodation() {

            // close the accommodation modal form
            $('#accommodationModal')
                .modal('hide');

            // use fetch api later on or NOT https://gomakethings.com/why-i-still-use-xhr-instead-of-the-fetch-api/
            const XHR1 = new XMLHttpRequest();

            // Bind the FormData object and the form element
            let FD1 = new FormData(form1);

            // append post_time
            FD1.append('post_time', Date.now()); // data type number

            // Define what happens on successful data submission
            XHR1.addEventListener("load", function(event) {
                // alert(event.target.responseText);
                console.log(event.target.responseText);

                // and reset the form
                document.forms["accommodationform"].reset();

                // remove the appended room images
                $('#hereNow').html('');

                // remove the appended room images
                $('#accinfo').html('');

                // set the input button to 'Upload media...'
                document.forms[1].elements["roomsmedia"].labels[0].children[0].innerText = "Upload media...";

                // rest the carousel too
                $('#accommodationFormCarousel')
                    .carousel(0);

                // make the previous and next buttons as they were
                $("#accsub")
                    .replaceWith('<button class="btn btn-primary" id="an" href="#accommodationFormCarousel" data-slide="next">Next</button>');
                $("#ap")
                    .replaceWith('<button class="btn btn-outline-primary" id="ap" href="#accommodationFormCarousel" disabled="true" data-slide="prev">Previous</button>');

                // add successful alert 
                $("#tl")
                    .before(
                        '<div class="alert alert-success mt-3 fade show" id="accommodationposted" role="alert">Accommodation space was posted successfully.</div>'
                    );

                setTimeout(function() {
                    $('#accommodationposted')
                        .alert('close'); // Closes an alert by removing it from the DOM
                }, 2000);
            });

            // Define what happens in case of error
            XHR1.addEventListener("error", function(event) {
                alert('Oops! Something went wrong.');
            });

            // Set up our request
            XHR1.open('POST', '/accommodations', true); // true makes it async request

            // XHR1.setRequestHeader('Content-Type', 'multipart/form-data'); // this causes error [Multipart, boundary not found], it should stay commented

            // The data sent is what the user provided in the form
            XHR1.send(FD1);
        }

        // Access the form element...
        let form1 = document.getElementById("accommodationform");

        // ...and take over its submit event.
        form1.addEventListener("submit", function(event) {
            event.preventDefault(); // the default behaviour is refreshing the page and adding search params to the url

            sendAccommodation();
        }, false, true); // https://developer.mozilla.org/en-US/docs/Web/Events/submit
    </script>

    <!--make alerts appear only in relevant screens. like the alert in the middle (col-sm-9) appear only on small screens. then the one on the right, col-sm-3 appear only on large screens.-->

    <main role="main">
        <div class="pt-3 maincontent p-md-4 container">
            <div class="row pb-3">
                <!-- hide on screens smaller than md -->
                <div class="col-md-3 d-none d-md-block">
                    <!-- put the corper's information. let them see their profile (and be able to change it) -->
                    <div class="card shadow" id="profilecard">
                        <div class="card-body">
                            <h6 class="">About <small>
                                    <!-- · <a href="/profile" id="editprofile">Edit</a></small> --> · <a href="/profile" id="">Edit</a></small></h6>
                            <ul class="" id="profile">
                                <li>
                                    <span class=""></span>Serving at <a href="#!"> <%= servicestate %> </a>
                                </li>
                                <li>
                                    <span class=""></span>Batch <a href="#!"> <%= batch %> </a>
                                </li>
                                <li>
                                    <span class=""></span>PPA at <a href="<%= ( name_of_ppa ? '/newsearch?nop=' + name_of_ppa : '/profile' ) %>">
                                        <%= ( name_of_ppa ? name_of_ppa : '?' ) %> </a>
                                </li>
                                <li style="display:none;">
                                    <span class=""></span>SPA at <a href="#!">San Francisco</a>
                                </li>
                            </ul>
                        </div>
                    </div>
                    <!-- test-->
                    <!--//-->
                </div>

                <div class="col-md-6" data-spy="scroll" id="middlediv" data-offset="0">

                    <div id="loader" class='pb-3'></div>
                    <div id="1or0"></div>
                    <!--in this middle part, we'll give various toggle tabs for location of accommodation, PPAs, SPAs, SALES-->
                    <!-- Nav tabs for the accommodation, PPAs, SPAs, SALES -->
                    <!-- <ul class="nav nav-tabs nav-justified" id="myTab" role="tablist">
                                  <li class="nav-item">
                                    <a class="nav-link active" id="sales-tab" data-toggle="tab" href="#sales" role="tab" aria-controls="sales" aria-selected="true">Sales</a>
                                  </li>
                                  <li class="nav-item">
                                    <a class="nav-link" id="accommodation-tab" data-toggle="tab" href="#accommodation" role="tab" aria-controls="accommodation" aria-selected="false">accommodations</a>
                                  </li>
                                  <li class="nav-item">
                                    <a class="nav-link" id="ppa-tab" data-toggle="tab" href="#ppa" role="tab" aria-controls="ppa" aria-selected="false">PPAs</a>
                                  </li>
                                  <li class="nav-item">
                                    <a class="nav-link" id="spa-tab" data-toggle="tab" href="#spa" role="tab" aria-controls="spa" aria-selected="false">SPAs</a>
                                  </li>
                                </ul> -->
                    <!-- Tab panes for the accommodation, PPAs, SPAs, SALES-->
                    <!-- <div class="tab-content" id="myTabContent">
                      <div class="tab-pane fade show active" id="sales" role="tabpanel" aria-labelledby="sales-tab">
                        organic, assumenda labore aesthetic magna delectus mollit. Keytar helvetica VHS salvia yr,
                        vero magna velit sapiente labore stumptown. Vegan fanny pack odio cillum wes anderson 8-bit,
                        sustainable jean shorts beard ut DIY ethical culpa terry richar
                      </div>
                      <div class="tab-pane fade" id="accommodation" role="tabpanel" aria-labelledby="accommodation-tab">
                        Food truck fixie locavore, accusamus mcsweeney's marfa nulla single-origin coffee squid.
                        Exercitation +1 labore velit, blog sartorial PBR leggings next level wes anderson artisan
                        four loko farm-to-table craft beer twee. Qui photo booth
                      </div>
                      <div class="tab-pane fade" id="ppa" role="tabpanel" aria-labelledby="ppa-tab">
                        hardson biodiesel. Art party scenester stumptown, tumblr butcher vero sint
                        qui sapiente accusamus tattooed echo park.
                      </div>
                      <div class="tab-pane fade" id="spa" role="tabpanel" aria-labelledby="spa-tab">
                        To help fit your needs, this works with -based markup, as shown above,
                          or with any arbitrary “roll your own” markup. Note that if you’re using,
                            you shouldn’t add role="tablist" directly to it.
                      </div>
                    </div> -->


                    <ul class="list-group" id="tl">

                        <!--
                          <li class="list-group-item">
                            <div class="media mb-4">
                              <img class="align-self-start mr-2 rounded-circle" src="data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%2245%22%20height%3D%2245%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%2045%2045%22%20preserveAspectRatio%3D%22none%22%3E%3Cdefs%3E%3Cstyle%20type%3D%22text%2Fcss%22%3E%23holder_167df8c1bbc%20text%20%7B%20fill%3A%23AAAAAA%3Bfont-weight%3Abold%3Bfont-family%3AArial%2C%20Helvetica%2C%20Open%20Sans%2C%20sans-serif%2C%20monospace%3Bfont-size%3A10pt%20%7D%20%3C%2Fstyle%3E%3C%2Fdefs%3E%3Cg%20id%3D%22holder_167df8c1bbc%22%3E%3Crect%20width%3D%2245%22%20height%3D%2245%22%20fill%3D%22%23EEEEEE%22%3E%3C%2Frect%3E%3Cg%3E%3Ctext%20x%3D%223.96875%22%20y%3D%2226.896875%22%3E45x45%3C%2Ftext%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E" alt="user image">
                              <div class="media-body">
                                <div class="d-flex w-100 justify-content-between">
                                  <h6 class="mb-1">AB/12F/9478</h6>
                                  <small class="">2 days ago</small>
                                </div>
                                <p>f f sad a bbbbbb</p>
                                <div class="">
                                  <div class="media-content"></div>
                                </div>
                              </div>
                            </div>
                            <div class="align-items-center"></div>
                          </li>


                          <li class="list-group-item">
                              <div class="media mb-4">
                                  <img class="align-self-start mr-2 rounded-circle" data-src="holder.js/45x45?theme=thumb" alt="user image">
                                  <div class="media-body">
                                    <div class="d-flex w-100 justify-content-between">
                                        <h6 class="mb-1">List group item heading <br> <small>Umuahia, Abia State</small></h6>
                                        <small>3 days ago</small>
                                    </div>
                                    <p class="">Cras sit amet nibh libero, in gravida nulla. Nulla vel metus scelerisque ante sollicitudin. Cras purus odio, vestibulum in vulputate at, tempus viverra turpis. Fusce condimentum nunc ac nisi vulputate fringilla. Donec lacinia congue felis in faucibus.</p>
                                    <p>Donec sed odio dui. Nullam quis risus eget urna mollis ornare vel eu leo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus.</p>
                                    <div class="">
                                        <div class="media-content">
                                          <div class="app">
                                              <img data-action="zoom" src="/5.png" class="img-fluid border" alt="Responsive image">
                                              <img data-action="zoom" src="/3.png" class="img-fluid border" alt="Responsive image">
                                              <img data-action="zoom" src="/6.PNG" class="img-fluid border" alt="Responsive image">
                                          </div>
                                        </div>
                                    </div>
                                    <div id="comment">
                                      <hr>
                                        <div class="media mt-3">
                                            <a class="pr-2" href="#!">
                                              <img class="rounded-circle" data-src="holder.js/45x45?theme=thumb" alt="img">
                                            </a>
                                            <div class="media-body">
                                                <div class="d-flex w-100 justify-content-between">
                                                    <h6 class="mb-1">List group item heading</h6>
                                                    <small>3 days ago</small>
                                                </div>
                                                <p>Cras sit amet nibh libero, in gravida nulla. Nulla vel metus scelerisque ante sollicitudin. Cras purus odio, vestibulum in vulputate at, tempus viverra turpis. Fusce condimentum nunc ac nisi vulputate fringilla. Donec lacinia congue felis in faucibus.</p>
                                                <div id="media-content">
                                                  <div class="app">
                                                    <img data-action="zoom" src="/4.jpg" class="img-fluid border"  alt="Responsive image">
                                                    <img src="/3.png" class="img-fluid border"  alt="Responsive image">
                                                  </div>
                                              </div>
                                              </div>
                                          </div>
                                    </div>
                                  </div>
                                </div>
                          </li>

                      -->

                    </ul>
                </div>
                <!-- hide on screens smaller than md -->
                <div class="col-md-3 d-none d-md-block">

                    <div class="card shadow" id="statscard">
                        <div class="card-body text-center">
                            <h6 class="card-title">Quick<i>ly</i> Report<i>s</i> </h6>
                            <!-- <p class="card-text">
                                    <ul>

                                    </ul>
                                  </p>
                                  <a href="#!" class="">Go somewhere</a>
                                  <a href="#!" class="card-link">Card link</a>
                                  <a href="#!" class="card-link">Another link</a> -->
                            <div> <small id="tco"></small> </div>
                        </div>
                    </div>

                    <!--testing forms uploads-->
                    <!--// testing forms uploads-->
                    <!--strick through the message 1 corper online when user is offline-->
                    <!--
                          they should see news about current events concerning corpers happening around them

                          news like cds meetings happening now, send forth meetings happening now, due dates for PV Signing,
                          polls and results of incoming executives should be shown, congratulate
                          corper so so n so for becoming the new secretary for ____ CDS, involve
                          accounts for CDS Inspectors, so they can send messages too and verify
                          people. Help the variuo CDS in ways we can; e.g. Publicity in gathering
                          articules, reporting real-time events. (once somebody registers as being
                          in publicity and editorial CDS, they can report real time events. like
                          people in ENvironmetal CDS can take pictures of bad places around them
                          and report to responsible Govt. officials etc. || people in drug and free
                          cds can audit drugs in Pharmacies and road side sales ... people in law
                          and legal aid can find SPAs at Law Courts etc. If Law offices need corpers,
                          they should advertise on Corpers Online and easily find !!!!!!!! --
                          use this in other screnerious too (like other Organisation that need
                          corpers for SPAs work, can put their requirements etc.) )
                    -->
                </div>
            </div>
        </div>



        <!-- fab Code begins here -->
        <!-- hide on screens wider than md -->
        <div class="float d-md-none" data-toggle="modal" data-target="#postModalSale">
            <i class="edit-solid icon my-float"></i>
        </div>
    </main>


    <script>
        // check if it's empty i.e. the person is the first to register in the state
        /** tell the user they are the first to show up from their state and they should start using the platform, basically give them a tour */
        let tell = function() {
            if (!document.getElementById("1or0msg")) { // if it isn't there before
                console.log('teeeeelllllllllllll');
                // create a new div element 
                let newDiv = document.createElement("div");
                newDiv.id = '1or0msg'
                newDiv.className = 'pt-4 pb-2 display-2';
                newDiv.style.fontSize = '1.5rem';
                // and give it some content 
                let newContent = document.createTextNode("You're either the first here or no one has posted anything... yet! Either way, welcome. Now tell others what you want to sell or sublease. Post something!");
                // add the text node to the newly created div
                newDiv.appendChild(newContent);

                // add the newly created element and its content into the DOM
                document.getElementById("1or0")
                    .appendChild(newDiv);
            }
        };
        // Replace source
        // to replace that with a "missing image" graphic that you are sure exists so there is better visual feedback that something is wrong
        $('img')
            .on("error", function() {
                $(this)
                    .attr('src', '/images/missing.png');

                // you may wish to trigger some kind of Ajax action to send an email to a site admin when this occurs.
            });

        // to do ;; lazy load images

        // if someone refreshes the page, a big maybe cache the present posts [keep the variable bm array intacted] and fetch newer posts from db and change the time on the older posts!!!

        // for loader
        window.onload = function() {
            /* if (!document.getElementById( "tl" ).contains(document.getElementsByClassName('list-group-item')[0])) {
                tell();
                document.getElementById('loader').style.display = 'none' ;
                console.log('nothing in here ...')
            }   */
        }
        // we'll be doing loader alot ...for when socket.io is still fetching data... and the timeline is empty... for when user drags page down too like android app maybe




        /**
        bootstrap scripts

        DON'T DELETE NEXT COMMENTED CODE, FOR USE LATER.
        */
        /*

          $('#myTab a[href="#spa"]').on('click', function (e) {
            e.preventDefault()
            $(this).tab('show')
            console.log('spa tab active');
          })

          $('#theTabs a[href="#ppa"]').on('click', function (e) {
            e.preventDefault()
            $(this).tab('show')
            console.log('ppa tab active');
          })

          $('#theTabs a[href="#accommodation"]').on('click', function (e) {
            e.preventDefault()
            $(this).tab('show')
            console.log('ppa tab active');
          })

          $('#theTabs a[href="#sales"]').on('click', function (e) {
            e.preventDefault()
            $(this).tab('show')
            console.log('ppa tab active');
          })

          $('#theTabs a[href="#spa"]').on('click', function (e) {
            e.preventDefault()
            $(this).tab('show')
            console.log('ppa tab active');
          })

        */

        /***
         * 
         * WARNING !!!!!!!!!!!!!!!!!!!!!!!!!!!!1
         * 
         * READ SOMETHING ABOUT SCOPE WHERE IF YOU CAN MAKE VARIABLES NOT ACCESSIBLE FROM window object
         * 
         * Apply it to variable bm and bn and EVERY OTHER VARIABLE
         */


        let pathArray = window.location.pathname.split('/');
        console.log('user = ' + pathArray[2]);

        // start: bm[0], //oldest post in user's timeline
        // end: bm[bm.length - 1] //newest post in user's timeline
        // bm[] = boardcast messages currently in the user's time line
        let bm = [],
            bn = [];

        //connect to socket.io on /user but somehow it still connects with\to /

        /*
        By default, a long-polling connection is established first, then
        upgraded to "better" transports (like WebSocket {transports: ['websocket'],}). If you like to
        live dangerously, this part can be skipped:
        */
        let socket = io('/user', {
            transports: ['websocket'],
            query: {
                user: pathArray[2],
                putl: bm,
                autl: bn,
                first_post_pst: bm.length > 0 ? bm[0] : null,
                last_post_pst: bm.length > 0 ? bm[bm.length - 1] : null,
                first_post_acc: bn.length > 0 ? bn[0] : null,
                last_post_acc: bn.length > 0 ? bn[bn.length - 1] : null,
                test: 'ertrerer',
                from: window.location.pathname.substring(1, 12),
                statecode: '<%= statecode %>' // window.location.pathname.substring( 1, 12 ) // '<%= statecode %>'
            }
        });

        socket.on('totalunreadmsg', function(data) {
            console.log('got an unread message', data);
            // (data.count == 1 ? '' : 's') adds 's' to 'corpers' if there are more than one corpers online.

            let ph = document.getElementById('totalunreadmsg')
                .innerHTML;
            if (!ph == '') { // if it is not empty, i.e. there was a number there, there's been unread messages
                let c = parseInt(ph);
                document.getElementById('totalunreadmsg')
                    .innerHTML = c + 1; // increment the number of messages
            } else {
                document.getElementById('totalunreadmsg')
                    .innerHTML = 1;
            }
        });

        socket.on('connect', function() {

            console.log('connected', new Date(Date.now())
                .toLocaleString(), Date.now());

            console.log('the socket object:', socket);
            // trying sth --{first_post: bm[0], last_post: bm[bm.length - 1]}

        });
        socket.on('reconnect', (attemptNumber) => {
            console.log('connetce again')

            console.log(attemptNumber, 'reconnection, re-connected :', new Date(Date.now())
                .toLocaleString());

            $('#offlinealert').alert('close'); // Closes an alert by removing it from the DOM

            // this unstrikes the number of corpers div, // there's a story on this with $('').removeAttr('style');
            $('#tco').css('text-decoration', '');
        });

        // on reconnection, reset the transports option, as the Websocket
        // connection may have failed (caused by proxy, firewall, browser, ...)
        socket.on('reconnect_attempt', () => {
            socket.io.opts.transports = ['polling', 'websocket'];
        });

        //reason (String) either 'io server disconnect' or 'io client disconnect'
        socket.on('disconnect', (reason) => {
            //find a really good way to handle sessions - in server and client -- if user disconnects for too long and session expires, take user to login, if user closes this window, he shouldn't be able to open it unless it's thesame computer  --- just handle sessions effectively
            console.log('disconnected!', reason);

            // check if the alert is there already before adding it so there is no redundancy (so it doens't appear twice)
            if ($("#offlinealert").length) {
                // to check if element exists from https://stackoverflow.com/a/41605814 (& jQuery doc.)
                $("#tl")
                    .before('<div class="alert alert-danger mt-3" id="offlinealert" role="alert">Seems you\'re offline!</div>')
            }

            // incase their tl is empty and hasn't connected
            // remove the loader --this is a not so much an awesome logic
            document.getElementById('loader')
                .style.display = 'none';


            //apply text-decoration: line-through;
            $('#tco')
                .css('text-decoration', 'line-through');

            //track users across multiple session id because when sockets disconnects and then reconnects they are assigned a new session id without knowing the new id that sockets had, but socket.io has a way of knowing with the 'reconnect' event listner...


            //very important !!!!!!!!!!!!
            //also we need to message the user when there was an error in sending messages/ posts.
            //alert them when they are offline and handle other events they might want to perform. Like save their draft messages in a cookie.

            if (reason === 'io server disconnect') {
                // the disconnection was initiated by the server, you need to reconnect manually
                socket.connect();
            }
            // else the socket will automatically try to reconnect
        });


        socket.on('corpersCount', function(data) {
            console.log('got corpers count');
            // (data.count == 1 ? '' : 's') adds 's' to 'corpers' if there are more than one corpers online.
            document.getElementById('tco')
                .innerHTML = data.count + ' corper' + (data.count == 1 ? '' : 's') +
                ' online';
        });

        socket.emit('ferret', 'aeee', 'tobi', (data) => {
            // this funtion will run here to show the server has gotten our message.
            console.log(data); // data will be 'woot ...'
        });

        let cb = function(params) {
            console.log('the callback', params);
        };
        socket.on('callback', cb);


        /*  when we receive a boardcast message --save them (in var bm --an array somewhere up).
            so that thing where we can confirm a message has gotten to the server. */
        let bc = function(data) {
            // remove the loader --this is not a very awesom logic, but it works well
            document.getElementById('loader')
                .style.display = 'none';

            // know when they are the first user in their state or if no one has posted on their state
            if (typeof data.post === 'object') {
                console.log('wahat w egogt', data);

                if ((JSON.stringify(data.post) === '{}' || JSON.stringify(data.post) === '[]') && !document.getElementById("tl")
                    .contains(document.getElementsByClassName('list-group-item')[0])) {
                    // return true; // give them a tour guide
                    console.log('got heree e ;')
                    tell();
                } else if (!data.post && !document.getElementById("tl")
                    .contains(document.getElementsByClassName('list-group-item')[0])) {
                    // return true; // give them a tour guide
                    console.log('got heree e ;==')
                    tell();
                } else {
                    // return false; // remove the element div that tells them they are the first if the div exists

                    if (document.getElementById("1or0").hasChildNodes()) { // checking just to be extra sure

                        document.getElementById("1or0")
                            .removeChild(document.getElementById('1or0msg'));
                        // congratulate them for being the first to post
                    }
                }
            }

            // sales have post_time while accommodations have input_time [time stamp format]

            if (data.post.post_time) {
                bm.push(data.post.post_time);
            } else if (data.post.input_time) {
                bn.push(data.post.input_time);
            }
            // console.log(data.post.type == "sale", data.post.type === "sale")
            console.log('received boardcast message', data); // uncomment if we wanna see what we got

            let feeds = document.getElementById('tl');

            let newFeed = document.createElement("li");
            newFeed.setAttribute('class', 'list-group-item');

            // each post has a unique id, we'll later add state code to make it more unique
            newFeed.setAttribute('id', (data.post.post_time || Date.parse(data.post.input_time))); // later convert the input time to js timestamp

            // chaining is not good for appendChild()

            let h = document.createElement('div');
            h.setAttribute('class', '');
            let g = document.createElement('div');
            g.setAttribute('class', 'media-content');
            h.appendChild(g);


            //------------------ previously on how we handled images
            /* if (data.post.images) {

                for (let i = 0; i < data.post.images.length; i++) {
                    // let ii = 'img' + i.toString();
                    ii = document.createElement('img');
                    ii.setAttribute('class', 'img-fluid border');
                    ii.setAttribute('src', data.post.images[i]);
                    ii.setAttribute('alt', 'user\'s posted image ' + i);
                    gg.appendChild(ii);
                }

                g.appendChild(gg);

            } */
            if (data.post.type == "sale") {

                console.info('got sale', data.post.media);
                if (data.post.media && Array.isArray(data.post.media)) {
                    let gg = document.createElement('div');
                    gg.setAttribute('class', 'app');

                    let jk = data.post.media.length;
                    for (let i = 0; i < jk; i++) {
                        // let ii = 'img' + i.toString();
                        ii = document.createElement('img');
                        ii.setAttribute('class', 'img-fluid border');

                        try {
                            // if localhost
                            if (window.location.hostname == "localhost") {
                                let a = new URL(`/uc?id=${data.post.media[i]}`, "https://drive.google.com") // removed /uc?id=
                                    .toString(); // important: the trailing slash

                            } else if (window.location.hostname == "corpers.online") { // if not localhost then get media from live site
                                // getting media from live site
                                let a = new URL(`/uc?id=${data.post.media[i]}`, "https://drive.google.com")
                                    .toString(); // upload images to this url when ever users upload images
                            }
                        } catch (error) {
                            // console.error(error);

                            // expected output: TypeError: Failed to construct 'URL': Invalid URL
                            // Note - error messages will vary depending on browser

                            // then use a placeholder image
                            // initialise var a to a placeholder image
                        }


                        ii.setAttribute('src', a); // add the trailing slash for normal images that was uploaded.
                        ii.setAttribute('alt', 'user\'s posted image'); // do better
                        gg.appendChild(ii);
                    }
                    g.appendChild(gg);
                }

                /*
                  let ii = document.createElement('img');
                  ii.setAttribute('class', 'col-4');
                  ii.setAttribute('data-src','holder.js/64x64?theme=thumb');
                  ii.setAttribute('alt', 'user\'s posted image');
                */

                let e = document.createElement('div');
                e.setAttribute('class', 'd-flex w-100 justify-content-between');

                let z = document.createElement('h6');
                z.setAttribute('class', 'mb-1');
                z.innerHTML = data.post.statecode.toUpperCase() + ' <br> <small>' + data.post.location + '</small>';

                let y = document.createElement('small');
                y.setAttribute('class', '');
                y.innerText = data.post.age;
                e.appendChild(z);
                e.appendChild(y);

                let k = document.createElement("p");
                // k.classList(["maintext"]);
                k.setAttribute('class', 'maintext');
                k.innerText = data.post.text;
                let d = document.createElement('div');
                d.setAttribute('class', 'media-body');
                d.appendChild(e);
                d.appendChild(k); //the text from sender
                d.appendChild(h);

                let c = document.createElement('img');
                c.setAttribute('class', 'align-self-start mr-2 rounded-circle');
                // c.setAttribute('data-src','holder.js/64x64');

                c.setAttribute('src',
                    'data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%2245%22%20height%3D%2245%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%2045%2045%22%20preserveAspectRatio%3D%22none%22%3E%3Cdefs%3E%3Cstyle%20type%3D%22text%2Fcss%22%3E%23holder_167df8c1bbc%20text%20%7B%20fill%3A%23AAAAAA%3Bfont-weight%3Abold%3Bfont-family%3AArial%2C%20Helvetica%2C%20Open%20Sans%2C%20sans-serif%2C%20monospace%3Bfont-size%3A10pt%20%7D%20%3C%2Fstyle%3E%3C%2Fdefs%3E%3Cg%20id%3D%22holder_167df8c1bbc%22%3E%3Crect%20width%3D%2245%22%20height%3D%2245%22%20fill%3D%22%23EEEEEE%22%3E%3C%2Frect%3E%3Cg%3E%3Ctext%20x%3D%223.96875%22%20y%3D%2226.896875%22%3E' + `${data.post.statecode.slice(0, 2).toUpperCase()} ${data.post.statecode.slice(3, 5)}` + '%3C%2Ftext%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E'
                );
                // c.setAttribute('src', 'holder.js/45x45');
                c.setAttribute('alt', data.post.statecode);
                c.setAttribute('style', 'font-size: 8px;');


                let b = document.createElement('div');
                b.setAttribute('class', 'mt-2 row');
                // do not put var b inside the this next if block. it would affect newFeed.appendChild(b)
                if (window.location.pathname.substring(1) != data.post.statecode.toUpperCase()) { // if they aren't the one who made the post, show the three interact icons
                    for (let index = 0; index < 3; index++) {
                        let zx = document.createElement('a');
                        if (index == 1) {
                            zx.href = `/chat?s=<%= statecode %>&posts[type]=sale&posts[who]=${data.post.statecode}&posts[when]=${(data.post.post_time || Date.parse(data.post.input_time) )}`;
                        }
                        zx.setAttribute('class', 'col-4 text-center');

                        let cv = document.createElement('i');
                        cv.setAttribute('class', (index == 0 ? 'far fa-bookmark' : index == 1 ? 'far fa-comment-alt' : 'fas fa-ellipsis-h'));

                        zx.appendChild(cv);

                        b.appendChild(zx);
                    }
                }



                let a = document.createElement('div');
                a.setAttribute('class', 'media mb-4');
                a.appendChild(c);
                a.appendChild(d);

                newFeed.appendChild(a);
                newFeed.appendChild(b);

                //right now, we'll append every post together
                feeds.insertBefore(newFeed, feeds.children[0]);

            } else if (data.post.rentrange && data.post.rooms) {
                console.log('accommodation', data);

                // rooms is an array already!! how and when ?
                // check if it's an array, else split
                // because when a post is made, it is immediately sent to others before saving to db
                // so in that state of being sent to others, it is an array, but from db, it's a string

                let rms = (Array.isArray(data.post.rooms) ? data.post.rooms : data.post.rooms.split(','));

                // let jk = ( Array.isArray( data.post.media ) ? data.post.media : data.post.media.split( ',' ) );
                // if there are no rooms, no need to split, it causes an array to be made regardless
                let jk = (Array.isArray(data.post.media) ? data.post.media : data.post.media == '' ? data.post.media : data.post.media.split(','));

                if (jk.length > 0) {
                    // the carousel  
                    let gg = document.createElement('div');
                    gg.setAttribute('id', 'carousel' + Date.parse(data.post.input_time)); // each carousel has unique id with input time maybe new Date(data.post.input_time)
                    gg.setAttribute('class', 'carousel slide carousel-fade');
                    gg.setAttribute('data-ride', 'carousel');

                    // the indicators for the corousel
                    let ind = document.createElement('ol');
                    ind.setAttribute('class', 'carousel-indicators bg-dark');

                    // the carousel inner
                    let cinn = document.createElement('div');
                    cinn.setAttribute('class', 'carousel-inner');


                    // let jk = data.post.media.split(',');
                    for (let i = 0; i < jk.length; i++) {

                        // the actual indicators
                        let aind = document.createElement('li');
                        aind.setAttribute('data-target', '#carousel' + Date.parse(data.post.input_time)); // the # is important
                        aind.setAttribute('data-slide-to', i);

                        ind.appendChild(aind);

                        // the carousel items
                        let ci = document.createElement('div');
                        ci.setAttribute('class', 'carousel-item' + (i == 0 ? ' active' : '')); // the first carousel item must be active

                        cinn.appendChild(ci);

                        cimg = document.createElement('img');
                        cimg.setAttribute('class', 'd-block img-fluid mx-auto');
                        // cimg.setAttribute('src', (window.location.hostname == "localhost" ? new URL(`/uc?id=${jk[i]}`, "https://drive.google.com").toString() : 'https://corpers.online/') + jk[i]);
                        cimg.setAttribute('src', new URL(`/uc?id=${jk[i]}`, "https://drive.google.com").toString());
                        cimg.setAttribute('alt', `Might be a picture of a ${(rms[i] == undefined ? rms[0] : rms[i])}`); // this is not exactly correct, needs more work


                        // for each carousel item, append to it the image and explanatory/description div
                        ci.appendChild(cimg);
                        // the descriptions
                        let thed = document.createElement('div');
                        thed.setAttribute('class', 'carousel-caption d-none d-md-block');

                        let hh5 = document.createElement('h3');
                        // jk[i].includes(rms[ i ]);
                        // let tr = jk[i].slice(parseInt(jk[i]).toString().length, jk[i].lastIndexOf('.'));
                        hh5.innerText = `${(rms[i] == undefined ? rms[0] : rms[i])}`;
                        // hh5.innerText = ( rms[ i ] == undefined ? rms[ 0 ] : rms[ i ] ); // this is not exactly correct, needs more work

                        // let ppp = document.createElement( 'p' );
                        // ppp.innerText = `Maybe some metric about ${(rms[i] == undefined ? rms[0] : rms[i])}`; // this is not exactly correct, needs more work

                        // append h5 and p to description div
                        thed.appendChild(hh5);
                        // thed.appendChild( ppp );

                        // then ...
                        ci.appendChild(thed);

                    }
                    gg.appendChild(ind);
                    gg.appendChild(cinn);
                    // append the other indicators here

                    for (let index = 0; index <= 1; index++) {
                        // 2nd indicators
                        let aind2 = document.createElement('a');
                        aind2.setAttribute('class', 'carousel-control-' + (index == 0 ? 'prev' : 'next') + ' bg-secondary');
                        aind2.setAttribute('href', '#carousel' + Date.parse(data.post.input_time));
                        aind2.setAttribute('data-slide', (index == 0 ? 'prev' : 'next'));
                        aind2.setAttribute('style', 'top: 43%; bottom: 43%;');
                        aind2.setAttribute('role', 'button');
                        aind2.setAttribute('title', (index == 0 ? 'Previous room' : 'Next room'));

                        let aind2icon = document.createElement('span');
                        aind2icon.setAttribute('class', 'carousel-control-' + (index == 0 ? 'prev' : 'next') + '-icon');
                        aind2icon.setAttribute('aria-hidden', 'true');

                        aind2.appendChild(aind2icon);
                        // append the other indicators here
                        gg.appendChild(aind2);
                    }



                    g.appendChild(gg);

                }

                let e = document.createElement('div');
                e.setAttribute('class', 'd-flex w-100 justify-content-between');

                let z = document.createElement('h6');
                z.setAttribute('class', 'mb-1');
                z.innerHTML = data.post.statecode.toUpperCase() + ' <br> <small>' + data.post.post_location + '</small>';

                let y = document.createElement('small');
                y.setAttribute('class', '');
                y.innerText = data.post.age;
                e.appendChild(z);
                e.appendChild(y);

                let k = document.createElement("p");
                // k.classList(["maintext"]);
                k.setAttribute('class', 'maintext');
                // to make the sentence thingy ['ggff','gfff'].toString().replace(',', ', ').replace(['ggff','gfff'][['ggff','gfff'].length - 1], 'and ' + ['ggff','gfff'][['ggff','gfff'].length - 1]) gives "ggff, and gfff" // there is a little edit with the ,
                k.innerHTML =
                    `<address><span class='font-italic text-muted'>Address</span>: <a href="#!">${data.post.address} </a> </address> <p><span class='font-italic text-muted'>Details</span>: ${data.post.type} ${(Array.isArray( rms ) ? 'with ' + rms.toString().replace('', 'and ').split(',').reverse().toString().replace(/,/g, ', ') : '' )} at &#8358;${data.post.price} ${data.post.rentrange}. ${(data.post.tenure == 'Sublease.' ? 'Sublease (expires ' + new Date(Date.parse(data.post.expire)).toDateString().italics().bold() + ').'  : 'New lease.' )}</p> <p><span class='font-italic text-muted'>Directions</span>: ${data.post.directions}</p>`;
                let d = document.createElement('div');
                d.setAttribute('class', 'media-body');
                d.appendChild(e);
                d.appendChild(k); // the text from sender
                d.appendChild(h);

                let c = document.createElement('img');
                c.setAttribute('class', 'align-self-start mr-2 rounded-circle');
                // c.setAttribute('data-src','holder.js/64x64');

                c.setAttribute('src',
                    'data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%2245%22%20height%3D%2245%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%2045%2045%22%20preserveAspectRatio%3D%22none%22%3E%3Cdefs%3E%3Cstyle%20type%3D%22text%2Fcss%22%3E%23holder_167df8c1bbc%20text%20%7B%20fill%3A%23AAAAAA%3Bfont-weight%3Abold%3Bfont-family%3AArial%2C%20Helvetica%2C%20Open%20Sans%2C%20sans-serif%2C%20monospace%3Bfont-size%3A10pt%20%7D%20%3C%2Fstyle%3E%3C%2Fdefs%3E%3Cg%20id%3D%22holder_167df8c1bbc%22%3E%3Crect%20width%3D%2245%22%20height%3D%2245%22%20fill%3D%22%23EEEEEE%22%3E%3C%2Frect%3E%3Cg%3E%3Ctext%20x%3D%223.96875%22%20y%3D%2226.896875%22%3E' + `${data.post.statecode.slice(0, 2).toUpperCase()}  ${data.post.statecode.slice(3, 5)}` + '%3C%2Ftext%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E'
                );
                // c.setAttribute('src', 'holder.js/45x45');
                c.setAttribute('alt', data.post.statecode);
                c.setAttribute('style', 'font-size: 8px;');

                let b = document.createElement('div');
                b.setAttribute('class', 'mt-2 row');
                // do not put var b inside the this next if block. it would affect newFeed.appendChild(b)
                if (window.location.pathname.substring(1) != data.post.statecode.toUpperCase()) { // if they aren't the one who made the post, show the three interact icons
                    for (let index = 0; index < 3; index++) {
                        let zx = document.createElement('a');
                        if (index == 1) {
                            zx.href = `/chat?s=<%= statecode %>&posts[type]=accommodation&posts[who]=${data.post.statecode}&posts[when]=${(data.post.post_time || Date.parse(data.post.input_time) )}`;
                        }
                        zx.setAttribute('class', 'col-4 text-center');

                        let cv = document.createElement('i');
                        cv.setAttribute('class', (index == 0 ? 'far fa-bookmark' : index == 1 ? 'far fa-comment-alt' : 'fas fa-ellipsis-h'));

                        zx.appendChild(cv);

                        b.appendChild(zx);
                    }
                }


                let a = document.createElement('div');
                a.setAttribute('class', 'media mb-4');
                a.appendChild(c);
                a.appendChild(d);

                newFeed.appendChild(a);
                newFeed.appendChild(b);

                //right now, we'll append every post together
                feeds.insertBefore(newFeed, feeds.children[0]); // we need to append chronologically
            } else if (data.post.type == 'location') {
                console.info('got a location', data);
                if (true) {
                    let gg = document.createElement('div');
                    gg.setAttribute('class', 'app');

                    // let ii = 'img' + i.toString();
                    ii = document.createElement('img');
                    ii.setAttribute('class', 'img-fluid border');

                    // if what's coming is already a url (like our mapbox pictures) // change later maybe...
                    try {
                        let a = new URL(data.post.media)
                            .toString();
                        console.log('good url')
                        ii.setAttribute('src', data.post.media);
                    } catch (error) { // if it's not already a url
                        console.log(data.post.media, 'err image map', error);
                        // with holder.js set the src attr of the image to display an appropriate err msg
                    }


                    ii.setAttribute('alt', 'map image'); // do better
                    gg.appendChild(ii);
                    g.appendChild(gg);
                }

                /*
                  let ii = document.createElement('img');
                  ii.setAttribute('class', 'col-4');
                  ii.setAttribute('data-src','holder.js/64x64?theme=thumb');
                  ii.setAttribute('alt', 'user\'s posted image');
                */

                let e = document.createElement('div');
                e.setAttribute('class', 'd-flex w-100 justify-content-between');

                let z = document.createElement('h6');
                z.setAttribute('class', 'mb-1');
                z.innerHTML = data.post.statecode.toUpperCase() + ' <br> <small>' + data.post.location + '</small>';

                let y = document.createElement('small');
                y.setAttribute('class', '');
                y.innerText = data.post.age;
                e.appendChild(z);
                e.appendChild(y);

                let k = document.createElement("p");
                // k.classList(["maintext"]);
                k.setAttribute('class', 'maintext');
                k.innerText = data.post.text;
                let d = document.createElement('div');
                d.setAttribute('class', 'media-body');
                d.appendChild(e);
                d.appendChild(k); //the text from sender
                d.appendChild(h);

                let c = document.createElement('img');
                c.setAttribute('class', 'align-self-start mr-2 rounded-circle');
                // c.setAttribute('data-src','holder.js/64x64');

                c.setAttribute('src',
                    'data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%2245%22%20height%3D%2245%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%2045%2045%22%20preserveAspectRatio%3D%22none%22%3E%3Cdefs%3E%3Cstyle%20type%3D%22text%2Fcss%22%3E%23holder_167df8c1bbc%20text%20%7B%20fill%3A%23AAAAAA%3Bfont-weight%3Abold%3Bfont-family%3AArial%2C%20Helvetica%2C%20Open%20Sans%2C%20sans-serif%2C%20monospace%3Bfont-size%3A10pt%20%7D%20%3C%2Fstyle%3E%3C%2Fdefs%3E%3Cg%20id%3D%22holder_167df8c1bbc%22%3E%3Crect%20width%3D%2245%22%20height%3D%2245%22%20fill%3D%22%23EEEEEE%22%3E%3C%2Frect%3E%3Cg%3E%3Ctext%20x%3D%223.96875%22%20y%3D%2226.896875%22%3E' + `${data.post.statecode.slice(0, 2).toUpperCase()} ${data.post.statecode.slice(3, 5)}` + '%3C%2Ftext%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E'
                );
                // c.setAttribute('src', 'holder.js/45x45');
                c.setAttribute('alt', data.post.statecode);
                c.setAttribute('style', 'font-size: 8px;');


                let b = document.createElement('div');
                b.setAttribute('class', 'mt-2 row');
                // do not put var b inside the this next if block. it would affect newFeed.appendChild(b)
                if (window.location.pathname.substring(1) != data.post.statecode.toUpperCase()) { // if they aren't the one who made the post, show the three interact icons
                    for (let index = 0; index < 3; index++) {
                        let zx = document.createElement('a');
                        if (index == 1) {
                            zx.href = `/chat?s=<%= statecode %>&posts[type]=sale&posts[who]=${data.post.statecode}&posts[when]=${(data.post.post_time || Date.parse(data.post.input_time) )}`;
                        }
                        zx.setAttribute('class', 'col-4 text-center');

                        let cv = document.createElement('i');
                        cv.setAttribute('class', (index == 0 ? 'far fa-bookmark' : index == 1 ? 'far fa-comment-alt' : 'fas fa-ellipsis-h'));

                        zx.appendChild(cv);

                        b.appendChild(zx);
                    }
                }



                let a = document.createElement('div');
                a.setAttribute('class', 'media mb-4');
                a.appendChild(c);
                a.appendChild(d);

                newFeed.appendChild(a);
                newFeed.appendChild(b);

                //right now, we'll append every post together
                feeds.insertBefore(newFeed, feeds.children[0]);
            }

            // send 'my other event' to everyone else

            // find a way to record the number of people that has seen a particular ad/post. and show the sender.

            // socket.emit('seen', { my: 'saw data, because we recieved it' });
        };

        socket.on('boardcast message', bc);
    </script>
    <script>
        let txtFld = document.getElementById("TXT");

        noNull = function() {
            console.log('typed');
            if (txtFld.value == "") {
                document.getElementById('postsubmit')
                    .disabled = true;
            } else {
                document.getElementById('postsubmit')
                    .disabled = false;
            }
        }

        txtFld.addEventListener('input', noNull, false);

        /*
            let handleKey = function(evt) {
              console.log('keyup on #TXT field');
              if (evt.keyCode === 13 || evt.keyCode === 14) {
                sendMsg();
                console.log('sent');
              }
            }

            txtFld.addEventListener("keyup", handleKey, false );
        */
        //----------------------

        //some sort of global variables
        let previewParent = document.getElementById('previewParent');
        let msg = {
            images: [],
            videos: []
        };
        /*       let sendBtn = document.getElementById("SEND");
        
              function sendMsg() {
        
                console.log('sendMsg function running');
        
                msg.text = txtFld.value,
                  msg.type = "sale",
                  msg.post_time = Date.now(),
                  msg.sender = pathArray[2],
                  msg.location = userlocation,
                  msg.statecode = usersc;
                socket.emit('boardcast message', msg, (delivered_value) => {
                  // this funtion will run here to show the server has gotten our message.
                  console.log('server got our message ? ', delivered_value); // data will be 'true'
                }); // use post time to know the particular message.
        
                console.log(msg,
                  'append boardcast message to corper tl then use sth to make them know their stuff be delivered.');
        
                //append sent message to sender's timeline (not yet !! maybe when we do we'll make user know it hasn't been done)
        
                //close modal
                $('#postModalSale').modal('hide');
                //show that post has been made
        
              }
        
        
              // after post has been made and/or modal closed
              $('#postModalSale').on('hidden.bs.modal', function (e) {
                // do something...
                console.log('post modal hidden');
                txtFld.value = "";
                document.getElementById('SEND').disabled = true;
                //remove the attached image from the div and the input tag, empty the msg object
        
                //if there's an attached image, remove it, we don't want errors incase the corper didn't pick any pictures
                //remove all
        
                while (previewParent.firstChild) {
                  previewParent.removeChild(previewParent.firstChild);
                }
        
                if (msg.images.length > 0) {
                  msg.images = [];
                }
              });
        
              sendBtn.addEventListener("click", sendMsg, false); */

        $('#postModalSale')
            .on('shown.bs.modal', function(e) {
                txtFld.focus();
            });

        $('#postModalSale')
            .on('hidden.bs.modal', function(e) {
                /* if (document.getElementById( 'previewParent' ).hasChildNodes()) {
                    document.getElementById( 'previewParent' )
                        .removeChild( document.getElementById( 'preview' ) );
                        document.getElementById( 'locinfo' ).innerHTML = '';
                } */

                // if we want to clear what they were gonna post, uncomment. but we don't !
                /* $('#previewPostPics').html('');
                document.getElementById( 'locinfo' ).innerHTML = ''; */

            });

        /*
          WE'LL LAZY LOAD ALL CONTENT, FIND A WAY TO COMPRESS IMAGES, TRY TO FIND WHATSAPP COMPRESSION ALGORITHM (CAUSE THEY'RE REALLY GOOD) - ONCE WE DO THIS, MAYBE WE CAN DO VIDEO TOO
        */

        /* Dynamically adding a change listener to the img input button */
        let imgBtn = document.getElementById("IMG");


        function handleImages() {
            // remove location image from DOM ... and clear map data ???? yes for now, later we'd be saving it, more info
            $('#preview').html('');
            $('#locinfo').html('');
            document.getElementById("mapimg").value = '';
            // set post type to sale
            document.getElementById("ptype").value = 'sale';
            //let preview = document.getElementById('preview');
            // let preview = document.createElement( 'div' );
            // preview.setAttribute( 'id', 'preview' );
            // preview.setAttribute( 'class', 'app' );
            // console.log( 'created!' );

            let fileList = this.files; /* now you can work with the file list */
            console.log('picture(s) picked!');

            // remove what was there (pics to post) before
            $('#previewPostPics').html('');


            for (let i = 0; i < fileList.length; i++) {
                let file = fileList[i];

                if (file.type.startsWith('image/')) {
                    /* let contain = document.createElement( 'div' );
                    contain.setAttribute( 'class', 'image-wrapper' );
                    contain.setAttribute( 'id', 'image-to-post' + i );
                    let b = document.createElement( 'button' );
                    b.classList.add( 'top-right', 'btn', 'btn-sm' );
                    b.innerHTML = 'Remove';
                    let ico = document.createElement( 'i' );
                    ico.classList.add( 'top-right', 'fa-remove' );
                    b.onclick = function remove( e ) {
                        console.log( e );
                        console.log( 'tryna remove' );
                        preview.removeChild( e.target.parentNode );
                        // remove them from images attribute in msg obj & if possible from the file input tag
                        // msg.images.splice(0, 1);
                        msg.images.splice( msg.images.indexOf( e.target.parentNode.firstChild.currentSrc ), 1 );
                        // why is 1 increased by 1
                        console.log( msg.images );
                    }

                    let img = document.createElement( "img" );

                    contain.appendChild( img );
                    contain.appendChild( b ); */ // or ico
                    // contain.appendChild(ico); // we'd add icon later
                    // img.classList.add("img-fluid", "border"); //add classes 'img-fluid' and 'border' // let's not add it 1stly

                    // preview.appendChild( contain );
                    /*Next, we establish the FileReader to handle asynchronously
                    loading the image and attaching it to the img element.
                    After creating the new FileReader object, we set up its
                    onload function and then call readAsDataURL() to start the
                    read operation in the background. When the entire contents
                    of the image file are loaded, they are converted into
                    a data: URL which is passed to the onload callback.
                    Our implementation of this routine sets the img element's
                    src attribute to the loaded image which results in the image
                    appearing in the thumbnail on the user's screen.*/
                    const reader = new FileReader();
                    /* reader.onload = (
                        function( aImg ) {
                            return function( e ) {
                                aImg.src = e.target.result;
                                //e.targer.result is the base64 of the image
                                //msg.images[i] = aImg.src ;
                                //either of the two , but wharever method, be able to remove from array when user cancels.
                                msg.images.push( e.target.result );
                                console.log( msg );
                            };
                        } )( img );
                    reader.readAsDataURL( file ); */


                    // -----

                    // const file = files[i];
                    // let reader = new FileReader();

                    reader.onload = (function(file) {
                        return function(event) {
                            $('#previewPostPics').append('<img src="' + event.target.result + '" class="rounded img-thumbnail img-fluid" style="max-width: 100%; height: auto;" data-order=0 data-id="' + file.lastModified + '" />');

                        };
                    })(file);

                    // document.forms[2].elements[3].files
                    /* Object.entries(document.forms[2].elements[3].files).forEach( f => {
                        console.log('f', f)
                    }); */

                    reader.readAsDataURL(file);
                }


            }


            // append the div tag with id=preview
            // previewParent.appendChild( preview );
        }
        imgBtn.addEventListener("change", handleImages, false);

        $('#roomsmedia').change(function(e) {
            $('#hereNow').empty();
            let files = e.target.files;
            for (let i = 0; i <= files.length; i++) {

                let file = files[i];
                const reader = new FileReader();

                reader.onload = (function(file) {

                    return function(event) {
                        $('#hereNow').prepend(`<div class="card">
                                                <div class="">
                                                    <img src="${event.target.result}" class="card-img-top" alt="..." data-order=0 data-id="${file.lastModified}" />
                                                </div>
                                                <div class="">
                                                        <select class="accviews custom-select" id="${file.lastModified}" name="${file.size}" style="border-radius: 0rem;">
                                                            <option selected>Choose...</option>
                                                            <option value="Bathroom">Bathroom</option>
                                                            <option value="Toilet">Toilet</option>
                                                            <option value="Kitchen">Kitchen</option>
                                                            <option value="Bathroom & Toilet">Bathroom & Toilet</option>
                                                        </select>
                                                    </div>
                                                </div>`);
                        $('.accviews').change(function(evt) {
                            console.log('name of change', evt, evt.target.attributes['id'].value)
                            // the picture choosen
                            let farr = document.forms[1].elements["roomsmedia"].files;
                            for (let index = 0; index < farr.length; index++) {
                                const f = farr[index];
                                console.log('fname', f.name, f.lastModified)
                                if (f.lastModified == evt.target.attributes['id'].value) {
                                    console.log('changed name')
                                    // get extenstion s.substring(s.lastIndexOf('.'), s.length);
                                    f.name = evt.target.value + f.name.substring(f.name.lastIndexOf('.'), f.name.length);
                                }
                            }
                        })

                    };
                })(file);

                reader.readAsDataURL(file);
            }; // end for
        });


        // to do recording of video https://ourcodeworld.com/articles/read/671/how-to-record-a-video-with-audio-in-the-browser-with-javascript-webrtc

        //maybe later ? https://ourcodeworld.com/articles/read/518/how-to-create-a-360-video-player-with-javascript-using-clappr

        //https://ourcodeworld.com/articles/read/127/how-to-implement-a-pull-to-update-effect-android-refresh-style-with-javascript

        //https://ourcodeworld.com/articles/read/460/how-to-create-a-live-barcode-scanner-using-the-webcam-in-javascript

        //https://ourcodeworld.com/articles/read/457/how-to-display-images-in-the-javascript-console-of-the-browser (tell them (or rather show 'em): what you looking for ? give us a reach out !)

        // https://ourcodeworld.com/articles/read/167/how-to-prevent-modification-of-an-object-in-javascript-and-prevent-them-from-being-accesible-in-the-console

        $('[data-spy="scroll"]')
            .on('activate.bs.scrollspy', function() {
                // do something
                console.log('passed');
            });
    </script>
    <script>
        // https://developer.mozilla.org/en-US/docs/Web/API/Node/replaceChild
        let placeBtn = document.getElementById("place");

        function placeMe() {

        }
        placeBtn.addEventListener("click", placeMe, false);
    </script>
    <script>
        // work on this bit alot

        let findBtn = document.getElementById("findme");
        let findBtn2 = document.getElementById("geo");

        function locate(ev) {
            // if it's for a location, remove sales pic from DOM and input
            $('#previewPostPics').html('');
            document.forms[2].elements[4].value = '';
            // set post type to location
            document.getElementById("ptype").value = 'location';
            // [ev.target.id == 'findme' ev.target.nodeName == 'SPAN'] [ev.target.nodeName == 'A' ev.target.id == 'geo']
            // if the screen is small, then ev.target.nodeName == 'I', the icon tag <i></i> so we use locinfo as infoElement
            let infoElement = (ev.target.nodeName == 'SPAN' ? 'locinfo' : ev.target.nodeName == 'A' ? 'accinfo' : 'locinfo'); // the variable that decides where the geolocation errors are displayed, this is getting the id of the element and passing it to the variable so we can reference the div element and display error messages

            console.log('Retriving location...', infoElement, ev.target.nodeName);
            let savePoint = {
                "type": "Feature",
                "properties": {},
                "geometry": {
                    "type": "Point",
                    "coordinates": []
                }
            };

            //empty the savePoint variable before use [i think because of previous usage] not after success anymore
            savePoint.geometry.coordinates.pop();
            savePoint.geometry.coordinates.pop();
            savePoint.properties = {};

            let geo_options = {
                enableHighAccuracy: true,
                maximumAge: 30000,
                timeout: 27000
            };

            let geo_options_to = {
                enableHighAccuracy: true,
                maximumAge: 30000,
                timeout: 33000
            };
            let one = 0;
            let geoPointError = function(error) {

                console.log(error);
                switch (error.code) {
                    case error.TIMEOUT:
                        //try again with a longer timeout

                        document.getElementById(infoElement)
                            .innerText =
                            'TIMEOUT Error. We\'re trying again...'; //add or 'never mind?' option in the sentence so corper can quit
                        if (one <= 1) {
                            one++;
                            console.log('timeout ' + one + ' times');
                            navigator.geolocation.getCurrentPosition(geoPoint, geoPointError, geo_options_to);
                        }

                        break;
                    case error.PERMISSION_DENIED: // it could be the user denied permission by not accpting location prompt and that the browser denied because of http and not https
                        // The user didn't accept the callout //showNudgeBanner();
                        document.getElementById(infoElement)
                            .innerText =
                            'Please you\'d need to allow location on your broswer. Let\'s do this again';
                        // (put loc function in showNudgeBanner() callback) ?, so when corper click ok\close for the banner, we get loc
                        // navigator.geolocation.getCurrentPosition(geoPoint, geoPointError, geo_options);
                        break;
                    case error.POSITION_UNAVAILABLE:
                        //say there's no network n try again when there is ?!!!?
                        document.getElementById(infoElement)
                            .innerText =
                            'You seem to be offline. Try again when you\'re online.'; //maybe find how we can auto get the user's location after telling them they're offline
                        //google said : [Violation] Only request geolocation information in response to a user gesture.
                        //window.addEventListener('online',  navigator.geolocation.getCurrentPosition(geoPoint, geoPointError));
                        break;
                    case 0: //unknown error
                        //just try again
                        document.getElementById(infoElement)
                            .innerText =
                            'Something went wrong and we don\'t know what. We\'ll just try again.';
                        locate();
                        break;
                }
            };

            let geoPoint = function(position) {
                // Do magic with location

                //inform the corper we got the location, and then suggests streets name for them in the input box, also if the geolocation isn't accurate enough, tell them to try again
                document.getElementById(infoElement).innerText = 'We got it.';

                // not removing these cause Uncaught TypeError: Converting circular structure to JSON, Thank God we don't need them to begin with
                // delete e.sourceTarget;
                // delete e.target;
                // delete e.type;
                console.log('normal position', position);
                // savePoint.properties.geo = position.coords;
                // savePoint.properties.geo = JSON.parse(JSON.stringify(position.coords));

                savePoint.properties.geo = {
                    accuracy: position.coords.accuracy,
                    latitude: position.coords.latitude,
                    longitude: position.coords.longitude,
                    timestamp: position.timestamp
                }

                // the position object from the geolocation doens't save to froms, so you have to clone it

                // cordinates don't save unless you turn them to strings
                savePoint.geometry.coordinates.push(position.coords.longitude);
                savePoint.geometry.coordinates.push(position.coords.latitude);

                //savePoint.geometry.coordinates[0] = position.coords.longitude.toString() ;
                //savePoint.geometry.coordinates[1] = position.coords.latitude.toString() ;
                console.log('savePoint', savePoint, JSON.stringify(savePoint).length);

                // do this only if the event came from accommodation form
                if (infoElement == 'accinfo') {
                    document.forms[1].elements["acc_geodata"].value = JSON.stringify(savePoint);
                }

                // only do that image thinghy if the request came from the share location button
                if (infoElement == 'locinfo') {
                    console.log('weeeee;');
                    // how can I know if and when the fetch api was aborted https://developers.google.com/web/updates/2017/09/abortable-fetch
                    const controller = new AbortController();
                    const signal = controller.signal;

                    setTimeout(() => controller.abort(), 5000);

                    //once we get the geo coordinates, first we get the name of the place., nominatium isn't perfect yet, will just be saving data from it to compare the accuracy we get
                    fetch('https://nominatim.openstreetmap.org/reverse?format=jsonv2&lat=' + position.coords.latitude +
                            '&lon=' + position.coords.longitude, {
                                signal
                            })
                        .then(
                            function(response) {
                                if (response.status !== 200) {
                                    console.log('Looks like there was a problem. Status Code: ' +
                                        response.status);
                                    return;
                                }

                                // Examine the text in the response AND WHY IS CORDINATES NOT SAVING TO savePoint variable
                                response.json()
                                    .then(function(data) {
                                        console.log(data);
                                        savePoint.properties.nominatim = data;
                                        console.log('savePoint2', savePoint);
                                    });
                            }
                        )
                        .catch(function(err) {
                            //console.log('Fetch Error :-S', err);
                            if (err.name === 'AbortError') {
                                console.log('Fetch aborted');
                            } else {
                                console.error('Uh oh, an error! Fetch Error :-S', err);
                            }
                        });
                    //save to db

                    //do the image
                    let img = new Image();
                    img.id = 'mapboximage';
                    // get map if location is accurate enough, but if it isn't then ask user where they are. | Retrieve a map at gotten longitude and latitude, with zoom 14.24, bearing 0, and pitch 60. The map will be 460 pixels wide and 460 pixels high (for mobile screen, 310px by 290px)
                    img.src = "https://api.mapbox.com/styles/v1/mapbox/streets-v10/static/pin-l(" + position.coords.longitude +
                        "," + position.coords.latitude + ")/" + position.coords.longitude + "," + position.coords.latitude +
                        ",14.25,0,60/310x290?access_token=pk.eyJ1IjoiY2h1a3MwMDciLCJhIjoiY2psOW1iZ2x0MXRoczNycGJwdzhpOGZhbCJ9.z03GKFAu-scE70Z1JKagOg";

                    // set the form property for the img
                    document.getElementById("mapimg").value = img.src;

                    let preview = document.createElement('div');
                    preview.setAttribute('id', 'preview');
                    preview.setAttribute('class', 'cnt mb-2'); // TODO, align item in middle
                    // preview.setAttribute('class', 'app');
                    document.getElementById(infoElement)
                        .innerText = '';
                    preview.appendChild(img);

                    img.onloadstart = (event) => {
                        // console.log('l', event)
                    }

                    // note: there's img.complete;


                    let anythere = document.getElementById('previewPostPics').hasChildNodes();
                    if (anythere) { // replace the first element
                        // previewParent.replaceChild(preview, document.getElementById('previewPostPics'));
                        $('#previewPostPics').html('');
                        previewParent.appendChild(preview);
                    } else {
                        // just append
                        previewParent.appendChild(preview);
                    }


                    msg.images.push(img.src);
                    // document.forms[2].elements[2].value = img; // works ?
                    msg.type = 'location'; // add this to the forms
                    msg.geo = savePoint; // add to the forms, i think it's done already, it isn't mehnnnnn

                }
                //sendMsg();
                /*

                      //to convert to dataURI // https://davidwalsh.name/convert-image-data-uri-javascript https://ourcodeworld.com/articles/read/182/the-canvas-has-been-tainted-by-cross-origin-data-and-tainted-canvases-may-not-be-exported
                      img.crossOrigin = "anonymous" ;
                      img.onload = function () {
                        let canvas = document.createElement('canvas');
                        canvas.width = this.naturalWidth; // or 'width' if you want a special/scaled size
                        canvas.height = this.naturalHeight; // or 'height' if you want a special/scaled size

                        canvas.getContext('2d').drawImage(this, 0, 0);

                        // Get raw image data
                        //callback(canvas.toDataURL('image/png').replace(/^data:image\/(png|jpg);base64,/, ''));

                        // ... or get as Data URI
                        canvas.toDataURL('image/png');
                        //console.log(canvas.toDataURL('image/png')); //almosts crashes the browser, for some reasons, it keeps on logging
                        img.src = canvas.toDataURL('image/png');
                        preview.appendChild(img);
                        previewParent.appendChild(preview);
                      };

                        https://stackoverflow.com/questions/27526281/websockets-and-apache-proxy-how-to-configure-mod-proxy-wstunnel/27534443#27534443
                */


            };

            navigator.geolocation.getCurrentPosition(geoPoint, geoPointError, geo_options);
            document.getElementById(infoElement)
                .innerText = 'Retrieving location...';
        };

        findBtn.addEventListener("click", locate, false);
        findBtn2.addEventListener("click", locate, false);
    </script>

    <script>
        // http://www.runningcoder.org/jquerytypeahead/demo/ User v1
        // they should only be able to search their state
        // use grouping from http://www.runningcoder.org/jquerytypeahead/demo/ Advanced demo Beer v1
        $.typeahead({
            input: '.js-typeahead-search',
            // order: "asc", // asc or desc // no need for this, we already arrange it from server
            minLength: 1, // Accepts 0 to search on focus, minimum character length to perform a search
            offset: false, // Set to true to match items starting from their first character
            cache: sessionStorage,
            hint: true,
            loadingAnimation: true,
            backdrop: {
                "background-color": "#fff"
            },
            ttl: 3600000, // Cache time to live in ms
            maxItem: 30, // highest number of results to show
            /* group: { // use group to maybe group by LGAs and anything relevant
            template: "{{group}}"
            }, */
            // template: "{{streetname}} {{ppa_address}} <br> <small class='text-muted text-uppercase'>{{group}}</small>",
            // href: "/newsearch?title={{display}}",

            // Typeahead can also search deep inside an object, just separate the keys with "." like display: ['string', 'deeper.key.level']
            // display: ["streetname", "ppa_address"], // or be specific in the group objects
            emptyTemplate: 'No result for "{{query}}"', //  <a> Put a reminder for when it\'s avaliable or tell them to search for other similar things after giving them similar results </a> 
            source: {
                // group cannot be 'data'
                accommodations: {
                    template: "{{streetname}} <br> <small class='text-muted text-uppercase'>{{type}}, &#8358;{{price}} {{rentrange}} by {{statecode}}</small>" +
                        "<br> <small class='text-muted text-uppercase'>{{group}}</small>",
                    display: ['streetname', 'type', 'price'],
                    // Be careful as item properties might contain Url-unsafe characters
                    href: function(item) {
                        // console.log('acc href', item);
                        return "/newsearch?type=" + item.group + "&it=" + item.input_time + "&sn=" + item.streetname + "&sc=" +
                            item.statecode; // sn sc it
                    },
                    ajax: {
                        url: "/posts",
                        data: { // set url query parameter if we want to do backend/query search
                            q: '{{query}}',
                            s: window.location.pathname.substring(1, 12) // '<%= statecode %>'
                        },
                        path: 'data.accommodations'
                    }
                },
                ppa: {
                    template: "{{name_of_ppa}} ({{type_of_ppa}})<br> <small class='text-muted text-uppercase'>{{ppa_address}}</small>" +
                        "<br> <small class='text-muted text-uppercase'>{{group}}</small>",
                    display: ["name_of_ppa", "ppa_address", "type_of_ppa"],
                    // Be careful as item properties might contain Url-unsafe characters
                    href: function(item) {
                        // console.log('ppa href', item);
                        return "/newsearch?type=" + item.group + "&nop=" + item.name_of_ppa + "&pa=" + item.ppa_address +
                            "&top=" + item.type_of_ppa; // nop type pa
                    },
                    ajax: {
                        url: "/posts",
                        data: { // set url query parameter if we want to do backend/query search
                            q: '{{query}}',
                            s: window.location.pathname.substring(1, 12) // '<%= statecode %>'
                        },
                        path: 'data.ppas'
                    }
                }
            },
            // please put elipses in very long texts, group or add posts type (eg. accommodation, on sale, ppa, etc.)
            callback: {
                onInit: function(node) {
                    console.log('Typeahead Initiated on ', node);
                },
                onReceiveRequest: function(node, searchtext) {
                    console.log('gonna search ', node, searchtext);
                    // save seacrhtext in db for corper's preference and other good functionalities
                    // if they searched for an accommodation, alert them when one is avalible.
                    // even give the option of them putting on alert when a particulart item or property is up for sale or rent respectively
                },
                onResult: function(node, searchtext, results, l) { // When the result container is displayed
                    console.log('search result', node, searchtext, results, l);
                    // let's see what the user is seeing
                },
                // The ul.typeahead__list has max-height: 300px; and is scrollable, onNavigateAfter is set to scroll the result container if arrow UP or DOWN are pressed to the .active item.
                onNavigateAfter: function(node, lis, a, item, query, event) {
                    if (~[38, 40].indexOf(event.keyCode)) {
                        let resultList = node.closest("form")
                            .find("ul.typeahead__list"),
                            activeLi = lis.filter("li.active"),
                            offsetTop = activeLi[0] && activeLi[0].offsetTop - (resultList.height() / 2) || 0;

                        resultList.scrollTop(offsetTop);
                    }
                },
                onMouseEnter: function(node, a, item, event) {
                    console.log('enter key on search');
                    /* if (item.group === "country") {
                        $(a).append('<span class="flag-chart flag-' + item.display.replace(' ', '-').toLowerCase() + '"></span>')
                    } */
                }
            },
            debug: true
        });
    </script>

    <script>
        // https://developer.mozilla.org/en-US/docs/Web/API/Network_Information_API
        let connection = navigator.connection || navigator.mozConnection || navigator.webkitConnection;
        let type = connection.effectiveType;

        function updateConnectionStatus() {
            console.log("Connection type changed from " + type + " to " + connection.type);
        }

        connection.addEventListener('change', updateConnectionStatus);
    </script>

    <!--on PoP day or the corper's birthday, pick one of these demos from https://tympanus.net/codrops/2019/01/08/animated-mesh-lines/ and display or use as the background.-->
</body>

</html>