﻿<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <title>Be a Corper Online</title>
    <link rel="icon" href="assets/images/1/favicon.ico" type="image/x-icon">

    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <meta name="keywords" content="Register on Corper Online and get to safely Buy from Corpers, Sell to Corpers" />
    
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-MCw98/SFnGE8fJT3GXwEOngsV7Zt27NXFoaoApmYm81iuXoPkFOJwJ8ERdknLPMO" crossorigin="anonymous">

    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js" integrity="sha256-FgpCb/KJQlLNfOu91ta32o/NMZxltwRo8QtmkMRdAu8=" crossorigin="anonymous"></script>
    <!-- <script src="https://code.jquery.com/jquery-3.3.1.min.js" integrity="sha256-FgpCb/KJQlLNfOu91ta32o/NMZxltwRo8QtmkMRdAu8="
			crossorigin="anonymous"></script> -->

    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/js/bootstrap.bundle.min.js" integrity="sha384-pjaaA8dDz/5BgdFUPX6M/9SUZv4d12SUPF0axWc+VRZkx5xU3daN+lYb49+Ax+Tl" crossorigin="anonymous"></script>


    <!-- <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/js/bootstrap.min.js" integrity="sha384-ChfqqxuZUCnJSK3+MXmPNIyE6ZbWh2IMqE241rYiqJxyMiZ6OW/JmZQ5stwEULTy"
			crossorigin="anonymous"></script> -->
    <link href="https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css" rel="stylesheet" integrity="sha384-wvfXpqpZZVQGK6TAh5PVlGOfQNHSoD2xbE+QkPxCAFlNEevoEH3Sl0sibVcOQVnN" crossorigin="anonymous">

    <script src="https://cdnjs.cloudflare.com/ajax/libs/holder/2.9.4/holder.js" integrity="sha256-crfkMD0BL2TtiwpbIlXF/SVmGSvOtgbMM8GBkibVKyc=" crossorigin="anonymous"></script>
    <script src="/socket.io/socket.io.js"></script>

    <style>
        .footer {
            right: 0;
            bottom: 0;
            left: 0;
            z-index: 1030;
        }

        input#statecode {
            text-transform: uppercase;
        }

        .wrong{
            color: red;
        }
    </style>
    <script async defer data-website-id="58dce5f5-c238-4e98-b2c6-e701c258f01d" src="https://using-umami.herokuapp.com/umami.js"></script>
</head>

<body>
    <div class="d-flex flex-column flex-md-row align-items-center p-3 px-md-4 bg-white border-bottom box-shadow">
        <h5 class="my-0 mr-md-auto font-weight-normal"><a href="/">Corpers Online</a></h5>
        <nav class="my-2 my-md-0 mr-md-3">
            <a class="p-2 text-dark" href="/login">Log In</a>
            <a class="p-2 text-dark" href="#!">Sign up</a>
            <a class="p-2 text-dark" href="/contact">Contact</a>
            <a class="p-2 text-dark" href="/about">About</a>
        </nav>
    </div>
    <main role="main">

        <div>
            <div class="jumbotron" style="border-radius:0rem;background-color:#fff;">
                <h1 class="display-4">Corper we!</h1>
                <p class="lead">Make your #ServiceYear easy. Be part of a network of corpers all over Nigeria actively sharing information. Timely accurate information is powerful, but you already know.</p>
                <hr class="my-4">
                <p>It's easy. <a href="/login">Or wanna login?</a> </p>


                <form class="container" method="POST" action="/signup" enctype="application/x-www-form-urlencoded">

                    <div class="form-row">
                        <div class="col-md-4 mb-3">
                            <label for="firstname">Names</label>
                            <div class="input-group">
                                <input type="text" name="lastname" autocomplete="cc-family-name" class="form-control" id="lastname" placeholder="Last" autofocus required> <!--  pattern="[^!@#$%&()=+~?><\\\/|,.:;1234567890]" -->
                                <input type="text" name="middlename" autocomplete="cc-additional-name" class="form-control" id="middlename" placeholder="Middle" value="">
                                <input type="text" name="firstname" autocomplete="given-name" class="form-control" id="firstname" placeholder="First" value="" required>
                            </div>
                            <small data-reason="help text" class="text-muted">Middle name is optional.</small>
                        </div>
                        <div class="col-md-4 mb-3">
                            <label for="email">Email</label>
                            <div class="input-group">
                                <div class="input-group-prepend">
                                    <span class="input-group-text" id="inputGroupPrepend">@</span>
								</div>
                                <input type="email" class="form-control" autocomplete="email" name="email" id="email" placeholder="bensonojohakeem@gmail.com" aria-describedby="inputGroupPrepend" required>
							</div>
							<div hidden class="wrong"></div>
                        </div>
                        <div class="col-md-4 mb-3">
                            <label for="password">Password</label>
                            <input name="password" autocomplete="current-password" type="password" class="form-control" id="validationPassword" placeholder="Password" required>
                        </div>
                    </div>


                    <div class="form-row">
                        <div class="col-md-4 mb-3">
                            <label for="statecode">State code</label>
							<input id="scinput" type="text"
							class="form-control text-uppercase" autocomplete="statecode" id="statecode" name="statecode" placeholder="e.g. AB/17A/4567" required>
                            <!-- add distinct state codes. make sure state codes haven't been registered before -->
                            <small class="text-muted">This will help verify corpers.</small>
                            <div class="valid-feedback">
                                Looks good!
							</div>
							<div hidden class="wrong"></div>
                        </div>

                    </div>


                    <div class="form-group form-check">
                        <input type="checkbox" class="form-check-input" id="knowme">
                        <label class="form-check-label" for="knowme">Remember me</label>
                        <!--once the "remember me" button is checked, the text will turn to we won't forget.-->
                    </div>
                    <input type="submit" class="btn btn-primary" value="Submit"> <!-- make browser save the statecode and password -->
                    <!--<button type="submit" class="btn btn-primary">Submit</button>-->
                </form>
            </div>




        </div>


    </main>

    <footer class="footer text-center pt-3">
        <p>Corpers Online built by <a href="/contact">Corpers</a> for <a href="/login">Corpers</a>.</p>
        <p>
            &copy; <%= current_year %>
        </p>
    </footer>

    <script>
        const statecodeInput = document.getElementById('scinput');
		let years = parseInt( new Date( Date.now() ).getFullYear().toFixed().slice( 2, 4 ) );
        let yearrange = '(' + ( years - 1 ).toString() + '|' + years.toString() + ')';
        
		/* statecodeInput.pattern = `(AB|AD|AK|AN|BA|BY|BN|BO|CR|DT|EB|ED|EK|EN|FC|GM|IM|JG|KD|KN|KT|KB|KG|KW|LA|NS|NG|OG|OD|OS|OY|PL|RV|SO|TR|YB|ZM|ab|ad|ak|an|ba|by|bn|bo|cr|dt|eb|ed|ek|en|fc|gm|im|jg|kd|kn|kt|kb|kg|kw|la|ns|ng|og|od|os|oy|pl|rv|so|tr|yb|zm)\\/${yearrange}[abcACB]\\/[0-9]{4}`; // extra escaping probably because we're setting with string from here and not directly from the pattern attribute
        statecodeInput.addEventListener('change', function(event){
            // event.preventDefault();
            event.target.setCustomValidity("");
            if (statecodeInput.validity.patternMismatch) {
                event.target.setCustomValidity("State code should start with a valid state abbreviation, have forward slashes, appropriate batch, and four trailing digits. Right? And are you currently serving?");
            } else {
                event.target.setCustomValidity("");
            }
        }); */

        /* statecodeInput.addEventListener('input', function(event){
            event.target.setCustomValidity("");
        }); */

        // Example starter JavaScript for disabling form submissions if there are invalid fields
        (function () {
          'use strict';

          window.addEventListener('load', function () {
            // Fetch all the forms we want to apply custom Bootstrap validation styles to
            var forms = document.getElementsByClassName('needs-validation');

            // Loop over them and prevent submission
            var validation = Array.prototype.filter.call(forms, function (form) {
              form.addEventListener('submit', function (event) {
                if (form.checkValidity() === false) {
                  event.preventDefault();
                  event.stopPropagation();
                }
                form.classList.add('was-validated');
              }, false);
            });
          }, false);
        })();

        if ( 'URLSearchParams' in window ) {
            let urlParams = new URLSearchParams( window.location.search );
            // URLSearchParams also provides familiar Object methods like keys(), values(), and entries():
            // group repepitive commands together like ...removeAttribute( 'hidden' ) etc., so we call them once
            if ( urlParams.get("m") === "de" ) {
                document.getElementsByClassName( 'wrong' )[ 0 ].textContent = 'Email already registered with';
                document.getElementsByClassName( 'wrong' )[ 0 ].removeAttribute( 'hidden' );
                document.getElementById( 'email' )
					.classList.add( 'is-invalid' );
					
            } else if ( urlParams.get("m") === "ds" ) {
                document.getElementsByClassName( 'wrong' )[ 1 ].textContent = 'State code already registered with';
                document.getElementsByClassName( 'wrong' )[ 1 ].removeAttribute( 'hidden' );
                document.getElementById( 'scinput' )
                    .classList.add( 'is-invalid' );
            } else if ( urlParams.get("m") === "is" ) {
                document.getElementsByClassName( 'wrong' )[ 1 ].textContent = 'Invalid statecode';
                document.getElementsByClassName( 'wrong' )[ 1 ].removeAttribute( 'hidden' );
                document.getElementById( 'scinput' )
                    .classList.add( 'is-invalid' );
            }
        } else { // While URLSearchParams is ideal, not all browsers support that API.
            function getUrlParameter( name ) {
                name = name.replace( /[\[]/, '\\[' )
                    .replace( /[\]]/, '\\]' );
                let regex = new RegExp( '[\\?&]' + name + '=([^&#]*)' );
                let results = regex.exec( location.search );
                return results === null ? '' : decodeURIComponent( results[ 1 ].replace( /\+/g, ' ' ) );
            };
            if ( getUrlParameter( 'm' ) && ( getUrlParameter( 'm' ) == 'de' ) ) {
                document.getElementsByClassName( 'wrong' )[ 0 ].removeAttribute( 'hidden' );
                document.getElementById( 'email' )
                    .classList.add( 'is-invalid' );

            } else if ( getUrlParameter( 'm' ) && ( getUrlParameter( 'de' ) == 'ds' ) ) {
                document.getElementsByClassName( 'wrong' )[ 1 ].removeAttribute( 'hidden' );
                document.getElementById( 'scinput' )
                    .classList.add( 'is-invalid' );

            }
        }
	</script>
</body>

</html>
